{"version":3,"file":"js/app.a1e52d2f.js","mappings":"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","sources":["webpack://webapp_project/./src/App.vue","webpack://webapp_project/./src/components/main_layout.vue","webpack://webapp_project/./src/components/main_layout.vue?4ad2","webpack://webapp_project/./src/App.vue?7ccd","webpack://webapp_project/./src/store/index.js","webpack://webapp_project/./src/components/home_page.vue","webpack://webapp_project/./src/components/home_page.vue?2fce","webpack://webapp_project/./src/components/login_page.vue","webpack://webapp_project/./src/components/login_page.vue?1b37","webpack://webapp_project/./src/components/tc_OPsubject_page.vue","webpack://webapp_project/./src/components/tc_OPsubject_page.vue?06b7","webpack://webapp_project/./src/components/tc_adddata_bot.vue","webpack://webapp_project/./src/components/tc_adddata_bot.vue?048f","webpack://webapp_project/./src/components/tc_standardP_page.vue","webpack://webapp_project/./src/components/tc_standardP_page.vue?dabb","webpack://webapp_project/./src/components/tc_editStandardplan.vue","webpack://webapp_project/./src/components/tc_editStandardplan.vue?e518","webpack://webapp_project/./src/components/tc_student_list_page.vue","webpack://webapp_project/./src/components/tc_student_list_page.vue?12de","webpack://webapp_project/./src/components/tc_editStudent_plan.vue","webpack://webapp_project/./src/components/tc_editStudent_plan.vue?e636","webpack://webapp_project/./src/components/tc_submitplan_list.vue","webpack://webapp_project/./src/components/tc_submitplan_list.vue?de93","webpack://webapp_project/./src/components/tc_inspect_plan.vue","webpack://webapp_project/./src/components/tc_inspect_plan.vue?7344","webpack://webapp_project/./src/components/std_plan_page.vue","webpack://webapp_project/./src/components/std_plan_page.vue?46ae","webpack://webapp_project/./src/components/std_changePlan_page.vue","webpack://webapp_project/./src/components/std_changePlan_page.vue?b5fb","webpack://webapp_project/./src/components/tc_adjust_list.vue","webpack://webapp_project/./src/components/tc_adjust_list.vue?1bf8","webpack://webapp_project/./src/components/tc_inspect_adjust.vue","webpack://webapp_project/./src/components/tc_inspect_adjust.vue?530d","webpack://webapp_project/./src/components/tc_summery_plan.vue","webpack://webapp_project/./src/components/tc_summery_plan.vue?2bc4","webpack://webapp_project/./src/components/tc_summery_tranfer.vue","webpack://webapp_project/./src/components/tc_summery_tranfer.vue?6045","webpack://webapp_project/./src/components/tc_summery_std.vue","webpack://webapp_project/./src/components/tc_summery_std.vue?f4bc","webpack://webapp_project/./src/router/index.js","webpack://webapp_project/./src/main.js","webpack://webapp_project/webpack/bootstrap","webpack://webapp_project/webpack/runtime/chunk loaded","webpack://webapp_project/webpack/runtime/compat get default export","webpack://webapp_project/webpack/runtime/define property getters","webpack://webapp_project/webpack/runtime/global","webpack://webapp_project/webpack/runtime/hasOwnProperty shorthand","webpack://webapp_project/webpack/runtime/make namespace object","webpack://webapp_project/webpack/runtime/publicPath","webpack://webapp_project/webpack/runtime/jsonp chunk loading","webpack://webapp_project/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- ตรวจสอบสถานะผู้ใช้ -->\n    <MainLayout v-if=\"user\">\n      <!-- หากผู้ใช้ล็อกอินอยู่ โหลดเนื้อหาภายใน MainLayout -->\n      <router-view />\n    </MainLayout>\n    <router-view v-else /> <!-- หากผู้ใช้ยังไม่ได้ล็อกอิน แสดงเฉพาะ router-view -->\n  </div>\n</template>\n\n<script>\nimport MainLayout from \"./components/main_layout.vue\";\nimport { mapState, mapActions } from \"vuex\"; // ใช้ mapState และ mapActions เพื่อเชื่อมต่อกับ Vuex\n\nexport default {\n  name: \"App\",\n  components: {\n    MainLayout, // นำ MainLayout มาใช้\n  },\n  computed: {\n    ...mapState([\"user\"]), // เชื่อมกับ state user ใน Vuex\n  },\n  created() {\n    this.loadUserData(); // โหลดข้อมูลผู้ใช้เมื่อหน้าเว็บถูกสร้าง\n  },\n  methods: {\n    ...mapActions([\"setUserData\", \"clearUserData\"]), // เชื่อมกับ action ใน Vuex\n\n    // โหลดข้อมูลผู้ใช้จาก LocalStorage และเก็บใน Vuex\n    loadUserData() {\n      const userData = localStorage.getItem(\"user_data\");\n      if (userData) {\n        this.setUserData(JSON.parse(userData)); // เก็บข้อมูลใน Vuex\n      }\n    },\n\n    // ลบข้อมูลผู้ใช้ออกจาก LocalStorage และ Vuex\n    logout() {\n      this.clearUserData(); // ล้างข้อมูลใน Vuex\n      localStorage.removeItem(\"user_data\"); // ลบข้อมูลจาก LocalStorage\n      this.$router.push(\"/\"); // เปลี่ยนเส้นทางไปยังหน้า homepage\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\r\n  <div>\r\n    <!-- Header -->\r\n    <header>\r\n      <nav class=\"navbar\">\r\n        <div class=\"navbar-left\">\r\n          <span class=\"menu-icon\" @click=\"toggleSidebar\">\r\n            <i class=\"fas fa-bars menu-icon\" style=\"color: blue;\"></i>\r\n          </span>\r\n          <span class=\"navbar-title\">ระบบวางแผนการเรียน</span>\r\n        </div>\r\n        <!-- แสดงข้อมูลเฉพาะเมื่อ user มีค่า -->\r\n        <div class=\"navbar-right\" v-if=\"user && (isAdmin || isOfficer || isTeacher)\">\r\n          <div class=\"user-info\">\r\n            <p>{{ user.user_name }} {{ user.user_last }}</p>\r\n            <p>Status: {{ getStatusLabel(user.user_status) }}</p>\r\n          </div>\r\n          <button class=\"logout-button\" @click=\"logout\">Log out</button>\r\n        </div>\r\n\r\n        <div class=\"navbar-right\" v-if=\"user && isStudent\">\r\n          <div class=\"user-info\">\r\n            <p>{{ user.std_name }} {{ user.std_last }}</p>\r\n            <p>Status: {{ getStatusLabel(user.user_status) }}</p>\r\n          </div>\r\n          <button class=\"logout-button\" @click=\"logout\">Log out</button>\r\n        </div>\r\n\r\n        <!-- ปุ่มเข้าสู่ระบบ -->\r\n        <router-link to=\"/loginPage\" v-if=\"!user\">\r\n          <button class=\"login-button\">เข้าสู่ระบบ</button>\r\n        </router-link>\r\n      </nav>\r\n\r\n      <!-- Sidebar เมนูทางด้านซ้าย -->\r\n      <transition name=\"slide\" style=\"text-align: left;\">\r\n        <div :class=\"['sidebar', { 'sidebar-active': isSidebarVisible }]\" v-if=\"isStudent\">\r\n          <ul>\r\n            <router-link to=\"/\"><li>หน้าหลัก</li></router-link>\r\n            <router-link to=\"/student_plan\"><li>แผนการเรียน</li></router-link>\r\n          </ul>\r\n        </div>\r\n      </transition>\r\n      <transition name=\"slide\" style=\"text-align: left;\">\r\n        <div :class=\"['sidebar', { 'sidebar-active': isSidebarVisible }]\" v-if=\"isOfficer\">\r\n          <ul>\r\n            <router-link to=\"/\"><li>หน้าหลัก</li></router-link>\r\n            <router-link to=\"/open_subject\"><li>กำหนดการเปิดการสอน</li></router-link>\r\n            <router-link to=\"/standard_plan\"><li>จัดแผนการเรียนมาตรฐาน</li></router-link>\r\n            <router-link to=\"/student_plan_list\"><li>จัดแผนการเรียนรายบุคคล</li></router-link>\r\n          </ul>\r\n        </div>\r\n      </transition>\r\n      <transition name=\"slide\" style=\"text-align: left;\">\r\n        <div :class=\"['sidebar', { 'sidebar-active': isSidebarVisible }]\" v-if=\"isAdmin  || isTeacher\">\r\n          <ul class=\"list-group\">\r\n            <router-link to=\"/\"><li>หน้าหลัก</li></router-link>\r\n            <router-link to=\"/open_subject\"><li>กำหนดการเปิดการสอน</li></router-link>\r\n            <router-link to=\"/standard_plan\"><li>จัดแผนการเรียนมาตรฐาน</li></router-link>\r\n            <router-link to=\"/student_plan_list\"><li>จัดแผนการเรียนรายบุคคล</li></router-link>\r\n            <router-link to=\"/submitplan\"><li>ยืนยันแผนการเรียนรายบุคคล</li></router-link>\r\n            <router-link to=\"/adjust_list\"><li>อนุมัติขอปรับแผนการเรียน</li></router-link>\r\n            <label style=\"background-color: #8c8c8c; padding: 2px 1px;\"></label>\r\n            <label style=\"margin: 10px;\">รายงาน</label>\r\n            <router-link to=\"/summery_student\"><li>รายงานแผนการเรียนรายบุคคล</li></router-link>\r\n            <router-link to=\"/summery_tranfer\"><li>รายงานผลการเทียบโอน</li></router-link>\r\n            <router-link to=\"/summery_plan\"><li>รายงานแผนการเรียนประจำภาคเรียน</li></router-link>\r\n            \r\n            <!-- <router-link to=\"/data_bot\"><li>จัดการข้อมูลถามตอบ</li></router-link> -->\r\n          </ul>\r\n        </div>\r\n      </transition>\r\n      <transition name=\"slide\" style=\"text-align: left;\">\r\n        <div :class=\"['sidebar', { 'sidebar-active': isSidebarVisible }]\" v-if=\"!user\">\r\n          <ul>\r\n            <router-link to=\"/\"><li>หน้าหลัก</li></router-link>\r\n          </ul>\r\n        </div>\r\n      </transition>\r\n    </header>\r\n\r\n    <!-- Content -->\r\n    <main>\r\n      <slot></slot>\r\n    </main>\r\n\r\n    <!-- Footer -->\r\n    <footer>\r\n      <p>© 2024 มหาวิทยาลัยเทคโนโลยีราชมงคลอีสาน</p>\r\n    </footer>\r\n\r\n    <!-- ปุ่ม Chatbot -->\r\n    <!-- <div class=\"chat-bot\">\r\n      <button @click=\"openChatBot\"><i class=\"fa-solid fa-robot\"></i> Chat Bot</button>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { provide, computed } from \"vue\";\r\nimport { mapState, mapActions } from 'vuex';\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore(); // ดึง Store มาใช้\r\n    const user = computed(() => store.state.user); // รับค่าจาก Vuex\r\n\r\n    provide(\"user\", user); // ส่ง user ให้ Component ลูก\r\n\r\n    return { user };\r\n  },\r\n  name: \"MainLayout\",\r\n  computed: {\r\n    ...mapState({\r\n      user: (state) => state.user, // ดึงข้อมูลผู้ใช้จาก Vuex Store\r\n      isSidebarVisible: (state) => state.isSidebarVisible, // ดึงสถานะ Sidebar จาก Vuex\r\n    }),\r\n    isAdmin() {\r\n      return this.user && this.user.user_status === \"0\"; // Admin\r\n    },\r\n    isTeacher() {\r\n      return this.user && this.user.user_status === \"1\"; // Teacher\r\n    },\r\n    isOfficer() {\r\n      return this.user && this.user.user_status === \"2\"; // Officer\r\n    },\r\n    isStudent() {\r\n      return this.user && this.user.user_status === \"3\"; // Student\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions([\"clearUserData\", \"toggleSidebar\"]), // เชื่อม action toggleSidebar\r\n    logout() {\r\n    if (confirm(\"ต้องการออกจากระบบหรือไม่\")) {\r\n      localStorage.removeItem(\"user_data\"); // ลบข้อมูลผู้ใช้ใน localStorage\r\n      this.$store.dispatch(\"clearUserData\"); // ใช้ action clearUserData\r\n      this.$router.push(\"/\"); // กลับไปหน้า homepage\r\n    }\r\n  },\r\n\r\n    getStatusLabel(status) {\r\n      const statusMap = {\r\n        \"0\": \"ผู้ดูแลระบบ\",\r\n        \"1\": \"อาจารย์ประจำหลักสูตร\",\r\n        \"2\": \"เจ้าหน้าที่\",\r\n        \"3\": \"นักศึกษา\",\r\n      };\r\n      return statusMap[status] || \"ไม่ทราบสถานะ\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import \"@/assets/css/styles.css\";\r\n</style>","import { render } from \"./main_layout.vue?vue&type=template&id=16b65d26\"\nimport script from \"./main_layout.vue?vue&type=script&lang=js\"\nexport * from \"./main_layout.vue?vue&type=script&lang=js\"\n\nimport \"./main_layout.vue?vue&type=style&index=0&id=16b65d26&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=088c0e84\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=088c0e84&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createStore } from \"vuex\";\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: JSON.parse(localStorage.getItem(\"user_data\")) || null, // โหลดข้อมูลจาก localStorage ถ้ามี\r\n    isSidebarVisible: false, \r\n  },\r\n  mutations: {\r\n    // อัปเดตข้อมูลผู้ใช้\r\n    setUserData(state, userData) {\r\n      state.user = userData;\r\n      localStorage.setItem(\"user_data\", JSON.stringify(userData)); // บันทึกลง localStorage\r\n    },\r\n    // ล้างข้อมูลผู้ใช้\r\n    clearUserData(state) {\r\n      state.user = null;\r\n      localStorage.removeItem(\"user_data\"); // ลบออกจาก localStorage ด้วย\r\n    },\r\n    TOGGLE_SIDEBAR(state) {\r\n      state.isSidebarVisible = !state.isSidebarVisible;\r\n    },\r\n    SHOW_SIDEBAR(state) {\r\n      state.isSidebarVisible = true;\r\n    },\r\n    HIDE_SIDEBAR(state) {\r\n      state.isSidebarVisible = false;\r\n    },\r\n  },\r\n  actions: {\r\n    setUserData({ commit }, userData) {\r\n      commit(\"setUserData\", userData);\r\n    },\r\n    clearUserData({ commit }) {\r\n      commit(\"clearUserData\");\r\n    },\r\n    toggleSidebar({ commit }) {\r\n      commit(\"TOGGLE_SIDEBAR\");\r\n    },\r\n    showSidebar({ commit }) {\r\n      commit(\"SHOW_SIDEBAR\");\r\n    },\r\n    hideSidebar({ commit }) {\r\n      commit(\"HIDE_SIDEBAR\");\r\n    },\r\n  },\r\n  getters: {\r\n    isAuthenticated(state) {\r\n      return !!state.user;\r\n    },\r\n    getUser(state) {\r\n      return state.user;\r\n    },\r\n    isSidebarVisible(state) {\r\n      return state.isSidebarVisible;\r\n    },\r\n  },\r\n});\r\n","<!-- Home.vue -->\r\n<template>\r\n<MainLayout>\r\n<div class=\"main-content\" >\r\n     <template v-if=\"user.user_status === '3'\">\r\n\r\n     <div class=\"logo\">\r\n     <img src=\"@/assets/RMUTI_KORAT.png\" alt=\"Logo\" style=\"height: 200px;\">\r\n     </div>\r\n     <div class=\"table-headers\" style=\"  display: flex;\r\n                                        justify-content: space-between;\r\n                                        width: 40%;\r\n                                        text-align: left;\r\n                                        font-weight: bold;\r\n                                        margin-bottom: 10px;\r\n                                        margin-left: 20px;\">\r\n     <h2>แผนการเรียน</h2>\r\n     <h2>รายการแก้ไขแผน</h2>\r\n     </div>\r\n     <div class=\"tables-container\" \r\n     style=\" display: flex; /* ใช้ flexbox เพื่อจัดวางตารางในแนวนอน */\r\n               justify-content: space-between; /* ให้ตารางทั้งสองห่างกัน */\r\n               gap: 20px; /* ช่องว่างระหว่างตาราง */\">\r\n     \r\n     <div class=\"table-container\" style=\"width: 50%;\">\r\n     <ul class=\"space-y-2\">\r\n          <li v-for=\"(groups, category) in structure_group\" :key=\"category\">\r\n          <div @click=\"toggleCategory(category)\" class=\"cursor-pointer font-bold flex justify-between items-center p-2 rounded-md hover:bg-gray-200 transition duration-200 w-full\">\r\n               <span>{{ category }}</span>\r\n               <!-- ใช้ Font Awesome ไอคอน chevron-right สำหรับเมื่อหมวดหมู่ปิด และ chevron-down สำหรับเมื่อขยาย -->\r\n               <i :class=\"expandedCategories[category] ? 'fa-solid fa-chevron-down rotate-90' : 'fa-solid fa-chevron-right'\" class=\"transition-transform\"></i>\r\n          </div>\r\n          <ul v-if=\"expandedCategories[category]\" class=\"ml-6 mt-1 space-y-1 transition-all\">\r\n               <li v-for=\"group in groups\" :key=\"group.group_id\" class=\"text-gray-700 pl-2 border-l border-gray-300\">\r\n               <div @click=\"fetchSubject(group.group_id)\" class=\"cursor-pointer flex justify-between items-center p-2 rounded-md hover:bg-gray-200 transition duration-200 w-full\">\r\n               <span>{{ group.group_id + \". \" + group.group_name }}</span>\r\n               <!-- ใช้ Font Awesome ไอคอน chevron-right และ chevron-down สำหรับการหมุนในกลุ่ม -->\r\n               </div>\r\n               </li>\r\n          </ul>\r\n          </li>\r\n     </ul>\r\n     <p v-if=\"subject_list.length == 0\">ไม่มีข้อมูลวิชาในกลุ่มที่เลือก</p>\r\n          <div v-if=\"subject_list.length > 0\">\r\n               <table class=\"data-table\">\r\n               <thead>\r\n                    <tr>\r\n                    <th style=\"width: 140px;\">รหัสวิชา</th>\r\n                    <th style=\"width: 400px\">ชื่อวิชา</th>\r\n                    <!-- <th style=\"width: 100px\">หน่วยกิต</th> -->\r\n                    </tr>\r\n               </thead>\r\n               <tbody>\r\n                    <tr v-for=\"subject in subject_list\" :key=\"subject.subject_id\">\r\n                         <td>{{ subject.subject_id }}</td>\r\n                         <td>{{ subject.subject_nameTh }}</td>\r\n                    </tr>\r\n               </tbody>\r\n               </table>\r\n          </div>\r\n     </div>\r\n          <div >\r\n          <table class=\"data-table\">\r\n               <thead>\r\n                    <tr>\r\n                         <th>วันที่ขอปรับ</th>\r\n                         <th>วันที่พิจารณา</th>\r\n                         <th>ผู้พิจารณา</th>\r\n                         <th>สถานะ</th>\r\n                         <th>สาเหตุ</th>\r\n                    </tr>\r\n               </thead>\r\n               <tbody>\r\n                    <tr v-for=\"item in adjust_list\" :key=\"item.std_id\">\r\n                         <td >{{ item.date_add }}</td>\r\n                         <td >{{ item.date_updated || \"-\" }}</td>\r\n                         <td >{{ item.user_ap || \"-\" }}</td>\r\n                         <td v-if=\"item.status == 1\" style=\"color: green;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 2\" style=\"color: red;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 0\" style=\"color: blue;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td>{{ item.reason || \"-\" }}</td>\r\n                    </tr>\r\n               </tbody>\r\n          </table>\r\n     </div>\r\n     </div>\r\n     </template>\r\n     <template v-else>\r\n     <div class=\"welcome-text\">\r\n     <h1>ยินดีต้อนรับนักศึกษาทุกท่าน</h1>\r\n     <p>\r\n          นี่คือระบบวางแผนการเรียนให้นักศึกษาสามารถติดตามและแก้ไขแผนการเรียนของตนเองได้\r\n     </p>\r\n     </div>\r\n     <div class=\"logo\">\r\n     <img src=\"@/assets/RMUTI_KORAT.png\" alt=\"Logo\">\r\n     </div>\r\n     </template>\r\n</div>\r\n</MainLayout>\r\n</template>\r\n\r\n<script>\r\n     import axios from \"axios\";\r\n     import { inject, computed, ref } from \"vue\";\r\n     import MainLayout from './main_layout.vue';\r\n\r\n     export default {\r\n     setup() {\r\n          const user = inject(\"user\"); // รับค่า user จาก MainLayout.vue\r\n          const userData = computed(() => user?.value || {}); // ป้องกัน undefined\r\n          const expandedCategories = ref({}); // สำหรับ category\r\n          const expandedGroups = ref({}); // สำหรับ group_id\r\n\r\n          const toggleCategory = (category) => {\r\n               expandedCategories.value[category] = !expandedCategories.value[category];\r\n          };\r\n\r\n          const toggleGroup = (groupId) => {\r\n               expandedGroups.value[groupId] = !expandedGroups.value[groupId];\r\n          };\r\n\r\n          console.log(\"User Data:\", userData.value); // ตรวจสอบค่าที่รับมา\r\n\r\n          return { user: userData,\r\n                    expandedCategories,\r\n                    expandedGroups,\r\n                    toggleCategory,\r\n                    toggleGroup,\r\n     };\r\n     },\r\n     name: 'homePage',\r\n     components: {\r\n     MainLayout  \r\n     },\r\n     data() {\r\n     return {\r\n          group_list: [],\r\n          subject_list: [],\r\n          structure_group_subject: [],\r\n          adjust_list: [],\r\n     };\r\n     },\r\n     computed: {\r\n     structure_group() {\r\n          const groupedBySort = this.group_list.reduce((acc, group) => {\r\n          if (!acc[group.sort]) {\r\n          acc[group.sort] = [];\r\n          }\r\n          acc[group.sort].push(group);\r\n          return acc;\r\n          }, {});\r\n\r\n          const groupedSubjects = this.subject_list.reduce((acc, subject) => {\r\n          if (!acc[subject.group_id]) {\r\n          acc[subject.group_id] = [];\r\n          }\r\n          acc[subject.group_id].push(subject);\r\n          return acc;\r\n          }, {});\r\n\r\n          Object.values(groupedBySort).forEach((groupArray) => {\r\n          groupArray.forEach((group) => {\r\n          group.subjects = groupedSubjects[group.group_id] || [];\r\n          });\r\n          });\r\n\r\n          return groupedBySort;\r\n     },\r\n\r\n     },\r\n     methods: {\r\n     // ฟังก์ชันที่ใช้ในการดึงข้อมูลจาก API\r\n     async fetchStructure(){\r\n          try {\r\n          const response = await axios.get(\"http://127.0.0.1:3000/api/getStructure\",{\r\n\r\n          }); // URL ของ API\r\n          this.group_list = response.data.datalist; // เก็บข้อมูลใน state\r\n          console.log(response.data); // ตรวจสอบข้อมูลที่รับมาจาก API\r\n          \r\n          } catch (error) {\r\n          console.error(\"Error fetching subject:\", error);\r\n          }\r\n     },\r\n     async fetchSubject(group_id) {\r\n          try {\r\n          const response = await axios.post(\"http://127.0.0.1:3000/api/getSubject\",{\r\n               group_id: group_id,\r\n          }); // URL ของ API\r\n          console.log(response.data); // ตรวจสอบข้อมูลที่รับมาจาก API\r\n          if(response.data.result == \"1\"){\r\n               this.subject_list = response.data.datalist; // เก็บข้อมูลใน state\r\n               \r\n          }\r\n          else{\r\n               this.subject_list = []; // เก็บข้อมูลใน state\r\n          }\r\n          } catch (error) {\r\n          console.error(\"Error fetching subject:\", error);\r\n          }\r\n     },\r\n     async fetchAdjust_list(){\r\n          try{\r\n               const response = await axios.post(\"http://127.0.0.1:3000/api/getAdjust_list\",{\r\n               std_id: this.user.std_id,\r\n               }); // URL ของ API\r\n               if (response.data.result === \"1\") {\r\n                    console.log(response.data.datalist);\r\n                    this.adjust_list = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                    const sort_List = this.adjust_list.sort((a, b) => {\r\n                         const dateA = this.convert_date(a.date_add); // แปลงวันที่จาก พ.ศ. เป็น ค.ศ.\r\n                         const dateB = this.convert_date(b.date_add);\r\n                         return dateB - dateA; // เรียงจากใหม่ไปเก่า\r\n                    });\r\n                    this.adjust_list = sort_List; // เก็บข้อมูลที่ได้ใน state\r\n                    \r\n               } \r\n          }\r\n          catch (error) {\r\n               console.error(\"Error fetching student data:\", error);\r\n          }\r\n     },\r\n     convert_date(thaiDateStr) { // แปลงวันที่จาก พ.ศ. เป็น ค.ศ. ให้กับ JS\r\n          const [day, month, year] = thaiDateStr.split('-').map(Number);\r\n          const christianYear = year - 543; // แปลง พ.ศ. → ค.ศ.\r\n          return new Date(christianYear, month - 1, day); // เดือนใน JS เริ่มจาก 0\r\n     },\r\n\r\n     convertStatusToText(status) {\r\n          const statusMapping = {\r\n               1: \"ยืนยัน\",\r\n               2: \"ปฏิเสธ\",\r\n               0: \"รอพิจารณา\",\r\n          };\r\n          return statusMapping[status] || \"สถานะไม่ทราบ\";\r\n     },\r\n     },\r\n     async mounted() {\r\n          await this.fetchSubject();\r\n          await this.fetchAdjust_list();\r\n          await this.fetchStructure();\r\n     },\r\n     };\r\n</script>\r\n<!-- อิมพอร์ต CSS จากภายนอก -->\r\n<style>\r\n@import \"@/assets/css/styles.css\";\r\n</style>\r\n","import { render } from \"./home_page.vue?vue&type=template&id=44329c47\"\nimport script from \"./home_page.vue?vue&type=script&lang=js\"\nexport * from \"./home_page.vue?vue&type=script&lang=js\"\n\nimport \"./home_page.vue?vue&type=style&index=0&id=44329c47&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <MainLayout>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <h2>เข้าสู่ระบบ</h2>\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">ชื่อผู้ใช้</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            v-model=\"username\"\r\n            placeholder=\"กรอกชื่อผู้ใช้\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">รหัสผ่าน</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            placeholder=\"กรอกรหัสผ่าน\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"login-button\">เข้าสู่ระบบ</button>\r\n\r\n      </form>\r\n      <p v-if=\"message\" style=\"color: red;\">{{ message }}</p>\r\n    </div>\r\n  </div>\r\n  </MainLayout>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport MainLayout from './main_layout.vue';\r\nimport { mapActions } from 'vuex'; // ใช้ mapActions เพื่อเรียกใช้ action ใน store\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  components: {\r\n    MainLayout  \r\n  },\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      message: ''\r\n    };\r\n  },\r\n  created() {\r\n    // ตรวจสอบ localStorage และโหลดข้อมูลผู้ใช้ (ถ้ามี) ไปยัง Vuex\r\n    const storedUser = localStorage.getItem('user_data');\r\n    if (storedUser) {\r\n      this.setUserData(JSON.parse(storedUser)); // เก็บข้อมูลใน Vuex store\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['setUserData']),\r\n    async handleLogin() {\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:3000/api/getlogin', {\r\n          username: this.username,\r\n          password: this.password\r\n        });\r\n        console.log(response.data); // ตรวจสอบข้อมูลที่ตอบกลับมาจาก API\r\n        if (response.data.result == \"1\"){\r\n          this.message = response.data.message;\r\n          // ถ้าการ login สำเร็จ เก็บข้อมูลผู้ใช้ใน Vuex store\r\n          this.setUserData(response.data.datalist);\r\n          // เก็บข้อมูลผู้ใช้ใน Local Storage\r\n          localStorage.setItem(\"user_data\", JSON.stringify(response.data.datalist));\r\n          // เปลี่ยนหน้าไป Home\r\n          this.$router.push(\"/\");\r\n        }\r\n        else{\r\n          this.message = response.data.message;\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          this.message = error.response.data.message;\r\n        } else {\r\n          this.message = 'Error connecting to server.';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import { render } from \"./login_page.vue?vue&type=template&id=1d27133f\"\nimport script from \"./login_page.vue?vue&type=script&lang=js\"\nexport * from \"./login_page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<MainLayout>\r\n<div class=\"subject-table-page\">\r\n    <br>      \r\n    <h1>กำหนดการเปิดสอนรายวิชา</h1>\r\n      <select v-model=\"selectedSemester\" style=\"font-size: 20px;\">\r\n        <option :key=\"term1\" :value=\"1\">ภาคเรียนที่1</option>\r\n        <option :key=\"term2\" :value=\"2\">ภาคเรียนที่2</option>\r\n        <option :key=\"term\" :value=\"3\">ภาคเรียนฤดูร้อน</option>\r\n      </select>\r\n    <p v-if=\"selectedSemester == 3\" style=\"font-size: 24px; font-weight: bold;\">รายวิชาที่เปิดสอนในภาคเรียนฤดูร้อน </p>\r\n    <p v-else style=\"font-size: 24px; font-weight: bold;\">รายวิชาที่เปิดสอนในภาคเรียนที่ {{ selectedSemester }}</p>\r\n    <!-- ตารางข้อมูล -->\r\n    <table v-if=\"subjects.length\" class=\"subject-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>รหัสวิชา</th>\r\n          <th>ชื่อวิชา</th>\r\n          <th>หน่วยกิต</th>\r\n          <th>กลุ่มวิชา</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"item in subjects\" :key=\"item.code\">\r\n          <td>{{ item.subject_id }}</td>\r\n          <td style=\"text-align: left; width: 370px;\">{{ item.subject_name }}</td>\r\n          <td v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n            {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n          </td>\r\n          <td v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n            {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n          </td>\r\n          <td v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n            {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n          </td>\r\n          <td>{{ item.group_id }}</td>\r\n          <td>\r\n            <button class=\"btn-remove\" @click=\"del_openSubject(item.subject_id)\"><i class=\"fa-regular fa-trash-can\"></i></button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>ไม่มีข้อมูลการเปิดสอน</p>\r\n    <br>\r\n    <div class=\"dropdown-container\">\r\n      <select v-model=\"selectGroup\" @change=\"fetchStructure\" style=\"margin-right: 10px;\">\r\n        <option value=\"\" disabled>เลือกกลุ่มวิชา</option>\r\n          <option v-for=\"item in group_list\" :key=\"item.group_id\" :value=\"item.group_id\">\r\n            {{ item.group_id +\" \"+ item.group_name }}\r\n          </option>\r\n      </select>\r\n      <select v-model=\"selectsubject\" @change=\"fetchSubject\" style=\"margin-right: 10px;\" :disabled=\"!selectGroup\">\r\n          <option value=\"\" disabled>เลือกวิชา</option>\r\n          <option v-for=\"item in subject_list\" :key=\"item.subject_id\" :value=\"item.subject_id\">\r\n            {{ item.subject_nameTh }}\r\n          </option>\r\n        </select>\r\n        <button class=\"submit-stdplan-button\" style=\"font-size: 20px;\" @click=\"addSubject\"><i class=\"fa-solid fa-plus\"></i></button>\r\n      </div>\r\n      <h4 style=\"font-weight: lighter;\"> ***หมายเหตุ หน่วยกิตที่แสดงประกอบด้วย \r\n        <br> ผลรวมของหน่วยกิต(เวลาเรียนภาคทฤษฎี-เวลาเรียนภาคประติบัติ-เวลาเรียนนอกห้องเรียน)</h4>\r\n      <br><br><br>\r\n  </div>\r\n</MainLayout>\r\n</template>\r\n\r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  name: 'tc_open_subject',\r\n  components: {\r\n    MainLayout  \r\n  },\r\n\r\n  data() {\r\n    return {\r\n      subjects: [], // รายการวิชา\r\n      subject_list: [], // ข้อมูลรายวิชา\r\n      selected_course: \"\", // เลือกแผนการเรียน\r\n      course_list:[],\r\n      selectedSemester: 1, // เลือกเทอมค่าเริ่มต้นคือ 1\r\n      selectGroup: \"\",\r\n      selectsubject:\"\",\r\n      group_list: [],\r\n      group_id: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchSubjectlist() {\r\n      // ดึงข้อมูลวิชาตามโปรแกรมและภาคเรียน\r\n      if (!this.selectedSemester) return;\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n          term: this.selectedSemester\r\n        }); \r\n        if(response.data.result == \"1\"){\r\n            this.subjects = response.data.datalist; // เก็บข้อมูลใน state\r\n          }\r\n        else if(response.data.result == \"2\"){\r\n            this.subjects = [];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching subjects:\", error);\r\n      }\r\n    },\r\n    async fetchSubject() {\r\n      try {\r\n          console.log(this.group_id);\r\n          const response = await axios.post(\"http://127.0.0.1:3000/api/getSubject\",{\r\n            group_id: this.selectGroup\r\n          }); // URL ของ API\r\n          console.log(response.data); // ตรวจสอบข้อมูลที่รับมาจาก API\r\n          if(response.data.result == \"1\"){\r\n            this.subject_list = response.data.datalist; // เก็บข้อมูลใน state\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching subject:\", error);\r\n        }\r\n      },\r\n    async fetchStructure(){\r\n      try {\r\n          const response = await axios.get(\"http://127.0.0.1:3000/api/getStructure\",{\r\n          }); // URL ของ API\r\n          this.group_list = response.data.datalist; // เก็บข้อมูลใน state\r\n        } catch (error) {\r\n          console.error(\"Error fetching subject:\", error);\r\n        }\r\n    },\r\n    async addSubject(subject_id) {\r\n      if(confirm(\"ต้องการจะเพิ่มวิชานี้หรือไม่\")){\r\n        try {\r\n          // ตรวจสอบค่าที่ส่งมา\r\n          console.log(\"Subject ID ที่ส่งมา:\", subject_id);\r\n      \r\n          // ตัวอย่างการเรียกใช้งาน API พร้อมส่ง subject_id ไปด้วย\r\n          const response = await axios.post(\"http://127.0.0.1:3000/api/setOpensubject\", {\r\n            term: this.selectedSemester,\r\n            subject_id:this.selectsubject,\r\n            group_id:this.selectGroup\r\n          });\r\n      \r\n          // ตรวจสอบผลลัพธ์ที่ได้จาก API\r\n          console.log(response.data);\r\n          // เพิ่มข้อความแจ้งเตือนหรืออัปเดตข้อมูล\r\n          if (response.data.result === \"1\") {\r\n            const resetResponse = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n            open_id: this.selectedOpen_id,\r\n            term: this.selectedSemester\r\n            });\r\n              if(resetResponse.data.result === \"1\"){\r\n                this.subjects = resetResponse.data.datalist\r\n              }\r\n          } \r\n          else if(response.data.result ===\"2\"){\r\n            alert(\"ไม่สามารถเพิ่มวิชาได้! มีข้อมูลชุดนี้อยู่แล้ว\");\r\n          }\r\n          else{\r\n            alert(\"ไม่สามารถเพิ่มวิชาได้!\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error adding subject:\", error);\r\n        }\r\n    }\r\n},\r\n\r\nasync del_openSubject(subject_id){\r\n  if(confirm(\"ต้องการนำข้อมูลชุดนี้ออกหรือไม่\")){\r\n    try {\r\n        // ตัวอย่างการเรียกใช้งาน API พร้อมส่ง subject_id ไปด้วย\r\n        const response = await axios.post(\"http://127.0.0.1:3000/api/drop_open\", {\r\n          term:this.selectedSemester ,\r\n          subject_id: subject_id\r\n        });\r\n    \r\n        // ตรวจสอบผลลัพธ์ที่ได้จาก API\r\n        console.log(response.data);\r\n    \r\n        // เพิ่มข้อความแจ้งเตือนหรืออัปเดตข้อมูล\r\n        if (response.data.result === \"1\") {\r\n          const resetResponse = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n          open_id: this.selectedOpen_id,\r\n          term: this.selectedSemester\r\n          });\r\n            if(resetResponse.data.result === \"1\"){\r\n              this.subjects = resetResponse.data.datalist\r\n            }\r\n            else if(resetResponse.data.result === \"2\"){\r\n              this.subjects = [];\r\n            }\r\n\r\n        } else {\r\n          alert(\"ไม่สามารถลบข้อมูลได้\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding subject:\", error);\r\n      }\r\n  }\r\n},\r\n  },\r\n  watch: {\r\n          selectedSemester(newValue) {\r\n            console.log(\"Group ID changed:\", newValue);\r\n            this.fetchSubjectlist(); \r\n          },\r\n          selectGroup(newValue) {\r\n            console.log(\"Group ID changed:\", newValue);\r\n            this.fetchSubject(); // เรียก fetchSubject ทุกครั้งที่ selectGroup เปลี่ยนค่า\r\n          },\r\n     },\r\n  mounted() {\r\n    // โหลดโปรแกรมเมื่อหน้าถูก mount\r\n    this.fetchSubjectlist();\r\n    this.fetchSubject();\r\n    this.fetchStructure();\r\n  },\r\n};\r\n</script>\r\n<!-- อิมพอร์ต CSS จากภายนอก -->\r\n<style>\r\n@import \"@/assets/css/styles.css\";\r\n</style>\r\n","import { render } from \"./tc_OPsubject_page.vue?vue&type=template&id=9e682632\"\nimport script from \"./tc_OPsubject_page.vue?vue&type=script&lang=js\"\nexport * from \"./tc_OPsubject_page.vue?vue&type=script&lang=js\"\n\nimport \"./tc_OPsubject_page.vue?vue&type=style&index=0&id=9e682632&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n       <div class=\"question-form\">\r\n         <h2>เพิ่มคำถามและคำตอบ</h2>\r\n   \r\n         <!-- ฟอร์มกรอกคำถาม -->\r\n         <div class=\"form-group\">\r\n           <label for=\"question\">คำถาม:</label>\r\n           <input \r\n             v-model=\"question\" \r\n             id=\"question\" \r\n             type=\"text\" \r\n             placeholder=\"กรอกคำถาม\" \r\n             class=\"form-control\"\r\n             :class=\"{ 'is-invalid': questionError }\"\r\n           />\r\n           <div v-if=\"questionError\" class=\"invalid-feedback\">{{ questionError }}</div>\r\n         </div>\r\n         <button @click=\"addQuestion\" class=\"btn btn-primary\">เพิ่มคำถาม</button>\r\n         <br> <br>\r\n         <!-- ฟอร์มกรอกคำตอบ -->\r\n         <div class=\"form-group\">\r\n           <label for=\"answer\">คำตอบ:</label>\r\n           <input \r\n             v-model=\"answer\" \r\n             id=\"answer\" \r\n             type=\"text\" \r\n             placeholder=\"กรอกคำตอบ\" \r\n             class=\"form-control\"\r\n             :class=\"{ 'is-invalid': answerError }\"\r\n           />\r\n           <div v-if=\"answerError\" class=\"invalid-feedback\">{{ answerError }}</div>\r\n         </div>\r\n\r\n         <button @click=\"addAnswer\" class=\"btn btn-primary\">เพิ่มคำตอบ</button>\r\n       </div>\r\n     </MainLayout>\r\n   </template>\r\n   \r\n   <script>\r\n   import MainLayout from './main_layout.vue';\r\n   import axios from \"axios\";\r\n   \r\n   export default {\r\n     name: 'tc_adddata_bot',\r\n     components: {\r\n       MainLayout  \r\n     },\r\n     data() {\r\n       return {\r\n         // ฟอร์มคำถามและคำตอบ\r\n         question: '', // คำถามที่กรอก\r\n         answer: '',   // คำตอบที่กรอก\r\n         questionError: '', // ข้อความแจ้งเตือนสำหรับคำถาม\r\n         answerError: ''    // ข้อความแจ้งเตือนสำหรับคำตอบ\r\n       };\r\n     },\r\n     methods: {\r\n       // ตรวจสอบคำถามและส่งไปยัง API\r\n       async addQuestion() {\r\n         // ตรวจสอบว่ากรอกคำถามหรือไม่\r\n         if (!this.question) {\r\n           this.questionError = \"กรุณากรอกคำถาม\";\r\n           return;\r\n         } else {\r\n           this.questionError = ''; // ล้างข้อความแจ้งเตือน\r\n         }\r\n   \r\n         try {\r\n           const response = await axios.post('http://127.0.0.1:3000/api/setQuestion', {\r\n             question: this.question\r\n           });\r\n           console.log(response.data); // ตรวจสอบข้อมูลตอบกลับจาก API\r\n           if (response.data.result === \"1\") {\r\n             alert(\"เพิ่มคำถามเรียบร้อยแล้ว\");\r\n             this.question = ''; // ล้างฟิลด์คำถาม\r\n           } else {\r\n             this.questionError = response.data.message || \"ไม่สามารถเพิ่มคำถามได้\";\r\n           }\r\n         } catch (error) {\r\n           this.questionError = error.response?.data?.message || \"เกิดข้อผิดพลาดในการเชื่อมต่อ\";\r\n         }\r\n       },\r\n   \r\n       // ตรวจสอบคำตอบและส่งไปยัง API\r\n       async addAnswer() {\r\n         // ตรวจสอบว่ากรอกคำตอบหรือไม่\r\n         if (!this.answer) {\r\n            this.answerError = \"กรุณากรอกคำตอบ\";\r\n            return;\r\n         }  else {\r\n            this.answerError = ''; // ล้างข้อความแจ้งเตือน\r\n         }\r\n   \r\n         try {\r\n           const response = await axios.post('http://127.0.0.1:3000/api/setAnswer', {\r\n             answer: this.answer\r\n           });\r\n           console.log(response.data); // ตรวจสอบข้อมูลตอบกลับจาก API\r\n           if (response.data.result === \"1\") {\r\n             alert(\"เพิ่มคำตอบเรียบร้อยแล้ว\");\r\n             this.answer = ''; // ล้างฟิลด์คำตอบ\r\n           } else {\r\n             this.answerError = response.data.message || \"ไม่สามารถเพิ่มคำตอบได้\";\r\n           }\r\n         } catch (error) {\r\n           this.answerError = error.response?.data?.message || \"เกิดข้อผิดพลาดในการเชื่อมต่อ\";\r\n         }\r\n       }\r\n     }\r\n   };\r\n   </script>\r\n   <style>\r\n   @import \"@/assets/css/styles.css\";\r\n   </style>","import { render } from \"./tc_adddata_bot.vue?vue&type=template&id=8fcfe40a\"\nimport script from \"./tc_adddata_bot.vue?vue&type=script&lang=js\"\nexport * from \"./tc_adddata_bot.vue?vue&type=script&lang=js\"\n\nimport \"./tc_adddata_bot.vue?vue&type=style&index=0&id=8fcfe40a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n     <div class=\"form-container\">\r\n     <h1>จัดแผนการเรียนมาตรฐาน</h1>\r\n     <select v-model=\"select_year\" style=\"font-size: 20px;\">\r\n          <option value=\"\" disabled>เลือกรุ่นปีการศึกษา</option>\r\n          <option v-for=\"y in year\" :key=\"y\" :value=\"y\">{{ y }}</option>    \r\n     </select>\r\n    <!-- ตารางแสดงข้อมูล -->\r\n    <table class=\"data-stdplan-table\" style=\"width: 800px; margin-left: auto; margin-right: auto;\" >\r\n      <thead>\r\n        <tr>\r\n          <th>ชื่อแผนการเรียน</th>\r\n          <th>รุ่นปี</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in plans_list\" :key=\"index\">\r\n          <td style=\"width: 400px; text-align: left; \">   {{ item.plan_id }}</td>\r\n          <td style=\"width: 400px;\">{{ item.batch_year }}</td>\r\n          <td>\r\n               <div class=\"btn-group\">\r\n                    <button class=\"btn-add\" @click=\"editPlan(item.plan_id, item.batch_year)\" style=\"width: 100px;\">\r\n                         <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                    </button>\r\n               </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <br>\r\n     <!-- ฟอร์มกรอกข้อมูล -->    \r\n    <div class=\"dropdown-container\" style=\"width: 700px; margin-left: auto; margin-right: auto;\">\r\n     \r\n          <input type=\"text\" \r\n          id=\"plan_id\" \r\n          style=\"font-size: 16px; margin-right: 10px;\" \r\n          v-model=\"plan_id\" \r\n          placeholder=\"ระบุชื่อแผนการเรียน\" required />\r\n     \r\n     \r\n          <input type=\"text\" \r\n          id=\"batch_year\"\r\n          style=\"font-size: 16px; margin-right: 10px;\"\r\n          v-model=\"batch_year\"\r\n          placeholder=\"ระบุรุ่นปีการศึกษา\" required />\r\n          \r\n     <button type=\"submit\" class=\"submit-stdplan-button\" style=\"\r\n     font-size: 18px;   \r\n     margin-left: auto;\r\n     margin-right: auto;\r\n     display: block;\r\n     padding: 10px 30px\"\r\n     @click=\"addPlan\">\r\n          เพิ่ม\r\n     </button>\r\n    </div>\r\n  </div>\r\n     </MainLayout>\r\n</template>\r\n\r\n\r\n<script>\r\n     import MainLayout from './main_layout.vue'\r\n     import axios from \"axios\";\r\n     export default {\r\n          name: \"tc_standard_plan\",\r\n          components: {\r\n               MainLayout\r\n          },\r\n          data() {\r\n               return {\r\n                    plan_id: \"\",\r\n                    batch_year: \"\",\r\n                    dataList: [], // เก็บข้อมูลที่กรอก\r\n                    year: [],\r\n                    select_year:\"\",\r\n                    plans_list: [], // เก็บข้อมูลแผนการเรียน\r\n               };\r\n          },\r\n          methods:{\r\n               async fetchStandardPlan(){\r\n                    try {\r\n                         const response = await axios.get(\"http://127.0.0.1:3000/api/getStandard_plan\",{\r\n                         }); // URL ของ API\r\n                         this.dataList = response.data.datalist; // เก็บข้อมูลใน state\r\n                         this.extract_year(); // เรียกใช้ฟังก์ชันเพื่อดึงปีการศึกษา\r\n                    } catch (error) {\r\n                         console.error(\"Error fetching subject:\", error);\r\n                    }\r\n               },\r\n               extract_year(){\r\n                    const allYears = this.dataList.map(s => s.batch_year); // ดึง year จากแต่ละ student\r\n                    this.year = [...new Set(allYears)].sort((a, b) => b - a); // กรองซ้ำออกด้วย Set\r\n               },\r\n               extract_plans_by_year() {\r\n                    const plans = this.dataList.filter(data =>\r\n                         data.batch_year === this.select_year\r\n                    );\r\n                    this.plans_list = plans\r\n               },\r\n               async addPlan(){\r\n                    if(confirm(\"ต้องการที่จะเพิ่มข้อมูลหรือไม่\")){\r\n                         if (this.plan_id === \"\" || this.batch_year === \"\") {\r\n                              alert(\"กรุณากรอกข้อมูลให้ครบถ้วน!\");\r\n                              return;\r\n                         }\r\n\r\n                         try {\r\n                              // ตัวอย่างการเรียกใช้งาน API พร้อมส่ง subject_id ไปด้วย\r\n                              const response = await axios.post(\"http://127.0.0.1:3000/api/setStandard_plan\", {\r\n                              plan_id:this.plan_id,\r\n                              batch_year:this.batch_year,\r\n                              });\r\n                         \r\n                              // ตรวจสอบผลลัพธ์ที่ได้จาก API\r\n                              console.log(response.data);\r\n                         \r\n                              // เพิ่มข้อความแจ้งเตือนหรืออัปเดตข้อมูล\r\n                              if (response.data.result === \"1\") {\r\n                                   const response = await axios.get(\"http://127.0.0.1:3000/api/getStandard_plan\",{\r\n                                   }); // URL ของ API\r\n                                        this.dataList = response.data.datalist; // เก็บข้อมูลใน state\r\n                                        this.$router.push({\r\n                                             name: \"tc_editStandard_plan\",\r\n                                             query: { plan_id: this.plan_id, batch_year: this.batch_year },\r\n                                        });\r\n                              } else {\r\n                              alert(\"มีข้อมูลแผนการเรียนนี้อยู่แล้ว!\");\r\n                              }\r\n                         } catch (error) {\r\n                              console.error(\"Error adding subject:\", error);\r\n                         }\r\n                    }\r\n               },\r\n               async editPlan(plan_id, batch_year){\r\n                    // นำทางไปยังหน้าที่ต้องการและส่งค่า plan_id กับ term_year\r\n                    this.$router.push({\r\n                         name: \"tc_editStandard_plan\", // ชื่อ route ของหน้าเป้าหมายที่กำหนดใน router/index.js\r\n                         query: { plan_id: plan_id, batch_year: batch_year }, // ส่งข้อมูลผ่าน query\r\n                    });\r\n\r\n               },\r\n\r\n          },\r\n          watch: {\r\n               select_year(newYear) {\r\n                    console.log(\"Selected year:\", newYear);\r\n                    this.extract_plans_by_year(); // เรียกใช้ฟังก์ชันเพื่อดึงข้อมูลแผนการเรียนตามปีที่เลือก\r\n               },\r\n          },\r\n          mounted() {\r\n               // โหลดโปรแกรมเมื่อหน้าถูก mount\r\n               this.fetchStandardPlan();\r\n          },\r\n     }\r\n</script>","import { render } from \"./tc_standardP_page.vue?vue&type=template&id=d1f575cc\"\nimport script from \"./tc_standardP_page.vue?vue&type=script&lang=js\"\nexport * from \"./tc_standardP_page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n          <div class=\"form-container\">\r\n          <h1>จัดแผนการเรียนมาตรฐาน</h1>\r\n          <h2>ชื่อแผนการเรียน: {{ plan_id }} รุ่นปี: {{ batch_year }}</h2>\r\n          <!-- Popup สำหรับเปลี่ยนข้อมูล -->\r\n          <div v-if=\"change_popup\" class=\"popup-overlay\">\r\n                  <div class=\"popup-content\">\r\n                  <h3>ย้ายรายวิชา {{ sub_name }} ไป</h3>\r\n                  <div class=\"dropdown-container\" style=\" width: 600px;\">\r\n                       <select  v-model=\"select_year\" id=\"year\">\r\n                           <option value=\"\" disabled>เลือกปี</option>     \r\n                                   <option value=\"3\">ปี 3</option>\r\n                                   <option value=\"4\">ปี 4</option>\r\n                         </select>\r\n                         \r\n                         <select v-model=\"select_term\" id=\"term\">\r\n                              <option value=\"\" disabled>เลือกเทอม</option>    \r\n                              <template v-for=\"item in open_subject\" :key=\"item.subject_id\">\r\n                                   <option v-if=\"item.subject_id === sub_id\">{{ item.term }}</option>\r\n                              </template>\r\n                         </select>\r\n                    </div>\r\n                    <button class=\"btn-remove\"\r\n                    style=\"font-size: 18px; background-color: #00ff00; margin-right: 10px;\"\r\n                    @click=\"update_plan\">ยืนยัน</button>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; background-color: #a3a3a3;\" @click=\"closePopup\">ยกเลิก</button>\r\n                  </div>\r\n            </div>\r\n\r\n          <!-- ตารางข้อมูล -->\r\n               <div v-for=\"group in groupedPlan\" :key=\"group.yearTerm\" class=\"grouped-table\">\r\n                    <h3>ภาคเรียนที่ {{ group.term }} ปีการศึกษา {{ group.year === 4 ? Number(batch_year) + 1 : batch_year }}</h3>\r\n                    <table class=\"subject-table\">\r\n                         <thead>\r\n                              <tr>\r\n                                   <th style=\" width: 120px;\">รหัสวิชา</th>\r\n                                   <th style=\" width: 450px;\">ชื่อวิชา</th>\r\n                                   <th>หน่วยกิต</th>\r\n                                   <th>กลุ่มวิชา</th>\r\n                                   <th></th>\r\n                              </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                              <tr v-for=\"item in group.plans\" :key=\"item.code\">\r\n                                   <td>{{ item.subject_id }}</td>\r\n                                   <td style=\"text-align: left;\">{{ item.subject_name }}</td>\r\n                                   <td v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n                                   </td>\r\n                                   <td v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n                                   </td>\r\n                                   <td v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                                   </td>\r\n                                   <td v-if=\"item.group_id\">{{ item.group_id }}</td>\r\n                                   <td>\r\n                                   <div class=\"btn-group\" style=\"gap: 5px;\">\r\n                                   <button class=\"btn-remove\" \r\n                                        @click=\"openChangePopup(item.subject_name, item.subject_id)\" \r\n                                        style=\"background-color: #00ccff; margin-right: 10px;\">\r\n                                        <i class=\"fa-solid fa-repeat\"></i>\r\n                                   </button>\r\n                                   <button class=\"btn-remove\" @click=\"del_Subject(item.subject_id, group.term, group.year)\">\r\n                                        <i class=\"fa-regular fa-trash-can\"></i></button>\r\n                                   </div>\r\n                                   </td>\r\n                              </tr>\r\n                              <tr>\r\n                                   <td colspan=\"2\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                                   <td>{{ group.totalCredits }}</td>\r\n                                   <td colspan=\"2\"></td>\r\n                              </tr>\r\n                         </tbody>\r\n                    </table>\r\n                   \r\n                    <br>\r\n               <!-- กลุ่ม combobox เพิ่มข้อมูลวิชาเรียน -->\r\n               <div class=\"dropdown-container\" >\r\n               <select v-model=\"selectGroup\" @change=\"fetchStructure\" \r\n                    style=\"margin-right: 10px;\" \r\n                    :disabled=\"group.totalCredits >= 22 && spacialTerm\">\r\n                    <option value=\"\" disabled>เลือกกลุ่มวิชา</option>\r\n\r\n                    <option v-for=\"item in filteredGroups(group.term)\" :key=\"item.group_id\" :value=\"item.group_id\">\r\n                         {{ item.group_id + \" \" + item.group_name }}\r\n                    </option>\r\n               </select>\r\n               <select v-model=\"selectsubject\" @change=\"fetchOpen_subject\" \r\n                         style=\"margin-right: 10px;\" \r\n                         :disabled=\"!selectGroup ||(group.totalCredits >= 22 && spacialTerm)\">\r\n                    <option value=\"\" disabled>เลือกวิชา</option>\r\n                    \r\n                    <template v-for=\"item in group.open\" :key=\"item.subject_id\">\r\n                         <option v-if=\"selectGroup == item.group_id\" :value=\"item.subject_id\">\r\n                              {{ item.subject_name }}\r\n                         </option>\r\n                    </template>\r\n               </select>\r\n               <select v-model=\"selectGroup_id\" @change=\"fetchSubject\" style=\"width: 150px; margin-right: 10px;\" :disabled=\"!selectsubject || (group.totalCredits >= 22 && spacialTerm == true)\">\r\n                    <option value=\"\" disabled>กลุ่มวิชา</option>\r\n                    <option>{{ selectGroup }}</option>\r\n                    <option v-if=\"selectGroup != 2.2\"> 3.1</option>\r\n               </select>\r\n               <button v-if=\"(group.totalCredits  < 25 && spacialTerm == false) || !(group.totalCredits >= 22 && spacialTerm == true)\" type=\"submit\" class=\"submit-stdplan-button\" style=\"font-size: 20px;\" @click=\"addSubject(group.term, group.year, group)\" :disabled=\"!selectGroup_id\">\r\n                    <i class=\"fa-solid fa-plus\"></i>\r\n               </button>\r\n               </div>\r\n               \r\n     </div>\r\n     <h3>หน่วยกิตรวมในแผน: {{ totalAllCredits }}</h3>\r\n     <div class=\"btn-group\" style=\"margin-bottom: 20px;\">\r\n          <button class=\"btn-back\" @click=\"del_StandardPlan(plan_id, batch_year)\"  style=\"background-color: red;\">\r\n               <i class=\"fa-regular fa-trash-can\"> ลบแผน</i>\r\n          </button>\r\n          <button class=\"btn-back\" style=\" background-color:  #3385ff;\" @click=\"resetChanges\">\r\n               <i class=\"fa-solid fa-arrow-rotate-left\"> รีเซ็ตแผน</i>\r\n          </button>\r\n          <button class=\"btn-back\" @click=\"saveChanges\"  style=\" background-color: #33cc33;\">\r\n               <i class=\"fa-solid fa-floppy-disk\"> บันทึกแผน</i>\r\n          </button>\r\n     </div>\r\n     <div class=\"btn-group\">\r\n          <button class=\"btn-back\" style=\"font-size: 20px;\" @click=\"goBack\">\r\n               <i class=\"fa-solid fa-arrow-left-long\"> กลับ</i>\r\n          </button>\r\n     </div>\r\n\r\n     <h4 style=\"font-weight: lighter; margin-bottom: 100px;\"> ***หมายเหตุ หน่วยกิตที่แสดงประกอบด้วย\r\n          <br> ผลรวมของหน่วยกิต(เวลาเรียนภาคทฤษฎี-เวลาเรียนภาคประติบัติ-เวลาเรียนนอกห้องเรียน)</h4>\r\n</div>\r\n</MainLayout>\r\n</template>\r\n\r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\nname: \"tc_editStandard_plan\",\r\ncomponents: {\r\n       MainLayout  \r\n     },\r\ndata() {\r\n     return {\r\n     plan_id: this.$route.query.plan_id, \r\n     batch_year: this.$route.query.batch_year, \r\n     subjects: [], \r\n     data_list: [],\r\n     open_list:[],\r\n     groupedPlan: [],\r\n     subject_list:[],\r\n     group_list:[],\r\n     selectGroup:\"\",\r\n     selectsubject:\"\",\r\n     selectGroup_id:\"\",\r\n     spacialTerm:false,\r\n     open_subject:[],\r\n     temp_standrad_list:[],\r\n     change_popup: false,\r\n     sub_name: \"\",\r\n     sub_id: \"\",\r\n     select_term: \"\",\r\n     select_year: \"\",\r\n     sort_open_list: [],\r\n\r\n     };\r\n},\r\ncomputed: {\r\n     calculateTotalCredits() {\r\n          return (plans) => {\r\n               return plans.reduce((sum, plan) => {\r\n                    const totalCredits = plan.theory_credits + plan.practical_credits;\r\n                    return sum + totalCredits;\r\n               }, 0);\r\n          };\r\n     },\r\n     totalAllCredits() {\r\n        return this.groupedPlan.reduce((sum, group) => sum + group.totalCredits, 0);\r\n     },\r\n     filteredGroups() {\r\n        return (term) => { if(term == \"ภาคฤดูร้อน\"){\r\n                              term = 3\r\n                         }\r\n            return this.group_list.filter(item => \r\n                this.sort_open_list.some(openItem => openItem.group_id === item.group_id\r\n                 && openItem.term == term)\r\n            );\r\n        };\r\n    },\r\n},\r\nmethods: {\r\n     // เปิด Popup\r\n     openChangePopup(sub_name,sub_id) {\r\n          this.sub_name = sub_name;\r\n          this.sub_id = sub_id;\r\n          this.change_popup = true;\r\n     },\r\n          // ปิด Popup\r\n     closePopup() {\r\n          this.change_popup = false;\r\n     },\r\n     goBack() {\r\n          const old_data = this.data_list\r\n          const new_data = this.temp_standrad_list\r\n          if(JSON.stringify(old_data) !== JSON.stringify(new_data)){\r\n               if(confirm(\"คุณไม่ได้บันทึกข้อมูล ต้องการกลับหรือไม่?\")){\r\n                    this.$router.push('/standard_plan')\r\n               }\r\n          }\r\n          else{\r\n               this.$router.push('/standard_plan')\r\n          }\r\n     },\r\n     async fetchOpen_subject(){\r\n          console.log(this.selectGroup)\r\n          try{\r\n               const response = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n                         \r\n                    }); \r\n                    if(response.data.result == \"1\"){\r\n                         this.open_subject = response.data.datalist;\r\n                         this.sort_openlist();\r\n                         this.groupPlans();\r\n                         \r\n                    }\r\n                    else if(response.data.result == \"2\"){\r\n                         this.open_subject = [];\r\n                         this.sort_openlist();\r\n                         this.groupPlans();\r\n                         \r\n                    }\r\n          }\r\n          catch(error){\r\n               console.error(\"Error fetching subject:\", error);\r\n          }\r\n     },\r\n     async fetchStandard_list(){ // ดึงข้อมูลมาจากตาราง standardList\r\n          try {\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStandard_list\",{\r\n                         plan_id: this.plan_id\r\n                    }); \r\n                    if(response.data.result == \"1\"){\r\n                         console.log(response.data.datalist);\r\n                         this.data_list = response.data.datalist;\r\n                         this.temp_standrad_list = JSON.parse(JSON.stringify(this.data_list));\r\n                         this.sort_openlist();\r\n                         this.groupPlans();\r\n                    }\r\n                    else if(response.data.result == \"2\"){\r\n                         this.data_list = [];\r\n                         this.sort_openlist();\r\n                         this.groupPlans();\r\n                    }\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n     },\r\n     async fetchStructure(){ //ดึงข้อมูลกลุ่มวิชา\r\n               try {\r\n                    const response = await axios.get(\"http://127.0.0.1:3000/api/getStructure\",{\r\n                    }); // URL ของ API\r\n                    this.group_list = response.data.datalist;\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n     },\r\n     async fetchSubject() {\r\n          try {\r\n               if (!this.selectGroup) {\r\n                    this.subject_list = []; // ล้างรายการวิชาเมื่อไม่มีการเลือกกลุ่ม\r\n                    return;\r\n               }\r\n               \r\n               const response = await axios.post(\"http://127.0.0.1:3000/api/getSubject\", {\r\n                    group_id: this.selectGroup, \r\n               });\r\n               \r\n               if (response.data.result == \"1\") {\r\n                    this.subject_list = response.data.datalist;\r\n               } else {\r\n                    alert(\"ไม่มีข้อมูลวิชาในกลุ่มที่เลือก\");\r\n               }\r\n               } catch (error) {\r\n               console.error(\"Error fetching subject:\", error);\r\n          }\r\n     },\r\n     sort_openlist(){\r\n          // กรอง open_subject โดยใช้ temp_planlist\r\n          this.sort_open_list = this.open_subject.filter(item => {\r\n               return !this.temp_standrad_list.some(tempItem => tempItem.subject_id === item.subject_id);\r\n          });\r\n     },\r\n     async addSubject(term, year, group){ // เพิ่มวิชาลงตาราง standardPlanList\r\n          let totalCredit = this.calculateTotalCredits(group.plans);\r\n          let selectData = this.open_subject.find(item => item.subject_id === String(this.selectsubject));\r\n          let selectSubject = this.temp_standrad_list.find(item => item.subject_id === String(this.selectsubject));\r\n               if(selectSubject){\r\n                    alert(\"ไม่สามารถเพิ่มวิชาซ้ำได้\");\r\n                    return;\r\n               }\r\n          let pCredits = Number(selectData.practical_credits);\r\n          let tCredits = Number(selectData.theory_credits);\r\n          let newPcredits = totalCredit + pCredits;\r\n          let newTcredits = totalCredit + tCredits;\r\n\r\n          if(confirm(\"ต้องการเพิ่มวิชานี้หรือไม่\")){\r\n               // console.log(this.plan_id);\r\n               // console.log(this.selectsubject);\r\n               // console.log(this.subject_list);\r\n               // console.log(selectData);\r\n               // console.log(pCredits);\r\n               // console.log(tCredits);\r\n               // console.log(totalCredit);\r\n               // console.log(newPcredits);\r\n               // console.log(newTcredits);\r\n\r\n               \r\n               // ตรวจสอบว่าหน่วยกิตจะเกินหรือไม่\r\n               if (newPcredits > 25 || newTcredits >25 ) {\r\n                    alert(\"ไม่สามารถเพิ่มได้ เนื่องจากหน่วยกิตรวมเกิน 25\");\r\n                    return;\r\n               }\r\n               if((newPcredits > 22|| newTcredits > 22) && this.spacialTerm == true){\r\n                    alert(\"ไม่สามารถเพิ่มได้ เนื่องจากมีเทอมที่หน่วยกิตเกิน 25 แล้ว\");\r\n                    return;\r\n               }\r\n               if (newPcredits > 22 || newTcredits > 22) {\r\n                    if (!confirm(\"หน่วยกิตเกิน 22 ต้องการดำเนินการต่อหรือไม่?\")) {\r\n                         return;\r\n                    }\r\n               }\r\n               if(term == \"ภาคฤดูร้อน\"){\r\n                              term = 3\r\n                         }\r\n               // ส่ง group_id, practical_credits, subject_id, subject_nameTh, theory_credits,\r\n               const newPlan = {\r\n                    group_id:this.selectGroup_id,\r\n                    subject_id:selectData.subject_id,\r\n                    term: term,\r\n                    year: year,\r\n                    practical_credits: selectData.practical_credits,\r\n                    theory_credits: selectData.theory_credits,\r\n                    subject_name: selectData.subject_name,\r\n               };\r\n               // เพิ่มข้อมูลใหม่ทั้งหมดใน temp_planlist\r\n               this.temp_standrad_list.push(newPlan); // ใช้ spread operator เพื่อเพิ่มหลายๆ ข้อมูล\r\n               this.sort_openlist();\r\n               this.groupPlans(); // เรียก groupPlans เพื่ออัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n          }\r\n     },\r\n     update_plan() {\r\n                // กรองเฉพาะแผนการเรียนที่อยู่ในปีและเทอมที่เลือก\r\n               let filteredPlans = this.temp_standrad_list.filter(\r\n                    plan => plan.year === Number(this.select_year) && plan.term === Number(this.select_term));\r\n               \r\n               // ตรวจสอบว่ามีแผนการเรียนในปี/เทอมที่เลือกหรือไม่\r\n               console.log(\"Filtered Plans:\", filteredPlans);\r\n\r\n               // รวม Practical Credits และ Theory Credits แยกกัน\r\n               let totalPcredits = filteredPlans.reduce((sum, plan) => sum + Number(plan.practical_credits || 0), 0);\r\n               let totalTcredits = filteredPlans.reduce((sum, plan) => sum + Number(plan.theory_credits || 0), 0);\r\n\r\n               let selectData = this.open_subject.find(item => item.subject_id === String(this.sub_id));\r\n               if (!selectData) {\r\n                    alert(\"ไม่พบวิชาที่เลือก กรุณาลองใหม่\");\r\n                    return;\r\n               }\r\n\r\n               let pCredits = Number(selectData.practical_credits);\r\n               let tCredits = Number(selectData.theory_credits);\r\n               let totalCredits = totalPcredits + totalTcredits;\r\n               let newPcredits = totalCredits + pCredits;\r\n               let newTcredits = totalCredits + tCredits;\r\n\r\n               console.log(`New Practical Credits: ${newPcredits}, New Theory Credits: ${newTcredits}`);\r\n\r\n               if(confirm(\"ต้องการที่จะย้ายวิชานี้ใช่หรือไม่\")){\r\n                    // ตรวจสอบว่าหน่วยกิตจะเกินหรือไม่\r\n                    if (newPcredits > 25 || newTcredits >25 ) {\r\n                         alert(\"ไม่สามารถเพิ่มได้ เนื่องจากหน่วยกิตรวมเกิน 25\");\r\n                         return;\r\n                    }\r\n                    // if((newPcredits > 22|| newTcredits > 22) && this.spacialTerm == true){\r\n                    //      alert(\"ไม่สามารถเพิ่มได้ เนื่องจากมีเทอมที่หน่วยกิตเกิน 25 แล้ว\");\r\n                    //      return;\r\n                    // }\r\n                    if (newPcredits >= 22 || newTcredits > 22) {\r\n                         if (!confirm(\"หน่วยกิตในเทอมเกิน 22 ต้องการดำเนินการต่อหรือไม่?\")) {\r\n                              return;\r\n                         }\r\n                    }\r\n                    // ค้นหารายวิชาใน temp_planlist\r\n                    let existingPlan = this.temp_standrad_list.find(item => item.subject_id === this.sub_id);\r\n                    if (existingPlan) {\r\n                         // อัปเดต year และ term ของวิชาเดิม\r\n                         existingPlan.year = Number(this.select_year);\r\n                         existingPlan.term = Number(this.select_term);\r\n                         existingPlan.hasChanged = true; // ตั้งค่าว่าวิชานี้มีการเปลี่ยนแปลง\r\n                         console.log(\"อัปเดตข้อมูลใน temp_planlist สำเร็จ\");\r\n                         this.change_popup = false;\r\n                    } else {\r\n                         alert(\"ไม่พบรายวิชานี้ในแผนการเรียน\");\r\n                    }\r\n                    this.sort_openlist();\r\n                    this.groupPlans(); // อัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n\r\n                              }\r\n          },\r\n     async del_Subject(subject_id, term, year){\r\n          if(term == \"ภาคฤดูร้อน\"){\r\n                    term = 3\r\n               }\r\n               \r\n               if (confirm(\"คุณต้องการลบวิชานี้หรือไม่?\")) {\r\n                    // กรองข้อมูลใน temp_planlist โดยลบข้อมูลที่มีค่าตรงกับ subject_id, year, term\r\n                    this.temp_standrad_list = this.temp_standrad_list.filter(\r\n                              (plan) => !(plan.subject_id === subject_id && plan.term === term)\r\n                    );\r\n                    this.sort_openlist();\r\n                    this.groupPlans(); // เรียก groupPlans เพื่ออัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n                    console.log(`ลบข้อมูลที่มี subject_id=${subject_id}, year=${year}, term=${term} สำเร็จ`);\r\n               }\r\n     },\r\n     resetChanges() {\r\n               this.temp_standrad_list = JSON.parse(JSON.stringify(this.data_list)); // คืนค่าข้อมูล\r\n               this.sort_openlist();\r\n               this.groupPlans(); // จัดกลุ่มข้อมูล\r\n               alert(\"รีเซ็ตข้อมูลเรียบร้อยแล้ว!\"); // แจ้งเตือนว่าทำการรีเซ็ตแล้ว\r\n          },\r\n     async saveChanges() {\r\n               const oldData = this.data_list;\r\n               const newData = this.temp_standrad_list;\r\n               if (JSON.stringify(oldData) === JSON.stringify(newData)) {\r\n                    alert(\"ไม่มีการเปลี่ยนแปลงข้อมูล\");\r\n                    return;\r\n               }\r\n               if (confirm(\"คุณต้องการบันทึกการเปลี่ยนแปลงหรือไม่?\")) {\r\n\r\n                    try {\r\n                              // ตรวจสอบว่า temp_planlist เป็น array หรือยัง\r\n                              let planData = Array.isArray(this.temp_standrad_list) ? this.temp_standrad_list : [this.temp_standrad_list];\r\n                              console.log(\"planData:\", planData);\r\n                              // ส่งข้อมูลที่เป็น array ไปยัง API\r\n                              const response = await axios.post(\"http://127.0.0.1:3000/api/setStandard_list\", {\r\n                              plan_id: this.plan_id,\r\n                              plans: planData,\r\n                              });\r\n\r\n                              if (response.data.result === \"1\") {\r\n                                   alert(\"บันทึกสำเร็จ!\");\r\n                                   // อัปเดต std_planlist ด้วยข้อมูลจาก temp_planlist\r\n                                   this.data_list = JSON.parse(JSON.stringify(this.temp_standrad_list));\r\n                                   this.$router.push(\"/standard_plan\")\r\n                              } else {\r\n                                   alert(\"เกิดข้อผิดพลาดในการบันทึกข้อมูล\");\r\n                              }\r\n                    } catch (error) {\r\n                              console.error(\"Error saving changes:\", error);\r\n                    }\r\n               }\r\n     },\r\n     async del_StandardPlan(){\r\n          if(confirm(\"ต้องการลบข้อมูลชุดนี้ใช่หรือไม่\")){\r\n               try {\r\n                    // ตัวอย่างการเรียกใช้งาน API พร้อมส่ง subject_id ไปด้วย\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/dropStandard_plan\", {\r\n                         plan_id: this.plan_id,\r\n                         batch_year: this.batch_year,\r\n                    });\r\n               \r\n                    // ตรวจสอบผลลัพธ์ที่ได้จาก API\r\n                    console.log(response.data);\r\n               \r\n                    // เพิ่มข้อความแจ้งเตือนหรืออัปเดตข้อมูล\r\n                    if (response.data.result === \"1\") {\r\n                         alert(\"ลบข้อมูลสำเร็จ!\");\r\n                         this.$router.push('/standard_plan');\r\n                    } else {\r\n                         alert(\"ไม่สามารถลบข้อมูลได้\");\r\n                    }\r\n                    } catch (error) {\r\n                    console.error(\"Error adding subject:\", error);\r\n               }\r\n          }\r\n     },\r\n     groupPlans() {\r\n               this.spacialTerm = false;\r\n               // รายการปีและเทอมที่ต้องการ\r\n               const yearTermPairs = [\r\n               [3, 1],\r\n               [3, 2],\r\n               [3, 3],\r\n               [4, 1],\r\n               [4, 2],\r\n               ];\r\n\r\n               // จัดกลุ่มข้อมูลตามคู่ [ปี, เทอม]\r\n               this.groupedPlan = yearTermPairs.map(([year, term]) => {\r\n                    \r\n                    const plans = this.temp_standrad_list.filter(plan => plan.year === year && plan.term === term);\r\n                    const totalCredits = plans.reduce((sum, plan) => {\r\n                         if((sum + (plan.theory_credits + plan.practical_credits)) > 22){\r\n                              this.spacialTerm = true;\r\n                         }\r\n                         return sum + (plan.theory_credits + plan.practical_credits); \r\n                    }, 0);\r\n               return console.log(this.spacialTerm), {\r\n                    yearTerm: `${year}-${term}`, // สร้าง key สำหรับกลุ่ม\r\n                    year,\r\n                    term: term === 3 ? \"ภาคฤดูร้อน\" : term, // แปลงค่าเทอมที่เป็น 3\r\n                    plans: this.temp_standrad_list.filter(plan => plan.year === year && plan.term === term),\r\n                    totalCredits, // เพิ่มหน่วยกิตรวมในกลุ่ม\r\n                    open: this.sort_open_list.filter(plan => plan.term === term),\r\n               };\r\n               });\r\n          },\r\n},\r\n     watch: {\r\n          selectGroup(newValue) {\r\n               console.log(\"Group ID changed:\", newValue);\r\n               this.selectGroup_id = newValue;\r\n               this.fetchOpen_subject(); // เรียก fetchSubject ทุกครั้งที่ selectGroup เปลี่ยนค่า\r\n               this.selectsubject = \"\";\r\n               this.groupPlans();\r\n          },\r\n\r\n     },\r\n     mounted() {\r\n          // ตัวอย่าง: โหลดข้อมูลเพิ่มเติมด้วย API\r\n          console.log(\"Plan ID:\", this.plan_id);\r\n          console.log(\"Batch Year:\", this.batch_year);\r\n          console.log(this.spacialTerm);\r\n          this.fetchStandard_list();\r\n          this.fetchOpen_subject();\r\n          this.fetchStructure();\r\n          this.fetchSubject();\r\n     },\r\n};\r\n</script>\r\n\r\n","import { render } from \"./tc_editStandardplan.vue?vue&type=template&id=7bcd79aa\"\nimport script from \"./tc_editStandardplan.vue?vue&type=script&lang=js\"\nexport * from \"./tc_editStandardplan.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n          <div class=\"form-container\">\r\n          <h1>จัดแผนการเรียนรายบุคคล</h1>\r\n          <div class=\"dropdown-container\">\r\n               <select v-model=\"select_year\" style=\"font-size: 20px;\">\r\n                    <option value=\"\" disabled>เลือกรุ่นปีการศึกษา</option>\r\n                    <option v-for=\"y in year\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n               </select>\r\n               <select v-model=\"select_status\" style=\"font-size: 20px;\" :disabled=\"!select_year\" >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"0\">รอจัดแผนการเรียน</option>\r\n                    <option value=\"1\">ยืนยัน</option>\r\n                    <option value=\"2\">แก้ไข</option>\r\n                    <option value=\"3\">รอการยืนยัน</option>\r\n                    <option value=\"4\">ไม่สมบูรณ์</option>\r\n               </select>\r\n          </div>\r\n          <h2>ตารางรายชื่อนักศึกษา</h2>\r\n          <table class=\"student-table\" v-if=\"student_data.length\">\r\n               <thead>\r\n                    <tr>\r\n                         <th>รหัสนักศึกษา</th>\r\n                         <th>ชื่อ</th>\r\n                         <th>รุ่นปี</th>\r\n                         <th>สถานะ</th>\r\n                         <th></th>\r\n                    </tr>\r\n               </thead>\r\n               <tbody>\r\n                    <tr v-for=\"item in sortedStudents\" :key=\"item.std_id\">\r\n                         <td>{{ item.std_id }}</td>\r\n                         <td style=\"text-align: left;\">{{ item.std_name }} {{ item.std_last }}</td>\r\n                         <td>{{ item.batch_year }}</td>\r\n                         <td v-if=\"item.status == 1\" style=\"color: green;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 2\" style=\"color: red;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 3\" style=\"color: orange;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 4\" style=\"color: red;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 0\" style=\"color: blue;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td>\r\n                              <button v-if=\"item.status == 0 || item.status == 3 || item.status == 4\" style=\"width: 100px;\" class=\"btn-add\" @click=\"editPlan(item.std_id, item.stdplan_id, item.std_name, item.std_last, item.batch_year, item.status)\">จัดแผน</button>\r\n                              <button v-if=\"item.status == 2\" style=\"width: 100px;\" class=\"btn-remove\" @click=\"editPlan(item.std_id, item.stdplan_id, item.std_name, item.std_last, item.batch_year, item.status, item.reason)\">แก้ไข</button>\r\n                         </td>\r\n                    </tr>\r\n               </tbody>\r\n          </table>\r\n          <div v-if=\"!student_data.length\">\r\n               <h3>กรุณาเลือกรุ่นปีการศึกษา</h3>\r\n          </div>\r\n          </div>\r\n     </MainLayout>\r\n</template>\r\n\r\n<script>\r\n     import MainLayout from './main_layout.vue';\r\n     import axios from \"axios\";\r\n     export default {\r\n          name: \"tc_student_list\",\r\n          components: {\r\n               MainLayout\r\n          },\r\n          data() {\r\n               return {\r\n                    students: [], // เก็บข้อมูลนักศึกษา\r\n                    year: [], // เก็บข้อมูลปีการศึกษา\r\n                    student_data: [], // เก็บข้อมูลนักศึกษา\r\n                    sortedStudents: [], // เก็บข้อมูลนักศึกษาเรียงลำดับ\r\n                    select_year: \"\", // เก็บค่าที่เลือกจาก dropdown\r\n                    select_status: \"\", // เก็บค่าที่เลือกจาก dropdown\r\n               };\r\n          },\r\n          methods: {\r\n               async fetchStudent_list(){\r\n                    try{\r\n                         const response = await axios.get(\"http://127.0.0.1:3000/api/getStudent_plan\"); // URL ของ API\r\n                         if (response.data.result === \"1\") {\r\n                              console.log(response.data.datalist);\r\n                              this.students = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                              this.extract_year(); // เรียกใช้ฟังก์ชันเพื่อดึงปีการศึกษา\r\n                         } else {\r\n                              alert(\"ไม่มีข้อมูลนักศึกษาในระบบ\");\r\n                         }\r\n                    }\r\n                    catch(error){\r\n                         console.error(\"Error fetching student data:\", error);\r\n\r\n                    }\r\n               },\r\n               extract_year(){\r\n                    const allYears = this.students.map(s => s.batch_year); // ดึง year จากแต่ละ student\r\n                    this.year = [...new Set(allYears)].sort((a, b) => b - a); // กรองซ้ำออกด้วย Set\r\n               },\r\n               extract_students_by_year() {\r\n                    const student = this.students.filter(student =>\r\n                         student.batch_year === this.select_year\r\n                    );\r\n                    this.student_data = student\r\n                    this.sort_by_status(); // เรียงลำดับตามสถานะ\r\n               },\r\n               sort_by_status(){\r\n                    if (this.select_status === \"\") {\r\n                         const sortedStudents = this.students.filter(student =>\r\n                              student.batch_year === this.select_year\r\n                         );\r\n                         this.sortedStudents = sortedStudents\r\n                    }\r\n                    else { \r\n                              const sortedStudents = this.student_data.filter(student =>\r\n                              Number(student.status) === Number(this.select_status)\r\n                         );\r\n                         this.sortedStudents = sortedStudents\r\n                    }\r\n               },\r\n               convertStatusToText(status) {\r\n                    const statusMapping = {\r\n                         1: \"ยืนยัน\",\r\n                         2: \"แก้ไข\",\r\n                         3: \"รอการยืนยัน\",\r\n                         4: \"ไม่สมบูรณ์\",\r\n                         0: \"รอจัดแผนการเรียน\",\r\n                    };\r\n                    return statusMapping[status] || \"สถานะไม่ทราบ\";\r\n               },\r\n               async editPlan(std_id, stdplan_id, std_name, std_last ,year, status, reason){\r\n                    this.$router.push({\r\n                         name: \"tc_editStudent_plan\", // ชื่อ route ของหน้าเป้าหมายที่กำหนดใน router/index.js\r\n                         query: { std_id: std_id, stdplan_id: stdplan_id, std_name:std_name, std_last:std_last, year:year, status:status, reason:reason}, // ส่งข้อมูลผ่าน query\r\n                    });\r\n               }\r\n          },\r\n          watch: {\r\n               select_year(newYear) {\r\n                    console.log(\"Selected year:\", newYear);\r\n                    // ทำการกรองข้อมูลนักศึกษาโดยใช้ปีที่เลือก\r\n                    this.extract_students_by_year();\r\n                    this.select_status = \"\";\r\n                    this.sort_by_status(); // เรียงลำดับตามสถานะ \r\n               },\r\n               select_status(newValue){\r\n                    console.log(\"Selected year:\", newValue);\r\n                    this.sort_by_status(); // เรียงลำดับตามสถานะ\r\n               }\r\n          },\r\n          mounted() {\r\n               this.fetchStudent_list();\r\n          },\r\n     }\r\n</script>","import { render } from \"./tc_student_list_page.vue?vue&type=template&id=6a3737c6\"\nimport script from \"./tc_student_list_page.vue?vue&type=script&lang=js\"\nexport * from \"./tc_student_list_page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n          \r\n       <div class=\"form-container\">\r\n          <h1>จัดแผนการเรียนรายบุคคล</h1>\r\n          <h2>รหัสนักศึกษา: {{ std_id }} ชื่อ: {{ std_name }} {{ std_last }}</h2>\r\n          \r\n          <div v-if=\"status == 2\" class=\"fixed-box\">\r\n               <h3>สาเหตุ: {{ reason }}</h3>\r\n          </div>\r\n          <select v-if=\"status == 0\" v-model=\"selectPlan\" @change=\"fetchPlan_list\">\r\n               <option value=\"\" disabled>เลือกแผนการเรียน</option>\r\n               <template v-for=\"item in plans_list\" :key=\"item.plan_id\">\r\n               <option v-if=\"Number(year) == Number(item.batch_year)\" :value=\"item.plan_id\">\r\n                         {{ item.plan_id }}\r\n                    </option>\r\n               </template>\r\n         </select>\r\n         <!-- Popup สำหรับเปลี่ยนข้อมูล -->\r\n         <div v-if=\"change_popup\" class=\"popup-overlay\">\r\n                  <div class=\"popup-content\">\r\n                  <h3>ย้ายรายวิชา {{ sub_name }} ไป</h3>\r\n                  <div class=\"dropdown-container\" style=\" width: 600px;\">\r\n                       <select  v-model=\"select_year\" id=\"year\">\r\n                           <option value=\"\" disabled>เลือกปี</option>     \r\n                                   <option value=\"3\">ปี 3</option>\r\n                                   <option value=\"4\">ปี 4</option>\r\n                         </select>\r\n                         \r\n                         <select v-model=\"select_term\" id=\"term\">\r\n                              <option value=\"\" disabled>เลือกเทอม</option>    \r\n                              <template v-for=\"item in open_subject\" :key=\"item.subject_id\">\r\n                                   <option v-if=\"item.subject_id === sub_id\">{{ item.term }}</option>\r\n                              </template>\r\n                         </select>\r\n                    </div>\r\n                    <button class=\"btn-remove\"\r\n                    style=\"font-size: 18px; background-color: #00ff00; margin-right: 10px;\"\r\n                    @click=\"update_plan\">ยืนยัน</button>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; background-color: #a3a3a3;\" @click=\"closePopup\">ยกเลิก</button>\r\n                  </div>\r\n            </div>\r\n         <!-- แยกตารางตามคู่ [ปี, เทอม] -->\r\n               <div v-for=\"group in groupedPlan\" :key=\"group.yearTerm\" class=\"grouped-table\">\r\n               <h2>ภาคเรียนที่ {{ group.term }} ปีการศึกษา {{ group.year === 4 ? Number(year) + 1 : year }}</h2>\r\n                    <table class=\"data-stdplan-table\">\r\n                    <thead>\r\n                         <tr>\r\n                         <th style=\" width: 120px;\">รหัสวิชา</th>\r\n                         <th style=\" width: 450px;\">ชื่อวิชา</th>\r\n                         <th>หน่วยกิต</th>\r\n                         <th>กลุ่มวิชา</th>\r\n                         <th v-if=\"!group\"></th>\r\n                         </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         <tr v-for=\"item in group.plans\" :key=\"item.subject_id\">\r\n                         <td>{{ item.subject_id }}</td>\r\n                         <td style=\"text-align: left;\" v-if=\"item.subject_name\">{{ item.subject_name }}</td>\r\n                         <td style=\"text-align: left;\" v-if=\"!item.subject_name\">{{ item.subject_nameTh }}</td>\r\n                         <td v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n                         {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n                         </td>\r\n                         <td v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n                         {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n                         </td>\r\n                         <td v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n                         {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                         </td>\r\n                         <td>{{ item.group_id }}</td>\r\n                         <td>\r\n                         <div class=\"btn-group\" style=\"gap: 5px;\">\r\n                              <button class=\"btn-remove\" \r\n                                   @click=\"openChangePopup(item.subject_name, item.subject_id)\" \r\n                                   style=\"background-color: #00ccff; margin-right: 10px;\">\r\n                                   <i class=\"fa-solid fa-repeat\"></i>\r\n                              </button>\r\n                              \r\n                              <!-- ปุ่มลบข้อมูลในตาราง -->\r\n                              <button class=\"btn-remove\" @click=\"removeFromTemp_data(item.subject_id, group.year, group.term)\">\r\n                                   <i class=\"fa-regular fa-trash-can\"></i></button>\r\n                              <!-- ปุ่มจะแสดงออกมาถ้า status เท่ากับ 0 เพื่อไม่ให้ลบกับฐานข้อมูลได้ -->\r\n                              <!-- <button v-if=\"status == 0\" class=\"btn-remove\" @click=\"del_data(item.subject_id, group.year, group.term)\">\r\n                                   <i class=\"fa-regular fa-trash-can\"></i> !!!</button> -->\r\n                         </div>\r\n                         </td>\r\n                         </tr>\r\n                         <!-- หน่วยกิตรวมของแต่ล่ะเทอมของแต่ล่ะปี -->\r\n                         <tr>\r\n                                   <td colspan=\"2\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                                   <td>{{ group.totalCredits }}</td>\r\n                                   <td colspan=\"2\"></td>\r\n                         </tr>\r\n                    </tbody>\r\n                    </table>\r\n\r\n                    <br>\r\n                    <!-- กลุ่ม combobox เพิ่มข้อมูลวิชาเรียน -->\r\n                    <div class=\"dropdown-container\">\r\n                    <select v-model=\"selectGroup\" @change=\"fetchStructure\" style=\"margin-right: 10px;\" :disabled=\"group.totalCredits >= 22 && spacialTerm == true\">\r\n                         <option value=\"\" disabled>เลือกกลุ่มวิชา</option>\r\n                         <option v-for=\"item in filteredGroups(group.term)\" :key=\"item.group_id\" :value=\"item.group_id\">\r\n                         {{ item.group_id + \" \" + item.group_name }}\r\n                         </option>\r\n                         \r\n                    </select>\r\n                    <select  v-model=\"selectsubject\" @change=\"fetchOpen_subject\" style=\"margin-right: 10px;\" :disabled=\"!selectGroup || (group.totalCredits >= 22 && spacialTerm == true)\">\r\n                         <option value=\"\" disabled>เลือกวิชา</option>\r\n                         <template v-for=\"item in group.open\" :key=\"item.subject_id\">\r\n                         <option v-if=\"selectGroup == item.group_id\" :value=\"item.subject_id\">\r\n                              {{ item.subject_name }}\r\n                         </option>\r\n                         </template>\r\n                    </select>\r\n                    <select  v-model=\"selectGroup_id\" @change=\"fetchSubject\" style=\"width: 150px; margin-right: 10px;\" :disabled=\"(!selectsubject || (group.totalCredits >= 22 && spacialTerm == true)) \">\r\n                         <option value=\"\" disabled>กลุ่มวิชา</option>\r\n                         <option>{{ selectGroup }}</option>\r\n                         <option v-if=\"selectGroup != 2.2\"> 3.1</option>\r\n                    </select>\r\n                    <!-- เพิ่มข้อมูลเข้าตาราง -->\r\n                    <button v-if=\"((group.totalCredits  < 25 && spacialTerm == false) || !(group.totalCredits >= 22 && spacialTerm == true))\"\r\n                    type=\"submit\" class=\"submit-stdplan-button\" style=\"font-size: 20px;\" \r\n                    @click=\"addToTemp_data(group.year, group.term, group)\">\r\n                         <i class=\"fa-solid fa-plus\"></i></button>\r\n                    </div>\r\n               </div>\r\n          \r\n         <h4 style=\"font-weight: lighter;\"> ***หมายเหตุ หน่วยกิตที่แสดงประกอบด้วย \r\n          <br> ผลรวมของหน่วยกิต(เวลาเรียนภาคทฤษฎี-เวลาเรียนภาคประติบัติ-เวลาเรียนนอกห้องเรียน)</h4>\r\n          <div class=\"btn-group\">\r\n               <button class=\"btn-back\" style=\"font-size: 20px; width: 200px;\" @click=\"goBack\">\r\n                    <i class=\"fa-solid fa-arrow-left-long\"> กลับ</i>\r\n               </button>\r\n               <button v-if=\"status != 1\" class=\"btn-back\" style=\"font-size: 20px; width: 200px; background-color:  #3385ff;\" @click=\"resetChanges\">\r\n                    <i class=\"fa-solid fa-arrow-rotate-left\"> รีเซ็ตแผน</i>\r\n               </button>               \r\n               <button v-if=\"status != 1\" class=\"btn-back\" style=\"font-size: 20px; width: 200px; background-color: #33cc33;\" @click=\"saveChanges\">\r\n                    <i class=\"fa-solid fa-floppy-disk\"> บันทึกแผน</i>\r\n               </button>\r\n          </div>\r\n          <h2>หน่วยกิตเทียบได้: {{ totalTransferCredits }} หน่วยกิตรวมในแผน: {{ totalAllCredits }} หน่วยกิตที่ต้องเรียน: 125</h2>\r\n     <h2>สรุปแผนการเรียนทั้งหมด</h2>\r\n     <table class=\"data-stdplan-table\" style=\"margin-bottom: 100px;\">\r\n          <thead>\r\n          <tr>\r\n               <th>กลุ่มวิชา</th>\r\n               <th>หน่วยกิตที่ต้องเรียน</th>\r\n               <th>เทียบโอนได้</th>\r\n               <th>ในแผน</th>\r\n               <th>หน่วยกิตรวม</th>\r\n               <th>ขาด</th>\r\n               \r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <template v-for=\"(group, category) in credit_status\" :key=\"category\">\r\n          <!-- หัวข้อหลัก (sort) -->\r\n          <tr>\r\n            <td colspan=\"7\" style=\"text-align: left;\"><strong>{{ category }}</strong></td>\r\n          </tr>\r\n          <!-- รายการย่อยภายใต้หัวข้อหลัก -->\r\n          <template v-for=\"item in group\" :key=\"item._id\">\r\n          <tr v-if=\"item.status == '❌'\" style=\"color: #ff1a1a;\">\r\n               <td style=\"text-align: left; \">{{item.group_id +\" \"+ item.group_name }}</td>\r\n               <td>{{ item.required_credits }}</td>\r\n               <td>{{ item.tranfer_credits }}</td>\r\n               <td>{{ item.need_credit }}</td>\r\n               <td>{{ item.earned_credits }}</td>\r\n               <td>{{ item.credit_isneed}}</td>\r\n\r\n          </tr>\r\n          <tr v-if=\"item.status == '✔️' && item.required_credits == item.earned_credits\" style=\"color: #33cc33;\">\r\n               <td style=\"text-align: left;\">{{ item.group_id +\" \"+ item.group_name }}</td>\r\n               <td>{{ item.required_credits }}</td>\r\n               <td>{{ item.tranfer_credits }}</td>\r\n               <td>{{ item.need_credit }}</td>\r\n               <td>{{ item.earned_credits }}</td>\r\n               <td>{{ item.credit_isneed}}</td>\r\n          </tr>\r\n          <tr v-if=\"item.earned_credits > item.required_credits\" style=\"color: #ffcc00;\">\r\n               <td style=\"text-align: left;\">{{ item.group_id +\" \"+ item.group_name }}</td>\r\n               <td>{{ item.required_credits }}</td>\r\n               <td>{{ item.tranfer_credits }}</td>\r\n               <td>{{ item.need_credit }}</td>\r\n               <td>{{ item.earned_credits }}</td>\r\n               <td>{{ item.credit_isneed}}</td>\r\n          </tr>\r\n          </template>\r\n        </template>\r\n          </tbody>\r\n     </table>\r\n       </div>\r\n     </MainLayout>\r\n   </template>\r\n   \r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n     name: \"tc_editStudent_plan\",\r\n     components: {\r\n          MainLayout\r\n     },\r\n     computed: {\r\n          calculateTotalCredits() {\r\n               return (plans) => {\r\n               return plans.reduce((sum, plan) => {\r\n                    const totalCredits = plan.theory_credits + plan.practical_credits;\r\n                    return sum + totalCredits;\r\n               }, 0);\r\n               };\r\n          },\r\n          totalAllCredits() {\r\n               return this.groupedPlan.reduce((sum, group) => sum + group.totalCredits, 0);\r\n          },\r\n          filteredGroups() {\r\n               return (term) => { if(term == \"ภาคฤดูร้อน\"){\r\n                                        term = 3\r\n                                   }\r\n                    return this.group_list.filter(item => \r\n                         this.sort_open_list.some(openItem => openItem.group_id === item.group_id\r\n                         && openItem.term == term)\r\n                    );\r\n               };\r\n          },\r\n          credit_status() {\r\n                // ใช้ reduce() เพื่อจัดกลุ่มข้อมูลตาม `sort`\r\n               return this.group_list.reduce((acc, item) => {\r\n               if (!acc[item.sort]) {\r\n                    acc[item.sort] = [];\r\n               }\r\n               acc[item.sort].push(item);\r\n               return acc;\r\n               }, {});\r\n          },\r\n           // คำนวณหน่วยกิตรวมของ practical credits\r\n          totalPracticalCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.practical_credits || 0), 0\r\n               );\r\n          },\r\n          // คำนวณหน่วยกิตรวมของ theory credits\r\n          totalTheoryCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.theory_credits || 0), 0\r\n               );\r\n          },\r\n          // รวม practical + theory credits ทั้งหมด\r\n          totalTransferCredits() {\r\n               return this.totalPracticalCredits + this.totalTheoryCredits;\r\n          },\r\n     },\r\n     data(){\r\n          return{\r\n               std_id: this.$route.query.std_id,\r\n               stdplan_id: this.$route.query.stdplan_id,\r\n               std_name:this.$route.query.std_name,\r\n               std_last:this.$route.query.std_last,\r\n               year:this.$route.query.year,\r\n               status:this.$route.query.status,\r\n               reason:this.$route.query.reason,\r\n               std_planlist: [],\r\n               temp_planlist:[],\r\n               term:\"\",\r\n               groupedPlan: [],\r\n               selectGroup:\"\",\r\n               group_list:[],\r\n               subject_list:[],\r\n               plans_list:[],\r\n               selectPlan:\"\",\r\n               selectsubject:\"\",\r\n               selectGroup_id:\"\",\r\n               spacialTerm: false,\r\n               open_subject:[],\r\n               transfer_list:[],\r\n               change_popup: false,\r\n               sub_name: \"\",\r\n               sub_id: \"\",\r\n               select_term: \"\",\r\n               select_year: \"\",\r\n               sort_open_list: [],\r\n               \r\n          };\r\n     },\r\n     methods:{\r\n          // เปิด Popup\r\n          openChangePopup(sub_name,sub_id) {\r\n               this.sub_name = sub_name;\r\n               this.sub_id = sub_id;\r\n               this.change_popup = true;\r\n          },\r\n          // ปิด Popup\r\n          closePopup() {\r\n               this.change_popup = false;\r\n          },\r\n          async fetchOpen_subject(){ // ดึงข้อมูลวิชาที่เปิดสอน\r\n          console.log(this.selectGroup)\r\n          try{\r\n               const response = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n                         \r\n                    }); \r\n                    if(response.data.result == \"1\"){\r\n                         this.open_subject = response.data.datalist;\r\n                         this.sort_openlist(); \r\n                         this.groupPlans();\r\n                         \r\n                    }\r\n                    else if(response.data.result == \"2\"){\r\n                         this.open_subject = [];\r\n                         this.sort_openlist();\r\n                         this.groupPlans();\r\n                         \r\n                    }\r\n          }\r\n          catch(error){\r\n               console.error(\"Error fetching subject:\", error);\r\n          }\r\n          },\r\n          async fetchPlan_list(){\r\n               try {\r\n                    const response = await axios.get(\"http://127.0.0.1:3000/api/getStandard_plan\",{\r\n                    }); // URL ของ API\r\n                    this.plans_list = response.data.datalist; // เก็บข้อมูลใน state\r\n\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          async fetchTransfer_list(){ // ดึงข้อมูลแผนการเรียนที่เทียบโอนมา\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getTranfer_plan\",{\r\n                         std_id: this.std_id\r\n                    }); // URL ของ API\r\n                    if(response.data.result == \"1\"){\r\n                         console.log(\"..--..\",response.data.datalist);\r\n                         this.transfer_list = response.data.datalist; // เก็บข้อมูลใน transfer_list\r\n                    }\r\n                    else if(response.data.result == \"0\"){\r\n                         this.transfer_list = [];\r\n                    }\r\n\r\n               }\r\n               catch(error){\r\n                    console.error(\"Error fetching subject:\", error);  \r\n               }\r\n          },\r\n          async fetchStandardPlan_list() {\r\n               this.std_planlist = []; // ล้างข้อมูลก่อน \r\n               try {\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStandard_list\", {\r\n                         plan_id: this.selectPlan\r\n                    });\r\n\r\n                    if (response.data.result == \"1\") {\r\n                         console.log(response.data.datalist);\r\n                         this.std_planlist = response.data.datalist;\r\n                         // ตรวจสอบซ้ำระหว่าง temp_planlist และ transfer_list\r\n                         this.std_planlist = this.std_planlist.filter(tempItem => \r\n                              !this.transfer_list.some(transferItem => \r\n                                   tempItem.subject_id === transferItem.subject_id\r\n                              )\r\n                         );\r\n                         this.temp_planlist = JSON.parse(JSON.stringify(this.std_planlist)); // Clone ข้อมูล\r\n\r\n                         this.groupPlans(); // อัปเดตกลุ่มแผนการเรียน\r\n\r\n                    } else if (response.data.result == \"2\") {\r\n                         this.std_planlist = [];\r\n                         this.groupPlans();\r\n                    }\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          async fetchStudent_plan(){\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                         std_id: this.std_id\r\n                    });\r\n                    if (response.data.result === \"1\") {\r\n                         console.log(response.data.datalist);\r\n                         this.std_planlist = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                         this.temp_planlist = JSON.parse(JSON.stringify(this.std_planlist)); // clone ข้อมูล\r\n                         this.sort_openlist(); \r\n                         this.groupPlans(); // จัดกลุ่มข้อมูล\r\n\r\n                         // ตรวจสอบค่า status\r\n                         // if (this.status !== 0) {\r\n                         //      this.groupPlans(); // จัดกลุ่มโดยใช้ std_planlist\r\n                         // } else {\r\n                         //      this.temp_planlist = []; // ล้างข้อมูลชั่วคราว\r\n                         // }\r\n                              \r\n                    } else if(response.data.result === \"0\"){\r\n                         this.std_planlist = [];\r\n                         this.temp_planlist = []; // ล้างข้อมูลชั่วคราว\r\n                         this.groupPlans();\r\n                    }\r\n                    \r\n               }\r\n               catch (error) {\r\n                    console.error(\"Error fetching subjects:\", error);\r\n               }\r\n          },\r\n          async fetchStructure(){\r\n               try {\r\n                    const response = await axios.get(\"http://127.0.0.1:3000/api/getStructure\",{\r\n                         \r\n                    }); // URL ของ API\r\n                    this.group_list = response.data.datalist; // เก็บข้อมูลใน state\r\n                    this.mergeCredits(); // รวมหน่วยกิต\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          async fetchSubject() {\r\n               try {\r\n                    if (!this.selectGroup) {\r\n                         this.subject_list = []; // ล้างรายการวิชาเมื่อไม่มีการเลือกกลุ่ม\r\n                         return;\r\n                    }\r\n                    \r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getSubject\", {\r\n                         group_id: this.selectGroup, // ใช้ selectGroup ส่งไปยัง API\r\n                    });\r\n                    \r\n                    if (response.data.result == \"1\") {\r\n                         this.subject_list = response.data.datalist; // เก็บข้อมูลวิชาใน state\r\n                    } else {\r\n                         alert(\"ไม่มีข้อมูลวิชาในกลุ่มที่เลือก\");\r\n                    }\r\n                    } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          sort_openlist(){\r\n               // กรอง open_subject โดยใช้ temp_planlist\r\n               this.sort_open_list = this.open_subject.filter(item => {\r\n                    return !this.temp_planlist.some(tempItem => tempItem.subject_id === item.subject_id);\r\n               });\r\n          },\r\n          addToTemp_data(year, term, group) {\r\n               if(this.selectsubject == \"\" || this.selectGroup == \"\"){\r\n                    alert(\"กรุณาเลือกกลุ่มวิชาและรายวิชาที่ต้องการเพิ่ม\");\r\n                    return;\r\n\r\n               }\r\n               let totalCredit = this.calculateTotalCredits(group.plans);\r\n               let selectData = this.open_subject.find(item => item.subject_id === String(this.selectsubject));\r\n               let selectSubject = this.temp_planlist.find(item => item.subject_id === String(this.selectsubject));\r\n               if(selectSubject){\r\n                    alert(\"ไม่สามารถเพิ่มวิชาซ้ำได้\");\r\n                    return;\r\n               }\r\n               let pCredits = Number(selectData.practical_credits);\r\n               let tCredits = Number(selectData.theory_credits);\r\n               let newPcredits = totalCredit + pCredits;\r\n               let newTcredits = totalCredit + tCredits;\r\n               if(confirm(\"ต้องการจะเพิ่มวิชานี้หรือไม่\")){\r\n                    // ตรวจสอบว่าหน่วยกิตจะเกินหรือไม่\r\n                    if (newPcredits > 25 || newTcredits >25 ) {\r\n                         alert(\"ไม่สามารถเพิ่มได้ เนื่องจากหน่วยกิตรวมเกิน 25\");\r\n                         return;\r\n                    }\r\n                    if((newPcredits > 22|| newTcredits > 22) && this.spacialTerm == true){\r\n                         alert(\"ไม่สามารถเพิ่มได้ เนื่องจากมีเทอมที่หน่วยกิตเกิน 25 แล้ว\");\r\n                         return;\r\n                    }\r\n                    if (newPcredits >= 22 || newTcredits > 22) {\r\n                         if (!confirm(\"หน่วยกิตเกิน 22 ต้องการดำเนินการต่อหรือไม่?\")) {\r\n                              return;\r\n                         }\r\n                    }\r\n                    // ส่ง group_id, practical_credits, subject_id, subject_nameTh, theory_credits,\r\n                    const newPlan = {\r\n                         group_id:this.selectGroup_id,\r\n                         subject_id:selectData.subject_id,\r\n                         term: term,\r\n                         year: year,\r\n                         practical_credits: selectData.practical_credits,\r\n                         theory_credits: selectData.theory_credits,\r\n                         subject_name: selectData.subject_name,\r\n                    };\r\n                    // เพิ่มข้อมูลใหม่ทั้งหมดใน temp_planlist\r\n                    this.temp_planlist.push(newPlan); // ใช้ spread operator เพื่อเพิ่มหลายๆ ข้อมูล\r\n                    this.sort_openlist(); // เรียก sort_openlist เพื่อกรอง open_subject\r\n                    this.groupPlans(); // เรียก groupPlans เพื่ออัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n                    this.mergeCredits(); // อัปเดตกลุ่มแผนการเรียน\r\n                    console.log(\"เพิ่มข้อมูลใน temp_planlist สำเร็จ\");\r\n                    \r\n               }\r\n          },\r\n          update_plan() {\r\n                // กรองเฉพาะแผนการเรียนที่อยู่ในปีและเทอมที่เลือก\r\n               let filteredPlans = this.temp_planlist.filter(\r\n                    plan => plan.year === Number(this.select_year) && plan.term === Number(this.select_term));\r\n               \r\n               // ตรวจสอบว่ามีแผนการเรียนในปี/เทอมที่เลือกหรือไม่\r\n               console.log(\"Filtered Plans:\", filteredPlans);\r\n\r\n               // รวม Practical Credits และ Theory Credits แยกกัน\r\n               let totalPcredits = filteredPlans.reduce((sum, plan) => sum + Number(plan.practical_credits || 0), 0);\r\n               let totalTcredits = filteredPlans.reduce((sum, plan) => sum + Number(plan.theory_credits || 0), 0);\r\n\r\n               let selectData = this.open_subject.find(item => item.subject_id === String(this.sub_id));\r\n               if (!selectData) {\r\n                    alert(\"ไม่พบวิชาที่เลือก กรุณาลองใหม่\");\r\n                    return;\r\n               }\r\n\r\n               let pCredits = Number(selectData.practical_credits);\r\n               let tCredits = Number(selectData.theory_credits);\r\n               let totalCredits = totalPcredits + totalTcredits;\r\n               let newPcredits = totalCredits + pCredits;\r\n               let newTcredits = totalCredits + tCredits;\r\n\r\n               console.log(`New Practical Credits: ${newPcredits}, New Theory Credits: ${newTcredits}`);\r\n\r\n               if(confirm(\"ต้องการที่จะย้ายวิชานี้ใช่หรือไม่\")){\r\n                    // ตรวจสอบว่าหน่วยกิตจะเกินหรือไม่\r\n                    if (newPcredits > 25 || newTcredits >25 ) {\r\n                         alert(\"ไม่สามารถเพิ่มได้ เนื่องจากหน่วยกิตรวมเกิน 25\");\r\n                         return;\r\n                    }\r\n                    // if((newPcredits > 22|| newTcredits > 22) && this.spacialTerm == true){\r\n                    //      alert(\"ไม่สามารถเพิ่มได้ เนื่องจากมีเทอมที่หน่วยกิตเกิน 25 แล้ว\");\r\n                    //      return;\r\n                    // }\r\n                    if (newPcredits >= 22 || newTcredits > 22) {\r\n                         if (!confirm(\"หน่วยกิตในเทอมเกิน 22 ต้องการดำเนินการต่อหรือไม่?\")) {\r\n                              return;\r\n                         }\r\n                    }\r\n                    // ค้นหารายวิชาใน temp_planlist\r\n                    let existingPlan = this.temp_planlist.find(item => item.subject_id === this.sub_id);\r\n                    if (existingPlan) {\r\n                         // อัปเดต year และ term ของวิชาเดิม\r\n                         existingPlan.year = Number(this.select_year);\r\n                         existingPlan.term = Number(this.select_term);\r\n                         existingPlan.hasChanged = true; // ตั้งค่าว่าวิชานี้มีการเปลี่ยนแปลง\r\n                         console.log(\"อัปเดตข้อมูลใน temp_planlist สำเร็จ\");\r\n                         this.change_popup = false;\r\n                    } else {\r\n                         alert(\"ไม่พบรายวิชานี้ในแผนการเรียน\");\r\n                    }\r\n                    this.sort_openlist();\r\n                    this.groupPlans(); // อัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n                    this.mergeCredits(); // อัปเดตกลุ่มแผนการเรียน\r\n                              }\r\n          },\r\n          removeFromTemp_data(subject_id, year, term) {\r\n               if(term == \"ภาคฤดูร้อน\"){\r\n                    term = 3\r\n               }\r\n               \r\n               if (confirm(\"คุณต้องการลบวิชานี้หรือไม่?\")) {\r\n                    // กรองข้อมูลใน temp_planlist โดยลบข้อมูลที่มีค่าตรงกับ subject_id, year, term\r\n                    this.temp_planlist = this.temp_planlist.filter(\r\n                              (plan) => !(plan.subject_id === subject_id && plan.term === term)\r\n                    );\r\n                    this.sort_openlist();\r\n                    this.groupPlans(); // เรียก groupPlans เพื่ออัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n                    console.log(`ลบข้อมูลที่มี subject_id=${subject_id}, year=${year}, term=${term} สำเร็จ`);\r\n               }\r\n          },\r\n          resetChanges() {\r\n               this.temp_planlist = JSON.parse(JSON.stringify(this.std_planlist)); // คืนค่าข้อมูล\r\n               this.sort_openlist();\r\n               this.groupPlans(); // จัดกลุ่มข้อมูล\r\n               alert(\"รีเซ็ตข้อมูลเรียบร้อยแล้ว!\"); // แจ้งเตือนว่าทำการรีเซ็ตแล้ว\r\n          },\r\n\r\n          async saveChanges() {\r\n               const oldData = this.std_planlist; // เก็บข้อมูลเดิม\r\n               const newData = this.temp_planlist; // เก็บข้อมูลใหม่ที่แก้ไข\r\n               if (JSON.stringify(oldData) === JSON.stringify(newData)) {\r\n                    alert(\"ไม่มีการเปลี่ยนแปลงข้อมูล\");\r\n                    return;\r\n               }\r\n\r\n                  if (confirm(\"คุณต้องการบันทึกการเปลี่ยนแปลงหรือไม่?\")) {\r\n                         let status = 3;\r\n                         // ตรวจสอบว่ามีสถานะ \"❌\" ใน credit_status หรือไม่\r\n                         const hasIncompleteStatus = Object.values(this.credit_status).some(group =>\r\n                              group.some(item => item.status === '❌')\r\n                         );\r\n\r\n                         if (hasIncompleteStatus) {\r\n                              if (!confirm(\"คุณกำลังบันทึกข้อมูลที่ไม่สมบูรณ์ ต้องการดำเนินการต่อหรือไม่?\")) {\r\n                                   return;\r\n                              }\r\n                                   status = 4;    \r\n                         }\r\n                         try {\r\n                               // ตรวจสอบว่า temp_planlist เป็น array หรือยัง\r\n                               let planData = Array.isArray(this.temp_planlist) ? this.temp_planlist : [this.temp_planlist];\r\n                                   console.log(\"planData:\", planData);\r\n                               // ส่งข้อมูลที่เป็น array ไปยัง API\r\n                               const response = await axios.post(\"http://127.0.0.1:3000/api/updateStudentplan_list\", {\r\n                                     std_id: this.std_id,\r\n                                     plans: planData,\r\n                                     status: status  \r\n                               });\r\n\r\n                               if (response.data.result === \"1\") {\r\n                                     alert(\"บันทึกสำเร็จ!\");\r\n                                     // อัปเดต std_planlist ด้วยข้อมูลจาก temp_planlist\r\n                                     this.std_planlist = JSON.parse(JSON.stringify(this.temp_planlist));\r\n                                     this.$router.push(\"/student_plan_list\")\r\n                               } else {\r\n                                     alert(\"เกิดข้อผิดพลาดในการบันทึกข้อมูล\");\r\n                               }\r\n                         } catch (error) {\r\n                               console.error(\"Error saving changes:\", error);\r\n                         }\r\n                  }\r\n          },\r\n          groupPlans() {\r\n               // รายการปีและเทอมที่ต้องการ\r\n               const yearTermPairs = [\r\n               [3, 1],\r\n               [3, 2],\r\n               [3, 3],\r\n               [4, 1],\r\n               [4, 2],\r\n               ];\r\n               // จัดกลุ่มข้อมูลตามคู่ [ปี, เทอม]\r\n               this.groupedPlan = yearTermPairs.map(([year, term]) => {\r\n                    const plans = this.temp_planlist.filter(plan => plan.year === year && plan.term === term);\r\n                    const totalCredits = plans.reduce((sum, plan) => {\r\n                         if((sum + (plan.theory_credits + plan.practical_credits)) > 22){\r\n                              this.spacialTerm = true;\r\n                         }\r\n                         \r\n                         return sum + (plan.theory_credits + plan.practical_credits);\r\n                    }, 0);\r\n               return {\r\n                    yearTerm: `${year}-${term}`, // สร้าง key สำหรับกลุ่ม\r\n                    year,\r\n                    term: term === 3 ? \"ภาคฤดูร้อน\" : term, // แปลงค่าเทอมที่เป็น 3\r\n                    plans: this.temp_planlist.filter(plan => plan.year === year && plan.term === term),\r\n                    totalCredits,\r\n                    // เอาข้อมูลจาก open_subject มาใส่ใน open\r\n                    open: this.sort_open_list.filter(plan => plan.term === term),\r\n               };\r\n               });\r\n          },\r\n          mergeCredits() {\r\n               this.group_list = this.group_list.map(group => {\r\n                    // ค้นหาทุกแผนที่ตรงกับ group_id\r\n                    let plans = this.temp_planlist.filter(plan => String(plan.group_id) === String(group.group_id));\r\n                    let tranfers_plan = this.transfer_list.filter(plan => String(plan.group_id) === String(group.group_id));\r\n\r\n                    // รวมหน่วยกิตของทุกแผนที่เจอ\r\n                    let totalCredits_need = plans.reduce((sum, plan) => sum + (plan.theory_credits + plan.practical_credits), 0);\r\n                    let totalCredits_tranfer = tranfers_plan.reduce((sum, plan) => sum + (plan.theory_credits + plan.practical_credits), 0);\r\n                    let totalCredits_all = totalCredits_need + totalCredits_tranfer;\r\n\r\n                    let credit_need = group.credit - totalCredits_all;\r\n                    if (credit_need < 0) {\r\n                         credit_need = 0;\r\n                    }\r\n                    // เปรียบเทียบว่าเรียนครบหรือยัง\r\n                    let status = totalCredits_all >= group.credit ? \"✔️\" : \"❌\";\r\n\r\n                    return {\r\n                         ...group, // เก็บข้อมูลเดิมใน group\r\n                         _id: Date.now().toString(), // สร้าง ID ใหม่\r\n                         required_credits: group.credit, // หน่วยกิตที่ต้องเรียน\r\n                         tranfer_credits: totalCredits_tranfer, // หน่วยกิตที่เทียบโอนมา\r\n                         need_credit: totalCredits_need, // หน่วยกิตที่ต้องเรียน\r\n                         earned_credits: totalCredits_all, // หน่วยกิตทีรวมทั้งหมด\r\n                         credit_isneed: credit_need, // หน่วยกิตที่ยังขาด\r\n                         status: status // สถานะการผ่าน\r\n                    };\r\n               });\r\n\r\n               console.log(\"อัปเดต group_list:\", this.group_list);\r\n          },\r\n          // checkCompletion() {\r\n          //      const subject = this.group_list.find((s) => s.name === this.selectSubject);\r\n          //      if (subject) {\r\n          //      return subject.passedCredits >= subject.credit ? \"✔️ เรียนครบแล้ว\" : \"❌ ยังไม่ครบ\";\r\n          //      }\r\n          //      return \"❓ ไม่พบข้อมูล\";\r\n          // },\r\n          // getStatus(passed, required) {\r\n          //      return passed >= required ? \"✔️ ผ่าน\" : \"❌ ยังไม่ผ่าน\";\r\n          // },\r\n          \r\n          goBack() {\r\n          const old_data = this.std_planlist\r\n          const new_data = this.temp_planlist\r\n          // เปรียบเทียบข้อมูลเก่าและใหม่\r\n          if(JSON.stringify(old_data) !== JSON.stringify(new_data)){\r\n               if(confirm(\"คุณไม่ได้บันทึกข้อมูล ต้องการกลับหรือไม่?\")){\r\n                    this.$router.go(-1)\r\n               }\r\n          }\r\n          else{\r\n               this.$router.go(-1)\r\n          }\r\n          },\r\n\r\n     },\r\n          watch: {\r\n          selectGroup(newValue) {\r\n               console.log(\"Group ID changed:\", newValue);\r\n               this.selectGroup_id = newValue;\r\n               this.fetchOpen_subject(); // เรียก fetchOpeb_subject ทุกครั้งที่ selectGroup เปลี่ยนค่า\r\n          },\r\n          selectPlan(newValue){\r\n               this.selectPlan = newValue;\r\n               this.fetchStandardPlan_list();\r\n          },\r\n          temp_planlist(newValue) {\r\n               console.log(\"temp_planlist changed:\", newValue);\r\n               this.mergeCredits(); // อัปเดตกลุ่มแผนการเรียน\r\n          },\r\n     },\r\n     async mounted() {\r\n          await this.fetchStudent_plan();\r\n          await this.fetchTransfer_list();\r\n          await this.fetchSubject();\r\n          await this.fetchPlan_list();\r\n          await this.fetchOpen_subject();\r\n          this.fetchStructure();\r\n     }\r\n}\r\n</script>","import { render } from \"./tc_editStudent_plan.vue?vue&type=template&id=d48054a2\"\nimport script from \"./tc_editStudent_plan.vue?vue&type=script&lang=js\"\nexport * from \"./tc_editStudent_plan.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n          \r\n          <div class=\"form-container\">\r\n          <h1>ยืนยันแผนการเรียนรายบุคคล</h1>\r\n          <div class=\"dropdown-container\">\r\n               <select v-model=\"select_year\" style=\"font-size: 20px;\">\r\n                    <option value=\"\" disabled>เลือกรุ่นปีการศึกษา</option>\r\n                    <option v-for=\"y in year\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n               </select>\r\n               <select v-model=\"select_status\" style=\"font-size: 20px;\" :disabled=\"!select_year\" >\r\n                    <option value=\"\">ทั้งหมด</option>\r\n                    <option value=\"0\">รอจัดแผนการเรียน</option>\r\n                    <option value=\"1\">ยืนยัน</option>\r\n                    <option value=\"2\">แก้ไข</option>\r\n                    <option value=\"3\">รอการยืนยัน</option>\r\n                    <option value=\"4\">ไม่สมบูรณ์</option>\r\n               </select>\r\n          </div>\r\n          <h2>ตารางรายชื่อนักศึกษา</h2>\r\n          <table class=\"student-table\" v-if=\"student_data.length\">\r\n               <thead>\r\n          <tr>\r\n            <th>รหัสนักศึกษา</th>\r\n            <th>ชื่อ</th>\r\n            <th>รุ่นปี</th>\r\n            <th>สถานะ</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"item in sortedStudents\" :key=\"item.std_id\">\r\n               <td>{{ item.std_id }}</td>\r\n               <td style=\"text-align: left;\">{{ item.std_name }} {{ item.std_last }}</td>\r\n               <td>{{ item.batch_year }}</td>\r\n               <td v-if=\"item.status == 1\" style=\"color: green;\">{{ convertStatusToText(item.status) }}</td>\r\n               <td v-if=\"item.status == 2\" style=\"color: red;\">{{ convertStatusToText(item.status) }}</td>\r\n               <td v-if=\"item.status == 3\" style=\"color: orange;\">{{ convertStatusToText(item.status) }}</td>\r\n               <td v-if=\"item.status == 4\" style=\"color: red;\">{{ convertStatusToText(item.status) }}</td>\r\n               <td v-if=\"item.status == 0\" style=\"color: blue;\">{{ convertStatusToText(item.status) }}</td>\r\n               <td>\r\n                    <button v-if=\"item.status != 0\" class=\"btn-add\" style=\"font-size: 16px; width: 100px;\" @click=\"inspectPlan(item.std_id, item.stdplan_id, item.status, item.std_name, item.std_last, item.batch_year)\">\r\n                         <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                    </button>\r\n               </td>\r\n          </tr>\r\n        </tbody>\r\n          </table>\r\n          <div v-if=\"!student_data.length\">\r\n               <h3>กรุณาเลือกรุ่นปีการศึกษา</h3>\r\n          </div>\r\n          <!-- <button class=\"btn-back\" style=\"font-size: 16px; background-color: #00cc00; width: 200px;\" @click=\"openPreviewWindow\" v-if=\"student_data.length\">\r\n                    <i class=\"fa-solid fa-file-pdf\"></i> พิมพ์แผนการเรียน    \r\n          </button> -->\r\n     </div>\r\n     </MainLayout>\r\n</template>\r\n\r\n<script>\r\n     import MainLayout from './main_layout.vue';\r\n     import axios from \"axios\";\r\n     export default {\r\n          name: \"tc_submitplan_list\",\r\n          components: {\r\n               MainLayout\r\n          },\r\n          data() {\r\n               return {\r\n                    students: [], // เก็บข้อมูลนักศึกษา\r\n                    year: [], // เก็บข้อมูลปีการศึกษา\r\n                    student_data: [], // เก็บข้อมูลนักศึกษา\r\n                    sortedStudents: [], // เก็บข้อมูลนักศึกษาเรียงลำดับ\r\n                    select_year: \"\", // เก็บค่าที่เลือกจาก dropdown\r\n                    select_status: \"\", // เก็บค่าที่เลือกจาก dropdown\r\n               };\r\n          },\r\n          methods: {\r\n               async fetchStudent_list(){\r\n                    try{\r\n                         const response = await axios.get(\"http://127.0.0.1:3000/api/getStudent_plan\"); // URL ของ API\r\n                         if (response.data.result === \"1\") {\r\n                              console.log(response.data.datalist);\r\n                              this.students = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                              this.extract_year(); // เรียกใช้ฟังก์ชันเพื่อดึงปีการศึกษา\r\n                         } \r\n                    }\r\n                    catch(error){\r\n                         console.error(\"Error fetching student data:\", error);\r\n                    }\r\n               },\r\n               extract_year(){\r\n                    const allYears = this.students.map(s => s.batch_year); // ดึง year จากแต่ละ student\r\n                    this.year = [...new Set(allYears)].sort((a, b) => b - a); // กรองซ้ำออกด้วย Set\r\n               },\r\n               extract_students_by_year() {\r\n                    const student = this.students.filter(student =>\r\n                         student.batch_year === this.select_year\r\n                    );\r\n                    this.student_data = student\r\n                    this.sort_by_status(); // เรียงลำดับตามสถานะ\r\n               },\r\n               sort_by_status(){\r\n                    if (this.select_status === \"\") {\r\n                         const sortedStudents = this.students.filter(student =>\r\n                              student.batch_year === this.select_year\r\n                         );\r\n                         this.sortedStudents = sortedStudents\r\n                    }\r\n                    else { \r\n                              const sortedStudents = this.student_data.filter(student =>\r\n                              Number(student.status) === Number(this.select_status)\r\n                         );\r\n                         this.sortedStudents = sortedStudents\r\n                    }\r\n               },\r\n               convertStatusToText(status) { // แปลง status จากตัวเลขไปเป็น string ที่กำหนด \r\n                    \r\n                    const statusMapping = {\r\n                         1: \"ยืนยัน\",\r\n                         2: \"แก้ไข\",\r\n                         3: \"รอการยืนยัน\",\r\n                         4: \"ไม่สมบูรณ์\",\r\n                         0: \"รอจัดแผนการเรียน\",\r\n                    };\r\n                    return statusMapping[status] || \"สถานะไม่ทราบ\";\r\n               },\r\n               async inspectPlan(std_id, stdplan_id, status, std_name, std_last, year){ // ไปหน้าดูแผนการเรียนรายคน\r\n                    console.log(status)\r\n                    if(status == 0){\r\n                         status = \"0\"\r\n                    }\r\n                    else if(status == 2){\r\n                         status = \"2\"\r\n                    }\r\n                    else if(status == 3){\r\n                         status = \"3\"\r\n                    }\r\n                    else if(status == 4){\r\n                         status = \"4\"\r\n                    }\r\n                    else{\r\n                         status = \"1\"\r\n                    }\r\n                    console.log(status);\r\n                    this.$router.push({\r\n                         name: \"tc_inspect_plan\", \r\n                         query: { std_id: std_id, stdplan_id: stdplan_id, status: status, std_name: std_name, std_last: std_last, year:year}, // ส่งข้อมูลผ่าน query\r\n                    });\r\n               },\r\n               openPreviewWindow(){\r\n                    // กรองเฉพาะนักศึกษาที่มี status ยืนยัน\r\n                    const confirmedStudents = this.sortedStudents.filter(student => student.status === 1);\r\n                    console.log(\"นักศึกษาที่มี status = 1:\", confirmedStudents);\r\n\r\n                    const status = 1\r\n                    const title = encodeURIComponent(\"แผนการเรียนรายบุคคล\");\r\n                    const content = encodeURIComponent(JSON.stringify(confirmedStudents));\r\n\r\n                    const pdfUrl = `http://127.0.0.1:3000/api/pdf_generate?title=${title}&content=${content}&status=${status}`;\r\n\r\n                    // เปิดไฟล์ PDF ในแท็บใหม่ พร้อมชื่อไฟล์\r\n                    window.open(pdfUrl, \"_blank\");\r\n                         \r\n               },\r\n          },\r\n          watch: {\r\n               select_year(newYear) {\r\n                    console.log(\"Selected year:\", newYear);\r\n                    // ทำการกรองข้อมูลนักศึกษาโดยใช้ปีที่เลือก\r\n                    this.extract_students_by_year();\r\n                    this.select_status = \"\";\r\n                    this.sort_by_status(); // เรียงลำดับตามสถานะ \r\n               },\r\n               select_status(newValue){\r\n                    console.log(\"Selected year:\", newValue);\r\n                    this.sort_by_status(); // เรียงลำดับตามสถานะ\r\n               }\r\n          },\r\n          mounted() {\r\n          this.fetchStudent_list();\r\n          \r\n          },\r\n     }\r\n</script>\r\n","import { render } from \"./tc_submitplan_list.vue?vue&type=template&id=e7a1e2d4\"\nimport script from \"./tc_submitplan_list.vue?vue&type=script&lang=js\"\nexport * from \"./tc_submitplan_list.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n       <div class=\"form-container\">\r\n          <h1>แผนการเรียนรายบุคคล</h1>\r\n         <h2>รหัสนักศึกษา: {{ std_id }} ชื่อ: {{ std_name }} {{ std_last }} </h2>\r\n          <!-- แยกตารางตามคู่ [ปี, เทอม] -->\r\n          <div v-for=\"group in groupedPlan\" :key=\"group.yearTerm\" class=\"grouped-table\">\r\n          <h2>ภาคเรียนที่ {{ group.term }} ปีการศึกษา {{ group.year === 4 ? Number(year) + 1 : year }}</h2>\r\n               <table class=\"data-stdplan-table\">\r\n               <thead>\r\n                    <tr>\r\n                    <th>รหัสวิชา</th>\r\n                    <th>ชื่อวิชา</th>\r\n                    <th>หน่วยกิต</th>\r\n                    <th>กลุ่มวิชา</th>\r\n                    </tr>\r\n               </thead>\r\n               <tbody>\r\n                    <tr v-for=\"item in group.plans\" :key=\"item.subject_id\">\r\n                    <td>{{ item.subject_id }}</td>\r\n                    <td style=\"text-align: left; width: 450px;\">{{ item.subject_name }}</td>\r\n                    <td v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n                    {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n                    </td>\r\n                    <td v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n                    {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n                    </td>\r\n                    <td v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n                    {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                    </td>\r\n                    <td v-if=\"!item.group_id\">{{ item.subject_group_id }}</td>\r\n                    <td v-if=\"item.group_id\">{{ item.group_id }}</td>\r\n                    </tr>\r\n                    <!-- หน่วยกิตรวมของแต่ล่ะเทอมของแต่ล่ะปี -->\r\n                    <tr>\r\n                         <td colspan=\"2\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                         <td>{{ group.totalCredits }}</td>\r\n                         <td colspan=\"2\"></td>\r\n                    </tr>\r\n               </tbody>\r\n               </table>\r\n                    <br>\r\n                    \r\n          </div>\r\n          <h2>หน่วยกิตที่เทียบโอนมา: {{ totalTransferCredits }} หน่วยกิตรวมในแผน: {{ totalAllCredits }} หน่วยกิตที่ต้องเรียน: 125</h2>\r\n          \r\n          <h4 style=\"font-weight: lighter;\"> ***หมายเหตุ หน่วยกิตที่แสดงประกอบด้วย \r\n               <br> ผลรวมของหน่วยกิต(เวลาเรียนภาคทฤษฎี-เวลาเรียนภาคประติบัติ-เวลาเรียนนอกห้องเรียน)</h4>\r\n           <div  class=\"btn-group\"  v-if=\"status != 1 && status != 4\"\r\n               style=\"\r\n                         display: flex;\r\n                         justify-content: center;\r\n                         gap: 20px;\">\r\n               <div>\r\n               <!-- ปุ่มเปิด Popup -->\r\n               <button class=\"btn-remove\" style=\"font-size: 16px; margin-right: 10px; width: 150px;\" @click=\"openRejectPopup\">\r\n                    <i class=\"fa-solid fa-xmark\"></i> ส่งแก้ไขแผน\r\n               </button>\r\n\r\n               <!-- Popup สำหรับกรอกสาเหตุ -->\r\n               <div v-if=\"showRejectPopup\" class=\"popup-overlay\">\r\n                    <div class=\"popup-content\">\r\n                    <h3>กรุณากรอกสาเหตุที่ต้องการส่งแก้ไขแผน</h3>\r\n                    <textarea v-model=\"rejectReason\" rows=\"4\" cols=\"50\" style=\"font-size: 18px;\"></textarea>\r\n                    <br>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; background-color: #02bd2a; margin-right: 10px;\" @click=\"rejectPlan\">ยืนยัน</button>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; background-color: #a3a3a3;\" @click=\"closeRejectPopup\">ยกเลิก</button>\r\n                    </div>\r\n               </div>\r\n               </div>\r\n               \r\n               <button class=\"btn-add\" style=\"font-size: 16px; background-color: limegreen;  width: 150px;\" @click=\"submitPlan\">\r\n                    <i class=\"fa-solid fa-check\"></i> ยืนยันแผน\r\n               </button>\r\n          </div>\r\n          <div class=\"btn-group\" style=\"margin-bottom: 100px; gap:500px\">\r\n               <button class=\"btn-back\" style=\"font-size: 16px;\" @click=\"goBack\">\r\n                    <i class=\"fa-solid fa-arrow-left-long\"></i> กลับ\r\n               </button>\r\n               <button v-if=\"status != 1\" class=\"btn-back\" style=\"font-size: 16px; background-color: blue; margin-right: 25px;\" @click=\"editPlan\">\r\n                    <font-awesome-icon :icon=\"['fas', 'file-pen']\" /> แก้ไข\r\n               </button>\r\n               <button v-if=\"status == 1\" class=\"btn-back\" style=\"font-size: 16px; background-color: #00cc00; width: 200px;\" @click=\"openPreviewWindow\">\r\n                    <i class=\"fa-solid fa-file-pdf\"></i> พิมพ์แผนการเรียน    \r\n               </button>\r\n         </div>\r\n\r\n     </div>\r\n     </MainLayout>\r\n   </template>\r\n\r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n     name: \"tc_inspect_plan\",\r\n     components: {\r\n          MainLayout\r\n     },\r\n     data(){\r\n          return{\r\n               std_id: this.$route.query.std_id,\r\n               stdplan_id: this.$route.query.stdplan_id,\r\n               status: this.$route.query.status,\r\n               std_name:this.$route.query.std_name,\r\n               std_last:this.$route.query.std_last,\r\n               year:this.$route.query.year,\r\n               std_planlist: [],\r\n               term:\"\",\r\n               groupedPlan: [],\r\n               selectGroup:\"\",\r\n               group_list:[],\r\n               subject_list:[],\r\n               selectsubject:\"\",\r\n               showRejectPopup: false, // กำหนดค่าเริ่มต้น\r\n               rejectReason: \"\",        // ช่องเก็บสาเหตุที่ผู้ใช้กรอก\r\n               transfer_list:[],\r\n          };\r\n     },\r\n     computed: {\r\n          calculateTotalCredits() {\r\n               return (plans) => {\r\n               return plans.reduce((sum, plan) => {\r\n                    const totalCredits = plan.theory_credits + plan.practical_credits;\r\n                    return sum + totalCredits;\r\n               }, 0);\r\n               };\r\n          },\r\n          totalAllCredits() {\r\n               return this.groupedPlan.reduce((sum, group) => sum + group.totalCredits, 0);\r\n          },\r\n                    // คำนวณหน่วยกิตรวมของ practical credits\r\n                    totalPracticalCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.practical_credits || 0), 0\r\n               );\r\n          },\r\n          // คำนวณหน่วยกิตรวมของ theory credits\r\n          totalTheoryCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.theory_credits || 0), 0\r\n               );\r\n          },\r\n          // รวม practical + theory credits ทั้งหมด\r\n          totalTransferCredits() {\r\n               return this.totalPracticalCredits + this.totalTheoryCredits;\r\n          },\r\n     },\r\n     methods:{\r\n          async fetchStudent_plan(){\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                         std_id: this.std_id\r\n                    });\r\n                    if (response.data.result === \"1\") {\r\n                         console.log(response.data.datalist);\r\n                         this.std_planlist = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                         this.groupPlans(); // จัดกลุ่มข้อมูล\r\n                              \r\n                    } else {\r\n                         alert(\"ไม่มีข้อมูลนักศึกษาในระบบ\");\r\n                    }\r\n               }\r\n               catch (error) {\r\n                    console.error(\"Error fetching subjects:\", error);\r\n               }\r\n          },\r\n          async fetchTransfer_list(){ // ดึงข้อมูลแผนการเรียนที่เทียบโอนมา\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getTranfer_plan\",{\r\n                         std_id: this.std_id\r\n                    }); // URL ของ API\r\n                    if(response.data.result == \"1\"){\r\n                         console.log(\"..--..\",response.data.datalist);\r\n                         this.transfer_list = response.data.datalist; // เก็บข้อมูลใน transfer_list\r\n                    }\r\n                    else if(response.data.result == \"0\"){\r\n                         this.transfer_list = [];\r\n                    }\r\n\r\n               }\r\n               catch(error){\r\n                    console.error(\"Error fetching subject:\", error);  \r\n               }\r\n          },\r\n\r\n          groupPlans() {\r\n               // รายการปีและเทอมที่ต้องการ\r\n               const yearTermPairs = [\r\n               [3, 1],\r\n               [3, 2],\r\n               [3, 3],\r\n               [4, 1],\r\n               [4, 2],\r\n               ];\r\n\r\n               // จัดกลุ่มข้อมูลตามคู่ [ปี, เทอม]\r\n               this.groupedPlan = yearTermPairs.map(([year, term]) => {\r\n                    const plans = this.std_planlist.filter(plan => plan.year === year && plan.term === term);\r\n                    const totalCredits = plans.reduce((sum, plan) => {\r\n                         if((sum + (plan.theory_credits + plan.practical_credits)) > 22){\r\n                              this.spacialTerm = true;\r\n                         }\r\n                         return sum + (plan.theory_credits + plan.practical_credits); \r\n                    }, 0);\r\n               return {\r\n                    yearTerm: `${year}-${term}`, // สร้าง key สำหรับกลุ่ม\r\n                    year,\r\n                    term: term === 3 ? \"ภาคฤดูร้อน\" : term, // แปลงค่าเทอมที่เป็น 3\r\n                    plans: this.std_planlist.filter(plan => plan.year === year && plan.term === term),\r\n                    totalCredits,\r\n               };\r\n               });\r\n          },\r\n          async submitPlan(){ // ยืนยันแผนการเรียน\r\n               if(confirm(\"ต้องการยืนยันผลของแผนการเรียนนี้ใช่หรือไม่\")){\r\n                    try {\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/updateStudent_plan\", {\r\n                              std_id:this.std_id,\r\n                              stdplan_id: this.stdplan_id,\r\n                              status: 1\r\n                         });\r\n                         \r\n                         if (response.data.result == \"1\") {\r\n                              alert(\"ยืนยันผลสำเร็จ\");\r\n                              this.$router.push('/submitplan')\r\n                         } \r\n\r\n                         } catch (error) {\r\n                         console.error(\"Error fetching subject:\", error);\r\n                    }\r\n\r\n               }\r\n\r\n          },\r\n          // เปิด Popup\r\n          openRejectPopup() {\r\n               this.showRejectPopup = true;\r\n          },\r\n          // ปิด Popup\r\n          closeRejectPopup() {\r\n               this.showRejectPopup = false;\r\n          },\r\n          async rejectPlan(){ // สั่งแก้ไขแผนการเรียน\r\n               if(confirm(\"ต้องการยืนยันผลของแผนการเรียนนี้ใช่หรือไม่\")){\r\n                    try {\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/updateStudent_plan\", {\r\n                              std_id:this.std_id,\r\n                              stdplan_id: this.stdplan_id,\r\n                              reason: this.rejectReason,\r\n                              status: 2\r\n                         });\r\n                         \r\n                         if (response.data.result == \"1\") {\r\n                              alert(\"ยืนยันผลสำเร็จ\");\r\n                              this.$router.push('/submitplan')\r\n                         } \r\n                         \r\n                         } catch (error) {\r\n                         console.error(\"Error fetching subject:\", error);\r\n                    }\r\n\r\n               }\r\n\r\n          },\r\n          async editPlan(){\r\n                    this.$router.push({\r\n                         name: \"tc_editStudent_plan\", // ชื่อ route ของหน้าเป้าหมายที่กำหนดใน router/index.js\r\n                         query: { std_id: this.std_id, stdplan_id: this.stdplan_id, std_name:this.std_name, std_last:this.std_last, year:this.year}, // ส่งข้อมูลผ่าน query\r\n                    });\r\n               },\r\n               openPreviewWindow() {\r\n               const std_id = this.std_id;\r\n               const std_name = this.std_name;\r\n               const std_last = this.std_last;\r\n               const year = this.year;\r\n\r\n               const title = encodeURIComponent(\"แผนการเรียนรายบุคคล\");\r\n               const content = encodeURIComponent(JSON.stringify(this.std_planlist));\r\n\r\n               const pdfUrl = `http://127.0.0.1:3000/api/pdf_generate?title=${title}&content=${content}\r\n               &std_id=${std_id}&std_name=${std_name}&std_last=${std_last}&year=${year}`;\r\n\r\n               // เปิดไฟล์ PDF ในแท็บใหม่ พร้อมชื่อไฟล์\r\n               window.open(pdfUrl, \"_blank\");\r\n          },  \r\n          goBack() {\r\n          // กลับไปยังหน้าก่อนหน้า\r\n               this.$router.go(-1)\r\n          },\r\n\r\n     },\r\n          watch: {\r\n          selectGroup(newValue) {\r\n               console.log(\"Group ID changed:\", newValue);\r\n               this.fetchSubject(); // เรียก fetchSubject ทุกครั้งที่ selectGroup เปลี่ยนค่า\r\n          },\r\n     },\r\n     mounted() {\r\n          this.fetchStudent_plan();\r\n          this.fetchTransfer_list();\r\n     }\r\n}\r\n</script>","import { render } from \"./tc_inspect_plan.vue?vue&type=template&id=46975664\"\nimport script from \"./tc_inspect_plan.vue?vue&type=script&lang=js\"\nexport * from \"./tc_inspect_plan.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n       <div class=\"form-container\">\r\n          <h1>แผนการเรียนรายบุคคล</h1>\r\n         <h2>รหัสนักศึกษา: {{ user.std_id }} ชื่อนักศึกษา: {{ user.std_name }} {{ user.std_last }}</h2>\r\n\r\n          <!-- แยกตารางตามคู่ [ปี, เทอม] -->\r\n          <div v-for=\"group in groupedPlan\" :key=\"group.yearTerm\" class=\"grouped-table\">\r\n          <h2>ภาคเรียนที่ {{ group.term }} ปีการศึกษา {{ group.year === 4 ? Number(user.batch_year) + 1 : user.batch_year }}</h2>\r\n               <table class=\"data-stdplan-table\">\r\n               <thead>\r\n                    <tr>\r\n                    <th>รหัสวิชา</th>\r\n                    <th>ชื่อวิชา</th>\r\n                    <th>หน่วยกิต</th>\r\n                    <th>กลุ่มวิชา</th>\r\n                    </tr>\r\n               </thead>\r\n               <tbody>\r\n                    <tr v-for=\"item in group.plans\" :key=\"item.subject_id\">\r\n                    <td>{{ item.subject_id }}</td>\r\n                    <td style=\"text-align: left; width: 450px;\">{{ item.subject_name }}</td>\r\n                    <td v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n                    {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n                    </td>\r\n                    <td v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n                    {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n                    </td>\r\n                    <td v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n                    {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                    </td>\r\n                    <td v-if=\"!item.group_id\">{{ item.subject_group_id }}</td>\r\n                    <td v-if=\"item.group_id\">{{ item.group_id }}</td>\r\n                    </tr>\r\n                         <!-- หน่วยกิตรวมของแต่ล่ะเทอมของแต่ล่ะปี -->\r\n                         <tr>\r\n                              <td colspan=\"2\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                              <td>{{ group.totalCredits }}</td>\r\n                              <td colspan=\"2\"></td>\r\n                         </tr>\r\n               </tbody>\r\n               </table>\r\n          </div>\r\n          <h4 style=\"font-weight: lighter;\"> ***หมายเหตุ หน่วยกิตที่แสดงประกอบด้วย \r\n               <br> ผลรวมของหน่วยกิต(เวลาเรียนภาคทฤษฎี-เวลาเรียนภาคประติบัติ-เวลาเรียนนอกห้องเรียน)</h4>\r\n          <h2>หน่วยกิตเทียบมา: {{ totalTransferCredits }} หน่วยกิตรวมในแผน: {{ totalAllCredits }} หน่วยกิตรวมทั้งหมด: {{ totalTransferCredits + totalAllCredits }}</h2>\r\n          <div class=\"btn-group\">\r\n               <button class=\"btn-back\" style=\"font-size: 16px; background-color: #00a3cc; width: 200px;\" @click=\"goToChangePlan\">\r\n                    ขอปรับแผนการเรียน\r\n               </button>\r\n               <button class=\"btn-back\" style=\"font-size: 16px; background-color: #00cc00; width: 200px;\" @click=\"openPreviewWindow\">\r\n                    <i class=\"fa-solid fa-file-pdf\"></i> พิมพ์แผนการเรียน    \r\n               </button>\r\n          </div>\r\n\r\n          <h2>รายวิชาเทียบโอน</h2>\r\n          <table class=\"data-stdplan-table\" style=\"margin-bottom: 100px;\">\r\n               <thead>\r\n               <tr>\r\n                    <th>รหัสวิชา</th>\r\n                    <th>ชื่อวิชา</th>\r\n                    <th>หน่วยกิต</th>\r\n\r\n               </tr>\r\n               </thead>\r\n               <tbody>\r\n               <!-- รายการย่อยภายใต้หัวข้อหลัก -->\r\n               <tr v-for=\"item in transfer_list\" :key=\"item._id\">\r\n                    <td>{{ item.subject_id }}</td>\r\n                    <td style=\"text-align: left;\">{{ item.subject_name }}</td>\r\n                    <td>{{ item.practical_credits + item.theory_credits }}</td>\r\n               </tr>\r\n\r\n               </tbody>\r\n          </table>\r\n     </div>\r\n\r\n     </MainLayout>\r\n   </template>\r\n\r\n<script>\r\nimport { inject, computed } from \"vue\";\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n     setup() {\r\n          const user = inject(\"user\"); // รับค่า user จาก MainLayout.vue\r\n          const userData = computed(() => user?.value || {}); // ป้องกัน undefined\r\n\r\n          console.log(\"User Data:\", userData.value); // ตรวจสอบค่าที่รับมา\r\n\r\n          return { user: userData };\r\n     },\r\n     name: \"student_plan_page\",\r\n     components: {\r\n          MainLayout\r\n     },\r\n     data(){\r\n          return{\r\n               std_id:\"\",\r\n               stdplan_id: \"\",\r\n               status: \"\",\r\n               std_name:\"\",\r\n               std_last:\"\",\r\n               year:\"\",\r\n               std_planlist: [],\r\n               groupedPlan: [],\r\n               group_list:[],\r\n               transfer_list:[],\r\n               adjust_list: [],\r\n\r\n          };\r\n     },\r\n     computed: {\r\n\r\n          totalAllCredits() {\r\n               return this.groupedPlan.reduce((sum, group) => sum + group.totalCredits, 0);\r\n          },\r\n          // คำนวณหน่วยกิตรวมของ practical credits\r\n          totalPracticalCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.practical_credits || 0), 0\r\n               );\r\n          },\r\n          // คำนวณหน่วยกิตรวมของ theory credits\r\n          totalTheoryCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.theory_credits || 0), 0\r\n               );\r\n          },\r\n          // รวม practical + theory credits ทั้งหมด\r\n          totalTransferCredits() {\r\n               return this.totalPracticalCredits + this.totalTheoryCredits;\r\n          },\r\n     },\r\n     methods:{\r\n          async fetchStudent_plan(){\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                         std_id: this.user.std_id,\r\n                    });\r\n                    if (response.data.result === \"1\") {\r\n                         console.log(response.data.datalist);\r\n                         this.std_planlist = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                         this.groupPlans(); // จัดกลุ่มข้อมูล\r\n                              \r\n                    } \r\n               }\r\n               catch (error) {\r\n                    console.error(\"Error fetching subjects:\", error);\r\n               }\r\n          },\r\n          async fetchTransfer_list(){ // ดึงข้อมูลแผนการเรียนที่เทียบโอนมา\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getTranfer_plan\",{\r\n                         std_id: this.user.std_id\r\n                    }); // URL ของ API\r\n                    if(response.data.result == \"1\"){\r\n                         console.log(\"..--..\",response.data.datalist);\r\n                         this.transfer_list = response.data.datalist; // เก็บข้อมูลใน transfer_list\r\n                    }\r\n                    else if(response.data.result == \"0\"){\r\n                         this.transfer_list = [];\r\n                    }\r\n\r\n               }\r\n               catch(error){\r\n                    console.error(\"Error fetching subject:\", error);  \r\n               }\r\n          },\r\n          async fetchAdjust_list(){\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getAdjust_list\",{\r\n                    std_id: this.user.std_id,\r\n                    }); // URL ของ API\r\n                    if (response.data.result === \"1\") {\r\n                         console.log(response.data.datalist);\r\n                         this.adjust_list = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                         \r\n                    } else {\r\n                         // alert(\"ไม่มีข้อมูลนักศึกษาในระบบ\");\r\n                    }\r\n               }\r\n               catch{\r\n                    // console.error(\"Error fetching student data:\", error);\r\n               }\r\n          },\r\n          groupPlans() {\r\n               // รายการปีและเทอมที่ต้องการ\r\n               const yearTermPairs = [\r\n               [3, 1],\r\n               [3, 2],\r\n               [3, 3],\r\n               [4, 1],\r\n               [4, 2],\r\n               ];\r\n\r\n               // จัดกลุ่มข้อมูลตามคู่ [ปี, เทอม]\r\n               this.groupedPlan = yearTermPairs.map(([year, term]) => {\r\n                    const plans = this.std_planlist.filter(plan => plan.year === year && plan.term === term);\r\n                    const totalCredits = plans.reduce((sum, plan) => {\r\n                         if((sum + (plan.theory_credits + plan.practical_credits)) > 22){\r\n                              this.spacialTerm = true;\r\n                         }\r\n                         return sum + (plan.theory_credits + plan.practical_credits); \r\n                    }, 0);\r\n               return {\r\n                    yearTerm: `${year}-${term}`, // สร้าง key สำหรับกลุ่ม\r\n                    year,\r\n                    term: term === 3 ? \"ภาคฤดูร้อน\" : term, // แปลงค่าเทอมที่เป็น 3\r\n                    plans: this.std_planlist.filter(plan => plan.year === year && plan.term === term),\r\n                    totalCredits,\r\n               };\r\n               });\r\n          },\r\n          openPreviewWindow() {\r\n               const std_id = this.user.std_id;\r\n               const std_name = this.user.std_name;\r\n               const std_last = this.user.std_last;\r\n               const year = this.user.batch_year;\r\n\r\n               const title = encodeURIComponent(\"แผนการเรียนรายบุคคล\");\r\n               const content = encodeURIComponent(JSON.stringify(this.std_planlist));\r\n\r\n               const pdfUrl = `http://127.0.0.1:3000/api/pdf_generate?title=${title}&content=${content}\r\n               &std_id=${std_id}&std_name=${std_name}&std_last=${std_last}&year=${year}`;\r\n\r\n               // เปิดไฟล์ PDF ในแท็บใหม่ พร้อมชื่อไฟล์\r\n               window.open(pdfUrl, \"_blank\");\r\n          },     \r\n\r\n          goToChangePlan() {\r\n               const adjust_status = this.adjust_list.find(item => item.status === 0);\r\n               if(adjust_status){\r\n                    alert(\"ไม่สามารถขอปรับแผนการเรียนได้เนื่องจากมีการขอปรับที่รอพิจารณาอยู่\");\r\n                    return;\r\n               }\r\n               else{\r\n                    this.$router.push(\"/student_change_plan\");\r\n               }\r\n          },    \r\n     },\r\n     mounted() {\r\n          this.fetchStudent_plan();\r\n          this.fetchTransfer_list();\r\n          this.fetchAdjust_list();\r\n     //      this.fetchStructure();\r\n     //      this.fetchSubject();\r\n          \r\n     }\r\n}\r\n</script>","import { render } from \"./std_plan_page.vue?vue&type=template&id=4e8e0031\"\nimport script from \"./std_plan_page.vue?vue&type=script&lang=js\"\nexport * from \"./std_plan_page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n       <div class=\"form-container\">\r\n          <h1>ขอปรับแผนการเรียน</h1>\r\n         <h2> รหัสนักศึกษา: {{ user.std_id }} ชื่อนักศึกษา: {{ user.std_name }} {{ user.std_last }} </h2>\r\n          <!-- Popup สำหรับเปลี่ยนข้อมูล -->\r\n            <div v-if=\"change_popup\" class=\"popup-overlay\">\r\n                  <div class=\"popup-content\">\r\n                  <h3>ย้ายรายวิชา {{ sub_name }} ไป</h3>\r\n                  <div class=\"dropdown-container\" style=\" width: 600px;\">\r\n                       <select  v-model=\"select_year\" id=\"year\">\r\n                           <option value=\"\" disabled>เลือกปี</option>     \r\n                                   <option value=\"3\">ปี 3</option>\r\n                                   <option value=\"4\">ปี 4</option>\r\n                         </select>\r\n                         \r\n                         <select v-model=\"select_term\" id=\"term\">\r\n                              <option value=\"\" disabled>เลือกเทอม</option>    \r\n                              <template v-for=\"item in open_subject\" :key=\"item.subject_id\">\r\n                                   <option v-if=\"item.subject_id === sub_id\">{{ item.term }}</option>\r\n                              </template>\r\n                         </select>\r\n                    </div>\r\n                    <button class=\"btn-remove\"\r\n                    style=\"font-size: 18px; background-color: #00ff00; margin-right: 10px;\"\r\n                    @click=\"update_plan\">ยืนยัน</button>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; background-color: #a3a3a3;\" @click=\"closePopup\">ยกเลิก</button>\r\n                  </div>\r\n            </div>\r\n\r\n         <!-- แยกตารางตามคู่ [ปี, เทอม] -->\r\n               <div v-for=\"group in groupedPlan\" :key=\"group.yearTerm\" class=\"grouped-table\">\r\n               <h2>ภาคเรียนที่ {{ group.term }} ปีการศึกษา {{ group.year === 4 ? Number(user.batch_year) + 1 : user.batch_year }}</h2>\r\n                    <table class=\"data-stdplan-table\">\r\n                    <thead>\r\n                         <tr>\r\n                         <th>รหัสวิชา</th>\r\n                         <th>ชื่อวิชา</th>\r\n                         <th>หน่วยกิต</th>\r\n                         <th>กลุ่มวิชา</th>\r\n                         <th v-if=\"!group\"></th>\r\n                         </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         <template v-for=\"item in group.plans\" :key=\"item.subject_id\">\r\n                         <tr :class=\"{'changed': item.hasChanged}\">\r\n                              <td>{{ item.subject_id }}</td>\r\n                              <td style=\"text-align: left; width: 450px;\" v-if=\"item.subject_name\">{{ item.subject_name }}</td>\r\n                              <td style=\"text-align: left; width: 450px;\" v-else>{{ item.subject_nameTh }}</td>\r\n\r\n                              <td v-if=\"item.theory_credits + item.practical_credits < 3\">\r\n                                   {{ item.practical_credits + item.theory_credits }} \r\n                                   ({{ item.theory_credits }}-{{ item.practical_credits * 2 }}-{{ 3 - (item.theory_credits + (item.practical_credits * 2)) }})\r\n                              </td>\r\n                              <td v-else-if=\"item.theory_credits + item.practical_credits <= 5\">\r\n                                   {{ item.practical_credits + item.theory_credits }} \r\n                                   ({{ item.theory_credits }}-{{ item.practical_credits * 2 }}-{{ 9 - (item.theory_credits + (item.practical_credits * 2)) }})\r\n                              </td>\r\n                              <td v-else>\r\n                                   {{ item.practical_credits + item.theory_credits }} \r\n                                   ({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                              </td>\r\n                              <td>{{ item.group_id }}</td>\r\n                              <td>\r\n                                   <button class=\"btn-remove\" \r\n                                        @click=\"openChangePopup(item.subject_name, item.subject_id)\" \r\n                                        style=\"background-color: #00ccff; margin-right: 10px;\">\r\n                                        <i class=\"fa-solid fa-repeat\"></i>\r\n                                   </button>\r\n                              </td>\r\n                         </tr>\r\n                         </template>\r\n                         <!-- หน่วยกิตรวมของแต่ล่ะเทอมของแต่ล่ะปี -->\r\n                         <tr>\r\n                              <td colspan=\"2\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                              <td>{{ group.totalCredits }}</td>\r\n                              <td colspan=\"2\"></td>\r\n                         </tr>\r\n                    </tbody>\r\n                    </table>\r\n                    <br>\r\n\r\n               </div>\r\n          \r\n         <h4 style=\"font-weight: lighter;\"> ***หมายเหตุ หน่วยกิตที่แสดงประกอบด้วย \r\n          <br> ผลรวมของหน่วยกิต(เวลาเรียนภาคทฤษฎี-เวลาเรียนภาคประติบัติ-เวลาเรียนนอกห้องเรียน)</h4>\r\n          <h2>หน่วยกิตเทียบได้: {{ totalTransferCredits }} หน่วยกิตรวมในแผน: {{ totalAllCredits }} หน่วยกิตที่ต้องเรียน: 125</h2>\r\n          <div class=\"btn-group\">\r\n               <button class=\"btn-back\" style=\"font-size: 20px; width: 200px;\" @click=\"goBack\">\r\n                    <i class=\"fa-solid fa-arrow-left-long\"> กลับ</i>\r\n               </button>\r\n               <button  class=\"btn-back\" style=\"font-size: 20px; background-color:  #3385ff; width: 200px;\" @click=\"resetChanges\">\r\n                    <i class=\"fa-solid fa-arrow-rotate-left\"> รีเซ็ตแผน</i>\r\n               </button>               \r\n               <button  class=\"btn-back\" style=\"font-size: 20px; background-color:  #33cc33; width: 200px;\" @click=\"saveChanges(user.std_id)\">\r\n                    <i class=\"fa-solid fa-floppy-disk\"> บันทึกแผน</i>\r\n               </button>\r\n       </div>\r\n     <h2>สรุปแผนการเรียนทั้งหมด</h2>\r\n     <table class=\"data-stdplan-table\" style=\"margin-bottom: 100px;\">\r\n          <thead>\r\n          <tr>\r\n               <th>กลุ่มวิชา</th>\r\n               <th>หน่วยกิตที่ต้องเรียน</th>\r\n               <th>เทียบโอนได้</th>\r\n               <th>ในแผน</th>\r\n               <th>หน่วยกิตรวม</th>\r\n               <th>ขาด</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <template v-for=\"(group, category) in credit_status\" :key=\"category\">\r\n       \r\n          <tr>\r\n               <td colspan=\"7\" style=\"text-align: left;\"><strong>{{ category }}</strong></td>\r\n          </tr>\r\n          \r\n          <template v-for=\"item in group\" :key=\"item._id\">\r\n          <tr v-if=\"item.status == '❌'\" style=\"color: #ff1a1a;\">\r\n               <td style=\"text-align: left; \">{{item.group_id +\" \"+ item.group_name }}</td>\r\n               <td>{{ item.required_credits }}</td>\r\n               <td>{{ item.tranfer_credits }}</td>\r\n               <td>{{ item.need_credit }}</td>\r\n               <td>{{ item.earned_credits }}</td>\r\n               <td>{{ item.credit_isneed}}</td>\r\n\r\n          </tr>\r\n          <tr v-else style=\"color: #33cc33;\">\r\n               <td style=\"text-align: left;\">{{ item.group_id +\" \"+ item.group_name }}</td>\r\n               <td>{{ item.required_credits }}</td>\r\n               <td>{{ item.tranfer_credits }}</td>\r\n               <td>{{ item.need_credit }}</td>\r\n               <td>{{ item.earned_credits }}</td>\r\n               <td>{{ item.credit_isneed}}</td>\r\n          </tr>\r\n          </template>\r\n        </template>\r\n          </tbody>\r\n     </table>\r\n     </div>\r\n     \r\n     </MainLayout>\r\n   </template>\r\n   \r\n<script>\r\nimport { inject, computed } from \"vue\";\r\n\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n     setup() {\r\n          const user = inject(\"user\"); // รับค่า user จาก MainLayout.vue\r\n          const userData = computed(() => user?.value || {}); // ป้องกัน undefined\r\n          console.log(\"User Data:\", userData.value); // ตรวจสอบค่าที่รับมา\r\n          return { user: userData };\r\n     },\r\n     name: \"std_changePlan_page\",\r\n     components: {\r\n          MainLayout\r\n     },\r\n     computed: {\r\n\r\n          calculateTotalCredits() {\r\n               return (plans) => {\r\n               return plans.reduce((sum, plan) => {\r\n                    const totalCredits = plan.theory_credits + plan.practical_credits;\r\n                    return sum + totalCredits;\r\n               }, 0);\r\n               };\r\n          },\r\n          totalAllCredits() {\r\n               return this.groupedPlan.reduce((sum, group) => sum + group.totalCredits, 0);\r\n          },\r\n          filteredGroups() {\r\n               return (term) => { if(term == \"ภาคฤดูร้อน\"){\r\n                                        term = 3\r\n                                   }\r\n                    return this.group_list.filter(item => \r\n                         this.open_subject.some(openItem => openItem.group_id === item.group_id\r\n                         && openItem.term == term)\r\n                    );\r\n               };\r\n          },\r\n          credit_status() {\r\n                // ใช้ reduce() เพื่อจัดกลุ่มข้อมูลตาม `sort`\r\n               return this.group_list.reduce((acc, item) => {\r\n               if (!acc[item.sort]) {\r\n                    acc[item.sort] = [];\r\n               }\r\n               acc[item.sort].push(item);\r\n               return acc;\r\n               }, {});\r\n          },\r\n          // คำนวณหน่วยกิตรวมของ practical credits\r\n          totalPracticalCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.practical_credits || 0), 0\r\n               );\r\n          },\r\n          // คำนวณหน่วยกิตรวมของ theory credits\r\n          totalTheoryCredits() {\r\n               return this.transfer_list.reduce(\r\n                    (sum, item) => sum + Number(item.theory_credits || 0), 0\r\n               );\r\n          },\r\n          // รวม practical + theory credits ทั้งหมด\r\n          totalTransferCredits() {\r\n               return this.totalPracticalCredits + this.totalTheoryCredits;\r\n          },\r\n     },\r\n     data(){\r\n          return{\r\n               std_planlist: [],\r\n               temp_planlist:[],\r\n               term:\"\",\r\n               groupedPlan: [],\r\n               group_list:[],\r\n               subject_list:[],\r\n               plans_list:[],\r\n               spacialTerm: false,\r\n               open_subject:[],\r\n               transfer_list:[],\r\n               change_popup: false,\r\n               sub_name: \"\",\r\n               sub_id: \"\",\r\n               select_term: \"\",\r\n               select_year: \"\",\r\n\r\n          };\r\n     },\r\n     methods:{\r\n          // เปิด Popup\r\n          openChangePopup(sub_name,sub_id) {\r\n               this.sub_name = sub_name;\r\n               this.sub_id = sub_id;\r\n               this.change_popup = true;\r\n          },\r\n               // ปิด Popup\r\n          closePopup() {\r\n               this.change_popup = false;\r\n          },\r\n          async fetchOpen_subject(){ // ดึงข้อมูลวิชาที่เปิดสอน\r\n          console.log(this.selectGroup)\r\n          try{\r\n               const response = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n                         group_id:this.selectGroup\r\n                    }); \r\n                    if(response.data.result == \"1\"){\r\n                         this.open_subject = response.data.datalist;\r\n                         this.groupPlans();\r\n                         \r\n                    }\r\n                    else if(response.data.result == \"2\"){\r\n                         this.open_subject = [];\r\n                         this.groupPlans();\r\n                         \r\n                    }\r\n          }\r\n          catch(error){\r\n               console.error(\"Error fetching subject:\", error);\r\n          }\r\n          },\r\n\r\n          async fetchTransfer_list(){ // ดึงข้อมูลแผนการเรียนที่เทียบโอนมา\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getTranfer_plan\",{\r\n                         std_id: this.user.std_id\r\n                    }); // URL ของ API\r\n                    if(response.data.result == \"1\"){\r\n                         // console.log(\"..--..\",response.data.datalist);\r\n                         this.transfer_list = response.data.datalist; // เก็บข้อมูลใน transfer_list\r\n                    }\r\n                    else if(response.data.result == \"0\"){\r\n                         this.transfer_list = [];\r\n                    }\r\n\r\n               }\r\n               catch(error){\r\n                    console.error(\"Error fetching subject:\", error);  \r\n               }\r\n          },\r\n          \r\n          async fetchStudent_plan(){\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                         std_id: this.user.std_id\r\n                    });\r\n                    if (response.data.result === \"1\") {\r\n                         // console.log(response.data.datalist);\r\n                         this.std_planlist = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                         this.temp_planlist = JSON.parse(JSON.stringify(this.std_planlist)); // clone ข้อมูล\r\n                         this.groupPlans(); // จัดกลุ่มข้อมูล\r\n                              \r\n                    } else if(response.data.result === \"0\"){\r\n                         this.std_planlist = [];\r\n                         this.temp_planlist = []; // ล้างข้อมูลชั่วคราว\r\n                         this.groupPlans();\r\n                    }\r\n                    \r\n               }\r\n               catch (error) {\r\n                    console.error(\"Error fetching subjects:\", error);\r\n               }\r\n          },\r\n          async fetchStructure(){\r\n               try {\r\n                    const response = await axios.get(\"http://127.0.0.1:3000/api/getStructure\",{\r\n                    }); // URL ของ API\r\n                    this.group_list = response.data.datalist; // เก็บข้อมูลใน state\r\n                    this.mergeCredits(); // รวมหน่วยกิต\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          async fetchSubject() {\r\n               try {\r\n                    if (!this.selectGroup) {\r\n                         this.subject_list = []; // ล้างรายการวิชาเมื่อไม่มีการเลือกกลุ่ม\r\n                         return;\r\n                    }\r\n                    \r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getSubject\", {\r\n                         group_id: this.selectGroup, // ใช้ selectGroup ส่งไปยัง API\r\n                    });\r\n                    \r\n                    if (response.data.result == \"1\") {\r\n                         this.subject_list = response.data.datalist; // เก็บข้อมูลวิชาใน state\r\n                    } else {\r\n                         alert(\"ไม่มีข้อมูลวิชาในกลุ่มที่เลือก\");\r\n                    }\r\n                    } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          update_plan() {\r\n                // กรองเฉพาะแผนการเรียนที่อยู่ในปีและเทอมที่เลือก\r\n               let filteredPlans = this.temp_planlist.filter(\r\n                    plan => plan.year === Number(this.select_year) && plan.term === Number(this.select_term));\r\n               \r\n               // ตรวจสอบว่ามีแผนการเรียนในปี/เทอมที่เลือกหรือไม่\r\n               console.log(\"Filtered Plans:\", filteredPlans);\r\n\r\n               // รวม Practical Credits และ Theory Credits แยกกัน\r\n               let totalPcredits = filteredPlans.reduce((sum, plan) => sum + Number(plan.practical_credits || 0), 0);\r\n               let totalTcredits = filteredPlans.reduce((sum, plan) => sum + Number(plan.theory_credits || 0), 0);\r\n\r\n               let selectData = this.open_subject.find(item => item.subject_id === String(this.sub_id));\r\n               if (!selectData) {\r\n                    alert(\"ไม่พบวิชาที่เลือก กรุณาลองใหม่\");\r\n                    return;\r\n               }\r\n\r\n               let pCredits = Number(selectData.practical_credits);\r\n               let tCredits = Number(selectData.theory_credits);\r\n               let totalCredits = totalPcredits + totalTcredits;\r\n               let newPcredits = totalCredits + pCredits;\r\n               let newTcredits = totalCredits + tCredits;\r\n\r\n               console.log(`New Practical Credits: ${newPcredits}, New Theory Credits: ${newTcredits}`);\r\n\r\n               if(confirm(\"ต้องการที่จะย้ายวิชานี้ใช่หรือไม่\")){\r\n                    // ตรวจสอบว่าหน่วยกิตจะเกินหรือไม่\r\n                    if (newPcredits > 25 || newTcredits >25 ) {\r\n                         alert(\"ไม่สามารถเพิ่มได้ เนื่องจากหน่วยกิตรวมเกิน 25\");\r\n                         return;\r\n                    }\r\n                    if((newPcredits > 22|| newTcredits > 22) && this.spacialTerm == true){\r\n                         alert(\"ไม่สามารถเพิ่มได้ เนื่องจากมีเทอมที่หน่วยกิตเกิน 25 แล้ว\");\r\n                         return;\r\n                    }\r\n                    if (newPcredits >= 22 || newTcredits > 22) {\r\n                         if (!confirm(\"หน่วยกิตในเทอมเกิน 22 ต้องการดำเนินการต่อหรือไม่?\")) {\r\n                              return;\r\n                         }\r\n                    }\r\n                    // ค้นหารายวิชาใน temp_planlist\r\n                    let existingPlan = this.temp_planlist.find(item => item.subject_id === this.sub_id);\r\n                    if (existingPlan) {\r\n                         // อัปเดต year และ term ของวิชาเดิม\r\n                         existingPlan.year = Number(this.select_year);\r\n                         existingPlan.term = Number(this.select_term);\r\n                         existingPlan.hasChanged = true; // ตั้งค่าว่าวิชานี้มีการเปลี่ยนแปลง\r\n                         console.log(\"อัปเดตข้อมูลใน temp_planlist สำเร็จ\");\r\n                         this.change_popup = false;\r\n                    } else {\r\n                         alert(\"ไม่พบรายวิชานี้ในแผนการเรียน\");\r\n                    }\r\n\r\n                    this.groupPlans(); // อัปเดตข้อมูลที่จัดกลุ่มใหม่\r\n                    this.mergeCredits(); // อัปเดตกลุ่มแผนการเรียน\r\n                              }\r\n          },\r\n\r\n          resetChanges() {\r\n               this.temp_planlist = JSON.parse(JSON.stringify(this.std_planlist)); // คืนค่าข้อมูล\r\n               this.groupPlans(); // จัดกลุ่มข้อมูล\r\n               alert(\"รีเซ็ตข้อมูลเรียบร้อยแล้ว!\"); // แจ้งเตือนว่าทำการรีเซ็ตแล้ว\r\n          },\r\n               // บันทึกข้อมูลลงฐานข้อมูล\r\n          async saveChanges(std_id) {\r\n               if (confirm(\"คุณต้องการบันทึกการเปลี่ยนแปลงหรือไม่?\")) {\r\n                    try {\r\n                         // ตรวจสอบว่า temp_planlist และ std_planlist เป็น array หรือยัง\r\n                         let tempPlan = Array.isArray(this.temp_planlist) ? this.temp_planlist : [this.temp_planlist];\r\n                         let originalPlan = Array.isArray(this.std_planlist) ? this.std_planlist : [this.std_planlist];\r\n\r\n                         // ฟังก์ชันเปรียบเทียบข้อมูลแบบเฉพาะฟิลด์\r\n                         let changedPlans = tempPlan.map(tempItem => {\r\n                              let originalItem = originalPlan.find(\r\n                                   item => item.subject_id === tempItem.subject_id &&\r\n                                   item.term === tempItem.term &&\r\n                                   item.year === tempItem.year &&\r\n                                   item.group_id === tempItem.group_id\r\n                              );\r\n                              if (!originalItem) return { ...tempItem }; // ถ้าเป็นข้อมูลใหม่ ให้ส่งทั้งหมด\r\n\r\n                              let changedFields = {};\r\n                              Object.keys(tempItem).forEach(key => {\r\n                                   if (tempItem[key] !== originalItem[key]) {\r\n                                   changedFields[key] = tempItem[key]; // บันทึกเฉพาะค่าที่เปลี่ยน\r\n                                   }\r\n                              });\r\n\r\n                              return Object.keys(changedFields).length > 0\r\n                                   ? { plan_id: tempItem.plan_id, ...changedFields } \r\n                                   : null;\r\n                         }).filter(item => item !== null); // กรองค่าที่ไม่ได้เปลี่ยนออก\r\n                         // ถ้าไม่มีการเปลี่ยนแปลง ไม่ต้องส่ง API\r\n                         if (changedPlans.length === 0) {\r\n                              alert(\"ไม่มีข้อมูลที่เปลี่ยนแปลง\");\r\n                              return;\r\n                         }\r\n                         else{\r\n                              console.log(\"ข้อมูลที่เปลี่ยนแปลง:\", changedPlans);\r\n                              // ส่งเฉพาะข้อมูลที่เปลี่ยนแปลงไปยัง API\r\n                              const response = await axios.post(\"http://127.0.0.1:3000/api/setAdjustplan_list\", {\r\n                                   std_id: std_id,\r\n                                   plans: changedPlans,  \r\n                              });\r\n     \r\n                              if (response.data.result === \"1\") {\r\n                                   alert(\"บันทึกสำเร็จ!\");\r\n                                   // อัปเดต std_planlist ด้วยข้อมูลใหม่\r\n                                   this.std_planlist = JSON.parse(JSON.stringify(this.temp_planlist));\r\n                                   this.$router.push(\"/\");\r\n                              }\r\n                              else if(response.data.result === \"2\"){\r\n                                   alert(\"ไม่สามารถขอปรับแผนการเรียนได้เนื่องจากมีการขอปรับที่รอพิจารณาอยู่\");\r\n                              }\r\n                              else {\r\n                                   alert(\"เกิดข้อผิดพลาดในการบันทึกข้อมูล\");\r\n                              }\r\n                         }\r\n                    } catch (error) {\r\n                         console.error(\"Error saving changes:\", error);\r\n                    }\r\n               }\r\n          },\r\n          groupPlans() {\r\n               // รายการปีและเทอมที่ต้องการ\r\n               const yearTermPairs = [\r\n               [3, 1],\r\n               [3, 2],\r\n               [3, 3],\r\n               [4, 1],\r\n               [4, 2],\r\n               ];\r\n               // จัดกลุ่มข้อมูลตามคู่ [ปี, เทอม]\r\n               this.groupedPlan = yearTermPairs.map(([year, term]) => {\r\n                    const plans = this.temp_planlist.filter(plan => plan.year === year && plan.term === term);\r\n                    const totalCredits = plans.reduce((sum, plan) => {\r\n                         if((sum + (plan.theory_credits + plan.practical_credits)) > 22){\r\n                              this.spacialTerm = true;\r\n                         }\r\n                         \r\n                         return sum + (plan.theory_credits + plan.practical_credits);\r\n                    }, 0);\r\n               return {\r\n                    yearTerm: `${year}-${term}`, // สร้าง key สำหรับกลุ่ม\r\n                    year,\r\n                    term: term === 3 ? \"ภาคฤดูร้อน\" : term, // แปลงค่าเทอมที่เป็น 3\r\n                    plans: this.temp_planlist.filter(plan => plan.year === year && plan.term === term),\r\n                    totalCredits,\r\n                    // เอาข้อมูลจาก open_subject มาใส่ใน open\r\n                    open: this.open_subject.filter(plan => plan.term === term), \r\n               };\r\n               });\r\n          },\r\n          mergeCredits() {\r\n               this.group_list = this.group_list.map(group => {\r\n                    // console.log(\"กลุ่มวิชา group_list:\", group.group_id);\r\n\r\n                    // ค้นหาทุกแผนที่ตรงกับ group_id\r\n                    let plans = this.temp_planlist.filter(plan => String(plan.group_id) === String(group.group_id));\r\n                    let tranfers_plan = this.transfer_list.filter(plan => String(plan.group_id) === String(group.group_id));\r\n                    // console.log(\"กลุ่มวิชา tranfers_plan:\", tranfers_plan);\r\n\r\n                    // console.log(\"กลุ่มวิชา temp_planlist:\", plans);\r\n\r\n                    // รวมหน่วยกิตของทุกแผนที่เจอ\r\n                    let totalCredits_need = plans.reduce((sum, plan) => sum + (plan.theory_credits + plan.practical_credits), 0);\r\n                    let totalCredits_tranfer = tranfers_plan.reduce((sum, plan) => sum + (plan.theory_credits + plan.practical_credits), 0);\r\n                    let totalCredits_all = totalCredits_need + totalCredits_tranfer;\r\n\r\n                    let credit_need = group.credit - totalCredits_all;\r\n                    if (credit_need < 0) {\r\n                         credit_need = 0;\r\n                    }\r\n                    // เปรียบเทียบว่าเรียนครบหรือยัง\r\n                    let status = totalCredits_all >= group.credit ? \"✔️\" : \"❌\";\r\n\r\n                    return {\r\n                         ...group, // เก็บข้อมูลเดิมใน group\r\n                         _id: Date.now().toString(), // สร้าง ID ใหม่\r\n                         required_credits: group.credit, // หน่วยกิตที่ต้องเรียน\r\n                         tranfer_credits: totalCredits_tranfer, // หน่วยกิตที่เทียบโอนมา\r\n                         need_credit: totalCredits_need, // หน่วยกิตที่ต้องเรียน\r\n                         earned_credits: totalCredits_all, // หน่วยกิตทีรวมทั้งหมด\r\n                         credit_isneed: credit_need, // หน่วยกิตที่ยังขาด\r\n                         status: status // สถานะการผ่าน\r\n                    };\r\n               });\r\n\r\n               // console.log(\"อัปเดต group_list:\", this.group_list);\r\n          },\r\n\r\n          goBack() {\r\n          // กลับไปยังหน้าก่อนหน้า\r\n               this.$router.go(-1)\r\n          },\r\n     },\r\n          watch: {\r\n          selectGroup(newValue) {\r\n               console.log(\"Group ID changed:\", newValue);\r\n               this.selectGroup_id = newValue;\r\n               this.fetchOpen_subject(); // เรียก fetchOpeb_subject ทุกครั้งที่ selectGroup เปลี่ยนค่า\r\n          },\r\n          selectPlan(newValue){\r\n               this.selectPlan = newValue;\r\n               this.fetchStandardPlan_list();\r\n          },\r\n          temp_planlist(newValue) {\r\n               console.log(\"temp_planlist changed:\", newValue);\r\n               this.mergeCredits(); // อัปเดตกลุ่มแผนการเรียน\r\n          },\r\n     },\r\n     async mounted() {\r\n          await this.fetchStudent_plan();\r\n          await this.fetchTransfer_list();\r\n          await this.fetchSubject();\r\n          await this.fetchOpen_subject();\r\n          this.fetchStructure();\r\n     }\r\n}\r\n</script>","import { render } from \"./std_changePlan_page.vue?vue&type=template&id=571ea5f8\"\nimport script from \"./std_changePlan_page.vue?vue&type=script&lang=js\"\nexport * from \"./std_changePlan_page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n     <div class=\"form-container\">\r\n     <h1>อนุมัติขอปรับแผนการเรียน</h1>\r\n     <!-- ตารางแสดงข้อมูล -->\r\n     <table v-if=\"student_list\" class=\"data-stdplan-table\" style=\"width: 1000px; margin-left: auto; margin-right: auto;\" >\r\n          <thead>\r\n               <tr>\r\n                    <th>รหัสนักศึกษา</th>\r\n                    <th>ชื่อ</th>\r\n                    <th>รุ่นปี</th>\r\n                    <th>วันที่ขอปรับ</th>\r\n                    <th>วันที่พิจารณา</th>\r\n                    <th>ผู้พิจารณา</th>\r\n                    <th>สถานะ</th>\r\n                    <th></th>\r\n               </tr>\r\n          </thead>\r\n          <tbody>\r\n                    <tr v-for=\"item in student_list\" :key=\"item.std_id\">\r\n                         <td>{{ item.std_id }}</td>\r\n                         <td style=\"text-align: left;\">{{ item.std_name }} {{ item.std_last }}</td>\r\n                         <td>{{ item.batch_year }}</td>\r\n                         <td>{{ item.date_add }}</td>\r\n                         <td>{{ item.date_updated || \"-\"}}</td>\r\n                         <td>{{ item.user_ap || \"-\"}} </td>\r\n                         <td v-if=\"item.status == 1\" style=\"color: green;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 2\" style=\"color: red;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td v-if=\"item.status == 0\" style=\"color: blue;\">{{ convertStatusToText(item.status) }}</td>\r\n                         <td>\r\n                              <button v-if=\"item.status == 0\" class=\"btn-add\" style=\"font-size: 16px; width: 100px; \" @click=\"inspectAdjust(item.std_id, item.std_name, item.std_last, item.batch_year, item.adjust_id )\">\r\n                         <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                    </button>\r\n                         </td>\r\n                    </tr>\r\n               </tbody>\r\n     </table>\r\n     <p v-if=\"student_list.length == 0\">ไม่พบข้อมูลขอปรับแผนการเรียน</p>\r\n     <br>\r\n\r\n     </div>\r\n</MainLayout>\r\n</template>\r\n\r\n     <script>\r\n     import MainLayout from './main_layout.vue';\r\n     import axios from \"axios\";\r\n     \r\n     export default {\r\n          name: 'tc_adjust_list',\r\n          components: {\r\n          MainLayout  \r\n          },\r\n          data() {\r\n          return {\r\n               student_list: [],\r\n          };\r\n          },\r\n          methods: {\r\n               async fetchAdjust_list(){\r\n                    try{\r\n                         const response = await axios.get(\"http://127.0.0.1:3000/api/getAdjust_list\"); // URL ของ API\r\n                         if (response.data.result === \"1\") {\r\n                              console.log(response.data.datalist);\r\n                              this.student_list = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                              const sort_List = this.student_list.sort((a, b) => {\r\n                                   const dateA = this.convert_date(a.date_add); // แปลงวันที่จาก พ.ศ. เป็น ค.ศ.\r\n                                   const dateB = this.convert_date(b.date_add);\r\n                                   return dateB - dateA; // เรียงจากใหม่ไปเก่า\r\n                              });\r\n                              this.student_list = sort_List; // เก็บข้อมูลที่ได้ใน state\r\n                         } else {\r\n                              // alert(\"ไม่มีข้อมูลนักศึกษาในระบบ\");\r\n                         }\r\n                    }\r\n                    catch (error) {\r\n                         console.error(\"Error fetching change plan:\", error);\r\n                    }\r\n               },\r\n               convert_date(thaiDateStr) { // แปลงวันที่จาก พ.ศ. เป็น ค.ศ. ให้กับ JS\r\n                    const [day, month, year] = thaiDateStr.split('-').map(Number);\r\n                    const christianYear = year - 543; // แปลง พ.ศ. → ค.ศ.\r\n                    return new Date(christianYear, month - 1, day); // เดือนใน JS เริ่มจาก 0\r\n               },\r\n               convertStatusToText(status) {\r\n                    const statusMapping = {\r\n                         1: \"ยืนยัน\",\r\n                         2: \"ปฏิเสธ\",\r\n                         0: \"รอพิจารณา\",\r\n                    };\r\n                    return statusMapping[status] || \"สถานะไม่ทราบ\";\r\n               },\r\n               async inspectAdjust(std_id, std_name, std_last, year, adjust_id){\r\n                    this.$router.push({\r\n                         name: \"tc_inspect_adjust\",\r\n                         query: { std_id: std_id,  std_name:std_name, std_last:std_last, year:year, adjust_id:adjust_id}, \r\n                    });\r\n               }\r\n          },\r\n          mounted() {\r\n          this.fetchAdjust_list();\r\n          },\r\n     };\r\n     </script>\r\n     <style>\r\n     @import \"@/assets/css/styles.css\";\r\n     </style>","import { render } from \"./tc_adjust_list.vue?vue&type=template&id=39b26a85\"\nimport script from \"./tc_adjust_list.vue?vue&type=script&lang=js\"\nexport * from \"./tc_adjust_list.vue?vue&type=script&lang=js\"\n\nimport \"./tc_adjust_list.vue?vue&type=style&index=0&id=39b26a85&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n          <div class=\"form-container\">\r\n               <h2>ตรวจสอบแผนการเรียน</h2>\r\n               <h3>รหัสนักศึกษา: {{ std_id }} ชื่อ: {{ std_name }} {{ std_last }}</h3>\r\n          </div>\r\n               <!-- Popup สำหรับกรอกสาเหตุ -->\r\n               <div v-if=\"showRejectPopup\" class=\"popup-overlay\">\r\n                    <div class=\"popup-content\">\r\n                    <h3>กรอกสาเหตุที่ต้องปฏิเสธแผนนี้</h3>\r\n                    <textarea v-model=\"rejectReason\" rows=\"4\" cols=\"50\" style=\"font-size: 18px;\"></textarea>\r\n                    <br>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; margin-right: 10px; background-color: #02bd2a;\" @click=\"rejectPlan\">ยืนยัน</button>\r\n                    <button class=\"btn-remove\" style=\"font-size: 18px; background-color: #a3a3a3;\" @click=\"closeRejectPopup\">ยกเลิก</button>\r\n                    </div>\r\n               </div>\r\n\r\n<div v-for=\"(group, index) in groupedOriData\" :key=\"'group-' + group.yearTerm\">\r\n     <!-- หัวข้อของแต่ละตาราง -->\r\n     <div class=\"table-headers\" v-if=\"group.year  === 3 &&  group.term  === 1\">\r\n          <h3>แผนการเรียนเดิม</h3>\r\n          <h3>แผนการเรียนใหม่</h3>\r\n     </div>\r\n     <h3>เทอม {{ group.term }} ปีการศึกษา {{ group.year === 4 ? Number(year) +1 : year }}</h3>\r\n     <div class=\"tables-wrapper\">\r\n\r\n          <div class=\"tables-container\">\r\n               <div>\r\n                    <!-- ตารางข้อมูลเดิม -->\r\n                    <table class=\"data-table\">\r\n                         <thead>\r\n                              <tr>\r\n                                   <th>รหัสวิชา</th>\r\n                                   <th>ชื่อวิชา</th>\r\n                                   <th>กลุ่มวิชา</th>\r\n                                   <th>หน่วยกิต</th>\r\n                              </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                              <tr v-for=\"item in group.plans\" :key=\"'ori-' + item.subject_id\">\r\n                                   <td :style=\"checkHasChanges(item, 'ori') ? { backgroundColor: '#cccccc'} : {}\">{{ item.subject_id }}</td>\r\n                                   <td :style=\"checkHasChanges(item, 'ori') ? { backgroundColor: '#cccccc', width:'400px', hight:'20px'} : {width:'400px'}\">{{ item.subject_name }}</td>\r\n                                   <td :style=\"checkHasChanges(item, 'ori') ? { backgroundColor: '#cccccc', textAlign:'center'} : {textAlign:'center'}\">{{ item.group_id || '-' }}</td>\r\n                                   <td :style=\"checkHasChanges(item, 'ori') ? { backgroundColor: '#cccccc'} : {}\" v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n                                   </td>\r\n                                   <td :style=\"checkHasChanges(item, 'ori') ? { backgroundColor: '#cccccc'} : {}\" v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n                                   </td>\r\n                                   <td :style=\"checkHasChanges(item, 'ori') ? { backgroundColor: '#cccccc'} : {}\" v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                                   </td>\r\n                              </tr>\r\n                              <tr>\r\n                                   <td colspan=\"3\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                                   <td style=\"text-align: center;\">{{ totalCreditsOriData[index]?.totalCredits }}</td>\r\n                              </tr>\r\n                         </tbody>\r\n                    </table>\r\n               </div>\r\n               <div>\r\n                    <!-- ตารางข้อมูลที่เปลี่ยนแปลง -->\r\n                    <table class=\"data-table\">\r\n                         <thead>\r\n                              <tr>\r\n                                   <th>รหัสวิชา</th>\r\n                                   <th>ชื่อวิชา</th>\r\n                                   <th>กลุ่มวิชา</th>\r\n                                   <th>หน่วยกิต</th>\r\n                              </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                              <tr v-for=\"item in groupedChangeData[index]?.plans || []\" :key=\"'change-' + item.subject_id\">\r\n                                   <td :class=\"{ changed: item.hasChanges }\">{{ item.subject_id }}</td>\r\n                                   <td :class=\"{ changed: item.hasChanges }\" :style=\"{width:'400px',hight:'20px'}\">{{ item.subject_name }}</td>\r\n                                   <td :class=\"{ changed: item.hasChanges }\" :style=\"{textAlign:'center'}\">{{ item.group_id || '-' }}</td>\r\n                                   <td :class=\"{ changed: item.hasChanges }\" v-if=\"item.theory_credits+(item.practical_credits) < 3\">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 3-(item.theory_credits+(item.practical_credits*2)) }})\r\n                                   </td>\r\n                                   <td :class=\"{ changed: item.hasChanges }\" v-if=\" item.theory_credits+(item.practical_credits) >= 3 && item.theory_credits+(item.practical_credits) <= 5 \">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits*2 }}-{{ 9-(item.theory_credits+(item.practical_credits*2)) }})\r\n                                   </td>\r\n                                   <td :class=\"{ changed: item.hasChanges }\" v-if=\"item.theory_credits+(item.practical_credits) == 6\">\r\n                                   {{ item.practical_credits+item.theory_credits }}({{ item.theory_credits }}-{{ item.practical_credits }}-0)\r\n                                   </td>\r\n                              </tr>\r\n                              <tr>\r\n                                        <td colspan=\"3\" style=\"text-align: right;\">รวมหน่วยกิต:</td>\r\n                                        <td style=\"text-align: center;\">{{ totalCreditsChangeData[index]?.totalCredits }}</td>\r\n                              </tr>\r\n                         </tbody>\r\n                    </table>\r\n               </div>\r\n          </div>\r\n     </div>\r\n</div>\r\n<button @click=\"goBack\" class=\"btn btn-back\">\r\n     <i class=\"fa-solid fa-arrow-left-long\"></i> กลับ</button>\r\n<div class=\"btn-group\"\r\n               style=\"   margin-bottom: 100px;\r\n                         display: flex;\r\n                         justify-content: center;\r\n                         gap: 500px;\">\r\n               <div>\r\n               <!-- ปุ่มเปิด Popup -->\r\n               <button class=\"btn-remove\" style=\"font-size: 18px; width: 150px;\" @click=\"openRejectPopup\">\r\n                    <i class=\"fa-solid fa-xmark\"></i> ปฏิเสธ\r\n               </button>\r\n\r\n\r\n               </div>\r\n               <button class=\"btn-add\" style=\"font-size: 18px; background-color: #02bd2a; margin-left: 20px; width: 150px;\" @click=\"submitPlan\">\r\n                    <i class=\"fa-solid fa-check\"></i> เห็นชอบ\r\n               </button>\r\n          </div>\r\n     </MainLayout>\r\n</template>\r\n\r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from \"axios\";\r\nimport { inject, computed} from \"vue\";\r\n\r\nexport default {\r\n     setup() {\r\n          const user = inject(\"user\"); // รับค่า user จาก MainLayout.vue\r\n          const userData = computed(() => user?.value || {}); // ป้องกัน undefined\r\n          console.log(\"User Data:\", userData.value); // ตรวจสอบค่าที่รับมา\r\n          return { user: userData };\r\n     },\r\n     name: 'tc_inspect_adjust',\r\n     components: {\r\n          MainLayout\r\n     },\r\n     data() {\r\n          return {\r\n               std_id: this.$route.query.std_id,\r\n               std_name: this.$route.query.std_name,\r\n               std_last: this.$route.query.std_last,\r\n               year: this.$route.query.year,\r\n               adjust_id: this.$route.query.adjust_id,\r\n               ori_data: [],\r\n               change_data: [],\r\n               temp_change_data: [],\r\n               showRejectPopup: false,\r\n               rejectReason: \"\",\r\n          };\r\n     },\r\n     computed: {\r\n     groupedOriData() {\r\n          return this.groupPlans(this.ori_data);\r\n     },\r\n     groupedChangeData() {\r\n          return this.groupPlans(this.temp_change_data);\r\n     },\r\n     totalCreditsOriData() {\r\n          return this.calculateTotalCredits(this.groupedOriData);\r\n     },\r\n     totalCreditsChangeData() {\r\n          return this.calculateTotalCredits(this.groupedChangeData);\r\n     },\r\n     },\r\n\r\n     methods: {\r\n          async fetchStudent_plan() {\r\n               try {\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                         std_id: this.std_id\r\n                    });\r\n                    if (response.data.result === \"1\") {\r\n                         this.ori_data = response.data.datalist;\r\n                    } \r\n               } catch (error) {\r\n                    console.error(\"Error fetching subjects:\", error);\r\n               }\r\n          },\r\n          async fetchChange_plan() {\r\n               try {\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getAdjust_plan\", {\r\n                         adjust_id: this.adjust_id\r\n                    });\r\n\r\n                    if (response.data.result === \"1\") {\r\n                         this.change_data = response.data.datalist;\r\n                         let existingPlans = this.mergeDataWithChanges(this.ori_data, this.change_data);\r\n                         this.temp_change_data = existingPlans;\r\n\r\n                         // console.log(this.change_data);\r\n                    }\r\n               } catch (error) {\r\n                    console.error(\"Error fetching change plan:\", error);\r\n               }\r\n          },\r\n\r\n          mergeDataWithChanges(oriData, changeData) {\r\n               // เริ่มต้นจากข้อมูลเดิม (oriData)\r\n               let mergedData = [...oriData];\r\n\r\n               // ตรวจสอบข้อมูลใน changeData ว่ามี subject_id ที่ซ้ำกับ oriData หรือไม่\r\n               changeData.forEach(changeItem => {\r\n                    // ตรวจสอบว่ามี subject_id นี้ใน oriData หรือไม่\r\n                    const indexInOri = mergedData.findIndex(oriItem => \r\n                         oriItem.subject_id === changeItem.subject_id \r\n                    );\r\n\r\n                    // ถ้ามีข้อมูลที่ซ้ำ, ให้อัปเดตข้อมูลจาก changeData แทนที่ข้อมูลใน oriData\r\n                    if (indexInOri !== -1) {\r\n                         mergedData[indexInOri] = { ...changeItem, hasChanges: true };\r\n                    } else {\r\n                         // ถ้าไม่พบข้อมูลที่ซ้ำ, ก็เพิ่มข้อมูลจาก changeData ลงใน mergedData\r\n                         mergedData.push({ ...changeItem, hasChanges: true });\r\n                    }\r\n               });\r\n\r\n               return mergedData;\r\n          },\r\n          checkHasChanges(item) {\r\n                    // หาข้อมูลที่ตรงกันใน change_data\r\n                    const match = this.temp_change_data.find(\r\n                         data => \r\n                              data.subject_id === item.subject_id && \r\n                              data.term === item.term && \r\n                              data.year === item.year\r\n                    );\r\n\r\n                    // ถ้าไม่มีข้อมูลที่ตรงกัน หรือข้อมูลใน change_data ไม่เหมือนกัน\r\n                    return !match || JSON.stringify(match) !== JSON.stringify(item);\r\n          },\r\n          groupPlans(dataSource) {\r\n          // ดึงปี-เทอมจากข้อมูลที่เลือก (อาจเป็น ori_data, change_data หรือ merged_data)\r\n          const yearTermPairs = new Set(dataSource.map(item => `${item.year}-${item.term}`));\r\n\r\n          return Array.from(yearTermPairs)\r\n               .map(pair => pair.split(\"-\").map(Number))\r\n               .sort((a, b) => a[0] - b[0] || a[1] - b[1]) // เรียงตามปีและเทอม\r\n               .map(([year, term]) => {\r\n                    const plans = dataSource\r\n                         .filter(plan => plan.year === year && plan.term === term)\r\n                         .sort((a, b) => a.group_id.localeCompare(b.group_id)); // เรียงตามกลุ่มวิชา\r\n\r\n                    return {\r\n                         yearTerm: `${year}-${term}`,\r\n                         year,\r\n                         term: term === 3 ? \"ภาคฤดูร้อน\" : term,\r\n                         plans,\r\n                    };\r\n               });\r\n          },\r\n          calculateTotalCredits(groupedData) {\r\n               return groupedData.map(group => {\r\n                    const totalCredits = group.plans.reduce((sum, plan) => {\r\n                         const theoryCredits = Number(plan.theory_credits) || 0;\r\n                         const practicalCredits = Number(plan.practical_credits) || 0;\r\n                         return sum + (theoryCredits + practicalCredits);\r\n                    }, 0);\r\n\r\n                    return {\r\n                         ...group,\r\n                         totalCredits\r\n                    };\r\n               });\r\n          },\r\n          async submitPlan(){\r\n               if(confirm(\"ต้องการยืนยันผลของแผนการเรียนนี้ใช่หรือไม่\")){\r\n                    try {\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/updateAdjust_plan\", {\r\n                              std_id: this.std_id,\r\n                              adjust_id: this.adjust_id,\r\n                              plans: this.change_data,\r\n                              user: this.user.user_name,\r\n                              status: 1\r\n                         });\r\n                         if (response.data.result === \"1\") {\r\n                              this.change_data = response.data.datalist;\r\n                              this.$router.go(-1);\r\n                         } else {\r\n                              // alert(\"ไม่มีข้อมูลการเปลี่ยนแปลง\");\r\n                         }\r\n                    \r\n                    } catch (error) {\r\n                         console.error(\"Error fetching change plan:\", error);\r\n                    }\r\n               }\r\n          },\r\n          // เปิด Popup\r\n          openRejectPopup() {\r\n               this.showRejectPopup = true;\r\n          },\r\n          // ปิด Popup\r\n          closeRejectPopup() {\r\n               this.showRejectPopup = false;\r\n          },\r\n          async rejectPlan(){\r\n               if(confirm(\"ต้องการยืนยันผลของแผนการเรียนนี้ใช่หรือไม่\")){\r\n                    try {\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/updateAdjust_plan\", {\r\n                              std_id: this.std_id,\r\n                              adjust_id: this.adjust_id,\r\n                              plans: this.change_data,\r\n                              user: this.user.user_name,\r\n                              reason: this.rejectReason,\r\n                              status: 2\r\n                         });\r\n                         if (response.data.result === \"1\") {\r\n                              this.change_data = response.data.datalist;\r\n                              this.$router.go(-1);\r\n                         } else {\r\n                              // alert(\"ไม่มีข้อมูลการเปลี่ยนแปลง\");\r\n                         }\r\n                    } catch (error) {\r\n                         console.error(\"Error fetching change plan:\", error);\r\n                    }\r\n               }\r\n          },\r\n          goBack() {\r\n               this.$router.go(-1);\r\n          }\r\n     },\r\n     mounted() {\r\n          this.fetchStudent_plan().then(() => {\r\n          this.fetchChange_plan();\r\n    });\r\n}\r\n\r\n};\r\n</script>","import { render } from \"./tc_inspect_adjust.vue?vue&type=template&id=cd0f0f90\"\nimport script from \"./tc_inspect_adjust.vue?vue&type=script&lang=js\"\nexport * from \"./tc_inspect_adjust.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n          <MainLayout>\r\n               <div class=\"subject-table-page\" style=\"\">\r\n               <br>\r\n               <h1>รายงานแผนการเรียนประจำภาคเรียน</h1>\r\n               <select v-model=\"select_year\" style=\"font-size: 20px;\">\r\n                    <option value=\"\" disabled>เลือกรุ่นปีการศึกษา</option>\r\n                    <option v-for=\"y in year\" :key=\"y\" :value=\"y\">{{ y }}</option>\r\n               </select>\r\n               <div v-if=\"student_data.length\" style=\"margin-bottom: 200px;\">\r\n                    <h2>แผนการเรียนรายวิชาประจำภาคเรียน</h2>\r\n                    <table class=\"data-stdplan-table\">\r\n                    <thead>\r\n                    <tr>\r\n                         <th style=\"width:120px\">รหัสวิชา</th>\r\n                         <th>ชื่อวิชา</th>\r\n                         <th>หน่วยกิต</th>\r\n                         <th>ปีการศึกษา</th>\r\n                         <th>เทอม</th>\r\n                         <th>จำนวนนักศึกษา</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                   \r\n                    <template v-for=\"g in group_list\" :key=\"'g'+g.group_id\">\r\n                    <tbody v-if=\"tableRows.some(r => r.group_id === g.group_id)\">\r\n                         <tr>\r\n                         <td colspan=\"7\" style=\"font-weight:bold; text-align:left\">\r\n                              {{ g.group_id }} {{ g.group_name }}\r\n                         </td>\r\n                         </tr>\r\n                         <tr\r\n                         v-for=\"row in tableRows.filter(r => r.group_id === g.group_id)\"\r\n                         :key=\"row.subject_id + '-' + row.term\"\r\n                         >\r\n                         <td v-if=\"row.showHead\" :rowspan=\"row.rowspan\" style=\"vertical-align: top;\">{{ row.subject_id }}</td>\r\n                         <td v-if=\"row.showHead\" :rowspan=\"row.rowspan\" style=\"vertical-align:top; text-align:left;\">\r\n                              {{ row.subject_name }}\r\n                         </td>\r\n                         <td v-if=\"row.showHead\" :rowspan=\"row.rowspan\" style=\"vertical-align: top;\">\r\n                              {{ row.practical_credits + row.theory_credits }}\r\n                         </td>\r\n                         <td>{{ row.year === 3 ? select_year : Number(select_year)+1 }}</td>\r\n                         <td>{{ row.term }}</td>\r\n                         <td>{{ row.total_student }}</td>\r\n                         </tr>\r\n                    </tbody>\r\n                    </template>\r\n                    </table>\r\n                    <button class=\"btn-back\" style=\"font-size: 16px; background-color: #00cc00; width: 200px;\" @click=\"openPreviewWindow\">\r\n                         <i class=\"fa-solid fa-file-pdf\"></i> พิมพ์รายงาน\r\n                    </button>\r\n               </div>\r\n               <div v-if=\"!student_data.length\">\r\n                    <h2>กรุณาเลือกรุ่นปีการศึกษา</h2>\r\n               </div>\r\n               </div>\r\n          </MainLayout>\r\n     </template>\r\n     \r\n     <script>\r\n     import MainLayout from './main_layout.vue';\r\n     import axios from \"axios\";\r\n     \r\n     \r\n     export default {\r\n          name: 'tc_summery_plan',\r\n          components: {\r\n               MainLayout\r\n          },\r\n          data() {\r\n               return {\r\n                    year: [],\r\n                    select_year:\"\",\r\n                    students: [], // เก็บข้อมูลนักศึกษา\r\n                    student_data: [], // เก็บข้อมูลนักศึกษา\r\n                    structure: [], // เก็บข้อมูลโครงสร้างหลักสูตร\r\n                    student_plan: [], // เก็บข้อมูลแผนการเรียน\r\n                    open_subject: [], // เก็บข้อมูลวิชาที่เปิดสอน\r\n                    group_list: [], // เก็บข้อมูลกลุ่มวิชา\r\n                    std_open_subject: [], // เก็บข้อมูลการจับคู่ student_plan กับ open_subject\r\n               };\r\n          },\r\n          computed: {\r\n               tableRows () {\r\n                    // 1) แยกตาม group_id\r\n                    const gmap = Object.fromEntries(this.group_list.map(g => [g.group_id, g.group_name]))\r\n                    const rows = []\r\n\r\n                    // 2) จัดเรียงเพื่อให้ rowspan ทำงานสวย\r\n                    const byGroup = this.std_open_subject\r\n                         .slice()\r\n                         .sort((a, b) =>\r\n                         a.group_id - b.group_id ||\r\n                         a.subject_id.localeCompare(b.subject_id) ||\r\n                         a.term - b.term\r\n                         )\r\n\r\n                    // 3) คำนวณ rowspan\r\n                    let i = 0\r\n                    while (i < byGroup.length) {\r\n                         const curr = byGroup[i]\r\n                         const sameSubj = byGroup.filter(r =>\r\n                         r.group_id === curr.group_id && r.subject_id === curr.subject_id\r\n                         )\r\n                         const span = sameSubj.length   // เทอมกี่รอบ = rowspan\r\n\r\n                         sameSubj.forEach((r, idx) => {\r\n                         rows.push({\r\n                              ...r,\r\n                              group_name: gmap[r.group_id] || '',\r\n                              showHead: idx === 0,   // แถวแรกของ subject\r\n                              rowspan:   idx === 0 ? span : 0\r\n                         })\r\n                         })\r\n\r\n                         i += span\r\n                    }\r\n                    return rows\r\n               },\r\n          },\r\n\r\n          methods: {\r\n               async fetchStudent_list() {\r\n                    try {\r\n                    const response = await axios.get(\"http://127.0.0.1:3000/api/getStudent_plan\"); // URL ของ API\r\n                    if (response.data.result === \"1\") {\r\n                         console.log(response.data.datalist);\r\n                         this.students = response.data.datalist; // เก็บข้อมูลที่ได้ใน state\r\n                         this.extract_year();\r\n                    } \r\n                    }\r\n                    catch(error) {\r\n                         console.error(\"Error fetching student data:\", error);\r\n                    }\r\n               },\r\n               extract_year(){\r\n                    const allYears = this.students.map(s => s.batch_year); // ดึง year จากแต่ละ student\r\n                    this.year = [...new Set(allYears)].sort((a, b) => b - a); // กรองซ้ำออกด้วย Set\r\n               },\r\n               extract_students_by_year() {\r\n                    const student = this.students.filter(student =>\r\n                         student.batch_year === this.select_year && student.status === 1\r\n                    );\r\n                    this.student_data = student\r\n                    this.fetchStudent_plan();\r\n                    \r\n               },\r\n               async fetchStudent_plan(){\r\n               const student_id = this.student_data.map(s => s.std_id); // ดึง id ของนักศึกษา\r\n               this.student_plan = []; // ล้างข้อมูลเก่า\r\n               for(let i = 0; i < student_id.length; i++){\r\n                    try{\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                              std_id: student_id[i] // ส่ง id ของนักศึกษาไป\r\n                         });\r\n                         if (response.data.result === \"1\") {\r\n                              this.student_plan.push(...response.data.datalist);\r\n                              \r\n                         } else if(response.data.result === \"0\"){\r\n                              this.student_plan = [];\r\n                         }  \r\n                    }\r\n                    catch (error) {\r\n                         console.error(\"Error fetching subjects:\", error);\r\n                    }\r\n               }\r\n               this.gen_student_subject(); // เรียกใช้ฟังก์ชันเพื่อสร้าง subject\r\n          },\r\n          async fetchStructure(){ //ดึงข้อมูลกลุ่มวิชา\r\n               try {\r\n                    const response = await axios.get(\"http://127.0.0.1:3000/api/getStructure\",{\r\n                    }); // URL ของ API\r\n                    this.group_list = response.data.datalist;\r\n               } catch (error) {\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          async fetchOpen_subject(){\r\n               console.log(this.selectGroup)\r\n               try{\r\n                    const response = await axios.post(\"http://127.0.0.1:3000/api/getopensubject\",{\r\n                              \r\n                         }); \r\n                         if(response.data.result == \"1\"){\r\n                              this.open_subject = response.data.datalist;\r\n                              this.groupPlans();\r\n                              \r\n                         }\r\n                         else if(response.data.result == \"2\"){\r\n                              this.open_subject = [];\r\n                              this.groupPlans();\r\n                              \r\n                         }\r\n               }\r\n               catch(error){\r\n                    console.error(\"Error fetching subject:\", error);\r\n               }\r\n          },\r\n          gen_student_subject() {\r\n               this.std_open_subject = [];\r\n               /* 1) map หา open_subject (subject_id|term) */\r\n               const openMap = {};\r\n               this.open_subject.forEach(os => {\r\n                    const key = `${os.subject_id}|${os.term}`;\r\n                    if (!openMap[key]) openMap[key] = os;   // เก็บอันแรกพอ\r\n               });\r\n\r\n               /* 2) นับนักศึกษา (ใช้ study_year จาก student_plan) */\r\n               const counter = {}; // subject_id|term|year\r\n               this.student_plan.forEach(sp => {\r\n                    const openKey = `${sp.subject_id}|${sp.term}`;\r\n                    if (!openMap[openKey]) return;          // วิชาไม่เปิด → ข้าม\r\n                    const key = `${sp.subject_id}|${sp.term}|${sp.year}`;\r\n                    counter[key] = (counter[key] || 0) + 1;\r\n               });\r\n\r\n               /* 3) สร้าง rows */\r\n               let no = 1;\r\n               this.std_open_subject = Object.keys(counter).map(k => {\r\n                    const [subject_id, termStr, yearStr] = k.split('|');\r\n                    const open = openMap[`${subject_id}|${termStr}`];\r\n                    return {\r\n                         no: no++,\r\n                         subject_id,\r\n                         subject_name:      open.subject_name,\r\n                         theory_credits:    open.theory_credits,\r\n                         practical_credits: open.practical_credits,\r\n                         year:  Number(yearStr),          // ปีการศึกษา (ระดับชั้น)\r\n                         term:  Number(termStr),\r\n                         total_student: counter[k],\r\n                         group_id: open.group_id,\r\n                    };\r\n               });\r\n\r\n               /* เรียงตาม subject_id, year, term */\r\n               this.std_open_subject.sort((a, b) =>\r\n                    a.subject_id.localeCompare(b.subject_id) ||\r\n                    a.year - b.year ||\r\n                    a.term - b.term\r\n               );\r\n          },\r\n                    openPreviewWindow(){\r\n                    const title = encodeURIComponent(\"รายงานแผนการเรียนประจำภาคเรียน\");\r\n                    const students_plan = encodeURIComponent(JSON.stringify(this.std_open_subject));\r\n                    const group = encodeURIComponent(JSON.stringify(this.group_list));\r\n\r\n\r\n                    const pdfUrl = `http://127.0.0.1:3000/api/pdf_summery_plan?title=${title}&students_plan=${students_plan}&group=${group}&year=${this.select_year}`;\r\n\r\n                    // เปิดไฟล์ PDF ในแท็บใหม่ พร้อมชื่อไฟล์\r\n                    window.open(pdfUrl, \"_blank\");\r\n                         \r\n               },\r\n          \r\n          },\r\n          watch: {\r\n          select_year(newYear) {\r\n               console.log(\"Selected year:\", newYear);\r\n               // ทำการกรองข้อมูลนักศึกษาโดยใช้ปีที่เลือก\r\n               this.extract_students_by_year();\r\n          },\r\n          },\r\n          mounted() {\r\n               this.fetchStudent_list();\r\n               this.fetchStructure(); // เรียกใช้ฟังก์ชันเพื่อดึงข้อมูลกลุ่มวิชา\r\n               this.fetchOpen_subject(); // เรียกใช้ฟังก์ชันเพื่อดึงข้อมูลวิชาเปิดสอน\r\n          },\r\n     };\r\n     </script>","import { render } from \"./tc_summery_plan.vue?vue&type=template&id=f54279b8\"\nimport script from \"./tc_summery_plan.vue?vue&type=script&lang=js\"\nexport * from \"./tc_summery_plan.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n     <MainLayout>\r\n          <div class=\"subject-table-page\">\r\n               <br>\r\n               <h1>รายงานผลการเทียบโอน</h1>\r\n               <select v-model=\"select_year\" style=\"font-size: 20px;\">\r\n                    <option value=\"\" disabled>เลือกรุ่นปีการศึกษา</option>\r\n                    <option v-for=\"y in year\" :key=\"y\" :value=\"y\">{{ y }}</option>    \r\n               </select>\r\n               <div v-if=\"student_data.length\">\r\n                    <h2>รายชื่อนักศึกษาปี {{ select_year }}</h2>\r\n                    <table class=\"data-stdplan-table\">\r\n                         <thead>\r\n                              <tr>\r\n                                   <th>รหัสนักศึกษา</th>\r\n                                   <th>ชื่อ-นามสกุล</th>\r\n                                   <th>หน่วยกิตบังคับ</th>\r\n                                   <th>เทียบโอนได้</th>\r\n                                   <th>เรียนเพิ่ม</th>\r\n                              </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                              <tr v-for=\"student in student_data\" :key=\"student.std_id\">\r\n                                   <td>{{ student.std_id }}</td>\r\n                                   <td style=\"text-align: left;\">{{ student.std_name }} {{ student.std_last }}</td>\r\n                                   <td>125</td>\r\n                                   <td>{{ student.total_Tcredits }}</td>\r\n                                   <td>{{ student.total_Pcredits }}</td>\r\n                              </tr>\r\n                         </tbody>\r\n                    </table>\r\n                    <button class=\"btn-back\" style=\"font-size: 16px; background-color: #00cc00; width: 200px;\" @click=\"openPreviewWindow\">\r\n                         <i class=\"fa-solid fa-file-pdf\"></i> พิมพ์รายงาน\r\n                    </button>\r\n               </div>\r\n               <div v-if=\"!student_data.length\">\r\n                    <h2>กรุณาเลือกรุ่นปีการศึกษา</h2>\r\n               </div>\r\n          </div>\r\n     </MainLayout>\r\n</template>\r\n\r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n     name: 'tc_summery_tranfer',\r\n     components: {\r\n          MainLayout\r\n     },\r\n     data() {\r\n          return {\r\n               year: [],\r\n               select_year:\"\",\r\n               students: [], \r\n               student_data: [], // เก็บข้อมูลนักศึกษา\r\n               tranfer_list: [], // เก็บข้อมูลการเทียบโอน\r\n               student_plan: [], // เก็บข้อมูลแผนการเรียน\r\n          };\r\n     },\r\n     computed: {\r\n          filteredStudents() {\r\n               return this.students.filter(student => \r\n                    student.batch_year === this.select_year && student.status === 1\r\n               );\r\n          },\r\n     },\r\n     methods: {\r\n          async fetchStudent_list() {\r\n               try {\r\n               const response = await axios.get(\"http://127.0.0.1:3000/api/getStudent_plan\"); // URL ของ API\r\n               if (response.data.result === \"1\") {\r\n                    console.log(response.data.datalist);\r\n                    this.students = response.data.datalist; \r\n                    this.extract_year(); \r\n               } \r\n               }\r\n               catch(error) {\r\n                    console.error(\"Error fetching student data:\", error);\r\n               }\r\n          },\r\n\r\n          extract_year(){\r\n               const allYears = this.students.map(s => s.batch_year); // ดึง year จากแต่ละ student\r\n               this.year = [...new Set(allYears)].sort((a, b) => b - a); // กรองซ้ำออกด้วย Set\r\n          },\r\n          extract_students_by_year() {\r\n               const student = this.students.filter(student =>\r\n                    student.batch_year === this.select_year && student.status === 1\r\n               );\r\n               this.student_data = student\r\n               this.fetchTransfer_list();\r\n               this.fetchStudent_plan();\r\n          },\r\n          async fetchTransfer_list(){ // ดึงข้อมูลแผนการเรียนที่เทียบโอนมา\r\n               const student_id = this.student_data.map(s => s.std_id); // ดึง id ของนักศึกษา\r\n               this.tranfer_list = []; // ล้างข้อมูลเก่า\r\n               for(let i = 0; i < student_id.length; i++){\r\n                    try{\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/getTranfer_plan\",{\r\n                              std_id: student_id[i] // ส่ง id ของนักศึกษาไป\r\n                         }); // URL ของ API\r\n                         if(response.data.result == \"1\"){\r\n                              const tranfer = response.data.datalist;\r\n                              const total_Tcredits = tranfer.reduce((sum, item) => sum + (item.theory_credits + item.practical_credits), 0); // คำนวณหน่วยกิตรวม\r\n                              const std = this.student_data.find(s => s.std_id === student_id[i]); // ค้นหานักศึกษาใน student_data\r\n                              if(std) {\r\n                                   std.total_Tcredits = total_Tcredits; // เก็บหน่วยกิตรวมใน student_data\r\n                              }\r\n                              // this.transfer_list[student_id[i]] = response.data.datalist; // เก็บข้อมูลเทียบโอนลงใน transfer_list\r\n                         }\r\n                         else if(response.data.result == \"0\"){\r\n                              // this.transfer_list = [];\r\n                         }\r\n                    }\r\n                    catch(error){\r\n                         console.error(\"Error fetching subject:\", error);  \r\n                    }\r\n               }\r\n          },\r\n          async fetchStudent_plan(){\r\n               const student_id = this.student_data.map(s => s.std_id); // ดึง id ของนักศึกษา\r\n               this.student_plan = []; // ล้างข้อมูลเก่า\r\n               for(let i = 0; i < student_id.length; i++){\r\n                    try{\r\n                         const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n                              std_id: student_id[i] // ส่ง id ของนักศึกษาไป\r\n                         });\r\n                         if (response.data.result === \"1\") {\r\n                              const plan = response.data.datalist;\r\n                              const total_Pcredits = plan.reduce((sum, item) => sum + (item.theory_credits + item.practical_credits), 0); // คำนวณหน่วยกิตรวม\r\n                              const std = this.student_data.find(s => s.std_id === student_id[i]); // ค้นหานักศึกษาใน student_data\r\n                              if(std) {\r\n                                   std.total_Pcredits = total_Pcredits; // เก็บหน่วยกิตรวมใน student_data\r\n                              }\r\n                              // this.student_plan[student_id[i]] = response.data.datalist; // เก็บข้อมูลแผนการเรียนลงใน student_plan\r\n                         } else if(response.data.result === \"0\"){\r\n                              this.student_plan = [];\r\n                         }  \r\n                    }\r\n                    catch (error) {\r\n                         console.error(\"Error fetching subjects:\", error);\r\n                    }\r\n               }\r\n          },\r\n          openPreviewWindow(){\r\n                    const title = encodeURIComponent(\"รายงานผลการเทียบโอน\");\r\n                    const content = encodeURIComponent(JSON.stringify(this.student_data));\r\n\r\n                    const pdfUrl = `http://127.0.0.1:3000/api/pdf_summery_tranfer?title=${title}&content=${content}&year=${this.select_year}`;\r\n\r\n                    // เปิดไฟล์ PDF ในแท็บใหม่ พร้อมชื่อไฟล์\r\n                    window.open(pdfUrl, \"_blank\");\r\n                         \r\n               },\r\n          \r\n     },\r\n     watch: {\r\n          select_year(newYear) {\r\n               console.log(\"Selected year:\", newYear);\r\n               // ทำการกรองข้อมูลนักศึกษาโดยใช้ปีที่เลือก\r\n               this.extract_students_by_year();\r\n          }\r\n\r\n     },\r\n     mounted() {\r\n          this.fetchStudent_list();\r\n     },\r\n};\r\n</script>","import { render } from \"./tc_summery_tranfer.vue?vue&type=template&id=0d999332\"\nimport script from \"./tc_summery_tranfer.vue?vue&type=script&lang=js\"\nexport * from \"./tc_summery_tranfer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n          <MainLayout>\r\n               <div class=\"subject-table-page\">\r\n                    <br>\r\n                    <h1>รายงานแผนการเรียนรายบุคคล</h1>\r\n                    <select v-model=\"select_year\" style=\"font-size: 20px;\">\r\n                         <option value=\"\" disabled>เลือกรุ่นปีการศึกษา</option>\r\n                         <option v-for=\"y in year\" :key=\"y\" :value=\"y\">{{ y }}</option>    \r\n                    </select>\r\n                    <div v-if=\"student_data.length\">\r\n                         <h2>รายชื่อนักศึกษาปี {{ select_year }}</h2>\r\n                         <table class=\"data-stdplan-table\">\r\n                              <thead>\r\n                                   <tr>\r\n                                        <th>รหัสนักศึกษา</th>\r\n                                        <th>ชื่อ-นามสกุล</th>\r\n                                        <th>รุ่นปีการศึกษา</th>\r\n                                        <th></th>\r\n\r\n                                   </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                   <tr v-for=\"student in student_data\" :key=\"student.std_id\">\r\n                                        <td>{{ student.std_id }}</td>\r\n                                        <td style=\"text-align: left;\">{{ student.std_name }} {{ student.std_last }}</td>\r\n                                        <td>{{ student.batch_year }}</td>\r\n                                        <td>\r\n                                                  <button class=\"btn-add\" style=\"font-size: 16px; width: 100px;\" @click=\"inspectPlan(student.std_id, student.stdplan_id, student.status, student.std_name, student.std_last, student.batch_year)\">\r\n                                                  <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                                                  </button>\r\n                                        </td>\r\n                                   </tr>\r\n                              </tbody>\r\n                         </table>\r\n                         <button class=\"btn-back\" style=\"font-size: 16px; background-color: #00cc00; width: 200px;\" @click=\"openPreviewWindow\">\r\n                              <i class=\"fa-solid fa-file-pdf\"></i> พิมพ์รายงาน\r\n                         </button>\r\n                    </div>\r\n                    <div v-if=\"!student_data.length\">\r\n                         <h2>กรุณาเลือกรุ่นปีการศึกษา</h2>\r\n                    </div>\r\n               </div>\r\n          </MainLayout>\r\n     </template>\r\n\r\n<script>\r\nimport MainLayout from './main_layout.vue';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n     name: 'tc_summery_std',\r\n     components: {\r\n          MainLayout\r\n     },\r\n     data() {\r\n          return {\r\n               year: [],\r\n               select_year:\"\",\r\n               students: [], \r\n               student_data: [], // เก็บข้อมูลนักศึกษา\r\n               tranfer_list: [], // เก็บข้อมูลการเทียบโอน\r\n               student_plan: [], // เก็บข้อมูลแผนการเรียน\r\n          };\r\n     },\r\n     computed: {\r\n          filteredStudents() {\r\n               return this.students.filter(student => \r\n                    student.batch_year === this.select_year && student.status === 1\r\n               );\r\n          },\r\n     },\r\n     methods: {\r\n          async fetchStudent_list() {\r\n               try {\r\n               const response = await axios.get(\"http://127.0.0.1:3000/api/getStudent_plan\"); // URL ของ API\r\n               if (response.data.result === \"1\") {\r\n                    console.log(response.data.datalist);\r\n                    this.students = response.data.datalist; \r\n                    this.extract_year(); \r\n               } \r\n               }\r\n               catch(error) {\r\n                    console.error(\"Error fetching student data:\", error);\r\n               }\r\n          },\r\n\r\n          extract_year(){\r\n               const allYears = this.students.map(s => s.batch_year); // ดึง year จากแต่ละ student\r\n               this.year = [...new Set(allYears)].sort((a, b) => b - a); // กรองซ้ำออกด้วย Set\r\n          },\r\n          extract_students_by_year() {\r\n               const student = this.students.filter(student =>\r\n                    student.batch_year === this.select_year && student.status === 1\r\n               );\r\n               this.student_data = student\r\n          //      this.fetchTransfer_list();\r\n          //      this.fetchStudent_plan();\r\n          },\r\n          // async fetchTransfer_list(){ // ดึงข้อมูลแผนการเรียนที่เทียบโอนมา\r\n          //      const student_id = this.student_data.map(s => s.std_id); // ดึง id ของนักศึกษา\r\n          //      this.tranfer_list = []; // ล้างข้อมูลเก่า\r\n          //      for(let i = 0; i < student_id.length; i++){\r\n          //           try{\r\n          //                const response = await axios.post(\"http://127.0.0.1:3000/api/getTranfer_plan\",{\r\n          //                     std_id: student_id[i] // ส่ง id ของนักศึกษาไป\r\n          //                }); // URL ของ API\r\n          //                if(response.data.result == \"1\"){\r\n          //                     const tranfer = response.data.datalist;\r\n          //                     const total_Tcredits = tranfer.reduce((sum, item) => sum + (item.theory_credits + item.practical_credits), 0); // คำนวณหน่วยกิตรวม\r\n          //                     const std = this.student_data.find(s => s.std_id === student_id[i]); // ค้นหานักศึกษาใน student_data\r\n          //                     if(std) {\r\n          //                          std.total_Tcredits = total_Tcredits; // เก็บหน่วยกิตรวมใน student_data\r\n          //                     }\r\n          //                     // this.transfer_list[student_id[i]] = response.data.datalist; // เก็บข้อมูลเทียบโอนลงใน transfer_list\r\n          //                }\r\n          //                else if(response.data.result == \"0\"){\r\n          //                     // this.transfer_list = [];\r\n          //                }\r\n          //           }\r\n          //           catch(error){\r\n          //                console.error(\"Error fetching subject:\", error);  \r\n          //           }\r\n          //      }\r\n          // },\r\n          // async fetchStudent_plan(){\r\n          //      const student_id = this.student_data.map(s => s.std_id); // ดึง id ของนักศึกษา\r\n          //      this.student_plan = []; // ล้างข้อมูลเก่า\r\n          //      for(let i = 0; i < student_id.length; i++){\r\n          //           try{\r\n          //                const response = await axios.post(\"http://127.0.0.1:3000/api/getStudentplan_list\", {\r\n          //                     std_id: student_id[i] // ส่ง id ของนักศึกษาไป\r\n          //                });\r\n          //                if (response.data.result === \"1\") {\r\n          //                     const plan = response.data.datalist;\r\n          //                     const total_Pcredits = plan.reduce((sum, item) => sum + (item.theory_credits + item.practical_credits), 0); // คำนวณหน่วยกิตรวม\r\n          //                     const std = this.student_data.find(s => s.std_id === student_id[i]); // ค้นหานักศึกษาใน student_data\r\n          //                     if(std) {\r\n          //                          std.total_Pcredits = total_Pcredits; // เก็บหน่วยกิตรวมใน student_data\r\n          //                     }\r\n          //                     // this.student_plan[student_id[i]] = response.data.datalist; // เก็บข้อมูลแผนการเรียนลงใน student_plan\r\n          //                } else if(response.data.result === \"0\"){\r\n          //                     this.student_plan = [];\r\n          //                }  \r\n          //           }\r\n          //           catch (error) {\r\n          //                console.error(\"Error fetching subjects:\", error);\r\n          //           }\r\n          //      }\r\n          // },\r\n          async inspectPlan(std_id, stdplan_id, status, std_name, std_last, year){ // ไปหน้าดูแผนการเรียนรายคน\r\n                    console.log(status)\r\n                    if(status == 0){\r\n                         status = \"0\"\r\n                    }\r\n                    else if(status == 2){\r\n                         status = \"2\"\r\n                    }\r\n                    else if(status == 3){\r\n                         status = \"3\"\r\n                    }\r\n                    else if(status == 4){\r\n                         status = \"4\"\r\n                    }\r\n                    else{\r\n                         status = \"1\"\r\n                    }\r\n                    console.log(status);\r\n                    this.$router.push({\r\n                         name: \"tc_inspect_plan\", \r\n                         query: { std_id: std_id, stdplan_id: stdplan_id, status: status, std_name: std_name, std_last: std_last, year:year}, // ส่งข้อมูลผ่าน query\r\n                    });\r\n               },\r\n          openPreviewWindow(){\r\n                    // กรองเฉพาะนักศึกษาที่มี status ยืนยัน\r\n                    const confirmedStudents = this.student_data.filter(student => student.status === 1);\r\n                    console.log(\"นักศึกษาที่มี status = 1:\", confirmedStudents);\r\n\r\n                    const status = 1\r\n                    const title = encodeURIComponent(\"แผนการเรียนรายบุคคล\");\r\n                    const content = encodeURIComponent(JSON.stringify(confirmedStudents));\r\n\r\n                    const pdfUrl = `http://127.0.0.1:3000/api/pdf_generate?title=${title}&content=${content}&status=${status}`;\r\n\r\n                    // เปิดไฟล์ PDF ในแท็บใหม่ พร้อมชื่อไฟล์\r\n                    window.open(pdfUrl, \"_blank\");\r\n                         \r\n               },\r\n          \r\n     },\r\n     watch: {\r\n          select_year(newYear) {\r\n               console.log(\"Selected year:\", newYear);\r\n               // ทำการกรองข้อมูลนักศึกษาโดยใช้ปีที่เลือก\r\n               this.extract_students_by_year();\r\n          }\r\n\r\n     },\r\n     mounted() {\r\n          this.fetchStudent_list();\r\n     },\r\n};\r\n</script>","import { render } from \"./tc_summery_std.vue?vue&type=template&id=4c0decec\"\nimport script from \"./tc_summery_std.vue?vue&type=script&lang=js\"\nexport * from \"./tc_summery_std.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\r\nimport homePage from \"@/components/home_page.vue\";\r\nimport loginPage from \"@/components/login_page.vue\";\r\nimport tc_open_subject from \"@/components/tc_OPsubject_page.vue\";\r\nimport tc_adddata_bot from \"@/components/tc_adddata_bot.vue\";\r\nimport tc_standard_plan from \"@/components/tc_standardP_page.vue\";\r\nimport tc_editStandard_plan from \"@/components/tc_editStandardplan.vue\";\r\nimport tc_student_list from \"@/components/tc_student_list_page.vue\";\r\nimport tc_editStudent_plan from \"@/components/tc_editStudent_plan.vue\";\r\nimport tc_submitplan_list from \"@/components/tc_submitplan_list.vue\";\r\nimport tc_inspect_plan from \"@/components/tc_inspect_plan.vue\";\r\nimport std_plan_page from \"@/components/std_plan_page.vue\";\r\nimport std_changePlan_page from \"@/components/std_changePlan_page.vue\";\r\nimport tc_adjust_list from \"@/components/tc_adjust_list.vue\";\r\nimport tc_inspect_adjust from \"@/components/tc_inspect_adjust.vue\";\r\nimport tc_summery_plan from \"@/components/tc_summery_plan.vue\";\r\nimport tc_summery_tranfer from \"@/components/tc_summery_tranfer.vue\";\r\nimport tc_summery_std from \"@/components/tc_summery_std.vue\";\r\n\r\nconst routes = [\r\n  { // เส้นทางสำหรับหน้าแรก\r\n    path: \"/\",\r\n    name: \"homePage\", // ชื่อของเส้นทางควรเป็น string\r\n    component: homePage,\r\n  },\r\n  { // เส้นทางสำหรับหน้าเข้าสู่ระบบ\r\n    path: \"/loginPage\",\r\n    name: \"loginPage\", // ชื่อของเส้นทางควรเป็น string\r\n    component: loginPage,\r\n  },\r\n  { // เส้นทางสำหรับหน้ากำหนดการเปิดสอน\r\n    path: \"/open_subject\",\r\n    name: \"tc_open_subject\", // ชื่อของเส้นทางควรเป็น string\r\n    component: tc_open_subject,\r\n    meta: { requiresAuth: true }, // ระบุว่าต้องล็อกอินก่อน\r\n  },\r\n  { // เส้นทางสำหรับเพิ่มข้อมูล Bot\r\n    path: \"/data_bot\",\r\n    name: \"tc_adddata_bot\", // ชื่อของเส้นทางควรเป็น string\r\n    component: tc_adddata_bot,\r\n    meta: { requiresAuth: true }, // ระบุว่าต้องล็อกอินก่อน\r\n  },\r\n  {\r\n    // เส้นทางสำหรับเพิ่มแผนการเรียนมาตรฐาน\r\n    path: \"/standard_plan\",\r\n    name: \"tc_standard_plan\",\r\n    component: tc_standard_plan,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/edit_standard_plan\",\r\n    name: \"tc_editStandard_plan\",\r\n    component: tc_editStandard_plan,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/student_plan_list\",\r\n    name: \"tc_student_list\",\r\n    component: tc_student_list,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/edit_student_plan\",\r\n    name: \"tc_editStudent_plan\",\r\n    component: tc_editStudent_plan,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/submitplan\",\r\n    name: \"tc_submitplan_list\",\r\n    component: tc_submitplan_list,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/inspectplan\",\r\n    name: \"tc_inspect_plan\",\r\n    component: tc_inspect_plan,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/student_plan\",\r\n    name: \"student_plan_page\",\r\n    component: std_plan_page,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/student_change_plan\",\r\n    name: \"student_changePlan_page\",\r\n    component: std_changePlan_page,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/adjust_list\",\r\n    name: \"tc_adjust_list\",\r\n    component: tc_adjust_list,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/inspect_adjust\",\r\n    name: \"tc_inspect_adjust\",\r\n    component: tc_inspect_adjust,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/summery_tranfer\",\r\n    name: \"tc_summery_tranfer\",\r\n    component: tc_summery_tranfer,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/summery_plan\",\r\n    name: \"tc_summery_plan\",\r\n    component: tc_summery_plan,\r\n    meta: {requiresAuth: true},\r\n  },\r\n  {\r\n    path: \"/summery_student\",\r\n    name: \"tc_summery_std\",\r\n    component: tc_summery_std,\r\n    meta: {requiresAuth: true},\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n\r\n// Middleware สำหรับตรวจสอบสิทธิ์การเข้าถึงหน้า\r\nrouter.beforeEach((to, from, next) => {\r\n  const user = localStorage.getItem(\"user_data\"); // ตรวจสอบข้อมูลผู้ใช้ใน LocalStorage\r\n  if (to.meta.requiresAuth && !user) {\r\n    next(\"/\"); // ถ้าหน้าต้องล็อกอินและผู้ใช้ยังไม่ได้ล็อกอิน จะถูกส่งไปหน้า homepage\r\n  } else {\r\n    next(); // อนุญาตให้ไปหน้าถัดไป\r\n  }\r\n});\r\n\r\nexport default router;\r\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from \"./store\"; // Import Store\nimport router from './router'\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'; \nimport { library } from '@fortawesome/fontawesome-svg-core'; \nimport { fas } from '@fortawesome/free-solid-svg-icons'; // นำเข้าไอคอนแบบ solid\n\n// สร้างไลบรารีและเพิ่มไอคอนที่ต้องการ\nlibrary.add(fas);\n\nconst app = createApp(App);\n\n// ตั้งค่า axios ให้สามารถใช้งานได้ทุกที่ในแอปพลิเคชัน\napp.config.globalProperties.$axios = axios;\n\n// ใช้ Vuex Store\napp.use(store); // เพิ่ม Store ที่นี่\n\n// ใช้ Vue Router และเพิ่ม FontAwesomeIcon component\napp.use(router);\napp.component('font-awesome-icon', FontAwesomeIcon); // สร้าง component ไอคอน\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebapp_project\"] = self[\"webpackChunkwebapp_project\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8421); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_ctx","user","_createBlock","_component_MainLayout","key","default","_withCtx","_createVNode","_component_router_view","_","class","_createElementVNode","_hoisted_2","onClick","_cache","args","toggleSidebar","style","$setup","$options","isAdmin","isOfficer","isTeacher","_hoisted_3","_hoisted_4","_toDisplayString","user_name","user_last","getStatusLabel","user_status","logout","_createCommentVNode","isStudent","_hoisted_5","_hoisted_6","std_name","std_last","_component_router_link","to","_Transition","name","_normalizeClass","isSidebarVisible","_hoisted_7","_renderSlot","$slots","setup","store","useStore","computed","state","provide","mapState","this","methods","mapActions","confirm","localStorage","removeItem","$store","dispatch","$router","push","status","statusMap","__exports__","components","MainLayout","created","loadUserData","userData","getItem","setUserData","JSON","parse","clearUserData","render","createStore","mutations","setItem","stringify","TOGGLE_SIDEBAR","SHOW_SIDEBAR","HIDE_SIDEBAR","actions","commit","showSidebar","hideSidebar","getters","isAuthenticated","getUser","_Fragment","src","_imports_0","alt","_renderList","structure_group","groups","category","$event","toggleCategory","expandedCategories","group","group_id","fetchSubject","group_name","$data","subject_list","length","_hoisted_8","_hoisted_9","_hoisted_10","subject","subject_id","subject_nameTh","_hoisted_11","adjust_list","item","std_id","date_add","date_updated","user_ap","_hoisted_12","convertStatusToText","_hoisted_13","_hoisted_14","reason","inject","value","ref","expandedGroups","toggleGroup","groupId","console","log","data","group_list","structure_group_subject","groupedBySort","reduce","acc","sort","groupedSubjects","Object","values","forEach","groupArray","subjects","fetchStructure","response","axios","get","datalist","error","post","result","fetchAdjust_list","sort_List","a","b","dateA","convert_date","dateB","thaiDateStr","day","month","year","split","map","Number","christianYear","Date","statusMapping","mounted","onSubmit","_withModifiers","handleLogin","for","type","username","placeholder","required","password","message","storedUser","selectedSemester","term1","term2","term","code","subject_name","theory_credits","practical_credits","del_openSubject","selectGroup","onChange","disabled","selectsubject","addSubject","_createTextVNode","selected_course","course_list","fetchSubjectlist","resetResponse","open_id","selectedOpen_id","alert","watch","newValue","question","questionError","addQuestion","answer","answerError","addAnswer","select_year","y","plans_list","index","plan_id","batch_year","editPlan","addPlan","dataList","fetchStandardPlan","extract_year","allYears","s","Set","extract_plans_by_year","plans","filter","query","newYear","change_popup","sub_name","select_term","open_subject","sub_id","update_plan","closePopup","groupedPlan","yearTerm","openChangePopup","del_Subject","colspan","totalCredits","_hoisted_15","spacialTerm","filteredGroups","_hoisted_17","_hoisted_16","fetchOpen_subject","open","_hoisted_19","_hoisted_18","selectGroup_id","_hoisted_21","_hoisted_20","_hoisted_22","totalAllCredits","_hoisted_23","del_StandardPlan","resetChanges","saveChanges","_hoisted_24","goBack","$route","data_list","open_list","temp_standrad_list","sort_open_list","calculateTotalCredits","sum","plan","some","openItem","old_data","new_data","sort_openlist","groupPlans","fetchStandard_list","tempItem","totalCredit","selectData","find","String","selectSubject","pCredits","tCredits","newPcredits","newTcredits","newPlan","filteredPlans","totalPcredits","totalTcredits","existingPlan","hasChanged","oldData","newData","planData","Array","isArray","yearTermPairs","select_status","student_data","sortedStudents","stdplan_id","students","fetchStudent_list","extract_students_by_year","student","sort_by_status","selectPlan","fetchPlan_list","removeFromTemp_data","addToTemp_data","_hoisted_25","_hoisted_26","totalTransferCredits","_hoisted_27","credit_status","_hoisted_28","_id","_hoisted_29","_hoisted_30","required_credits","tranfer_credits","need_credit","earned_credits","credit_isneed","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","totalPracticalCredits","transfer_list","totalTheoryCredits","std_planlist","temp_planlist","fetchTransfer_list","fetchStandardPlan_list","transferItem","fetchStudent_plan","mergeCredits","hasIncompleteStatus","tranfers_plan","totalCredits_need","totalCredits_tranfer","totalCredits_all","credit_need","credit","now","toString","go","inspectPlan","openPreviewWindow","confirmedStudents","title","encodeURIComponent","content","pdfUrl","window","subject_group_id","openRejectPopup","showRejectPopup","rejectReason","rows","cols","rejectPlan","closeRejectPopup","submitPlan","_component_font_awesome_icon","icon","goToChangePlan","adjust_status","tempPlan","originalPlan","changedPlans","originalItem","changedFields","keys","student_list","inspectAdjust","adjust_id","groupedOriData","_normalizeStyle","checkHasChanges","backgroundColor","width","hight","textAlign","totalCreditsOriData","groupedChangeData","changed","hasChanges","totalCreditsChangeData","ori_data","change_data","temp_change_data","fetchChange_plan","existingPlans","mergeDataWithChanges","oriData","changeData","mergedData","changeItem","indexInOri","findIndex","oriItem","match","dataSource","from","pair","localeCompare","groupedData","theoryCredits","practicalCredits","then","g","tableRows","r","row","showHead","rowspan","total_student","structure","student_plan","std_open_subject","gmap","fromEntries","byGroup","slice","i","curr","sameSubj","span","idx","student_id","gen_student_subject","openMap","os","counter","sp","openKey","no","k","termStr","yearStr","students_plan","total_Tcredits","total_Pcredits","tranfer_list","filteredStudents","tranfer","std","routes","path","component","homePage","loginPage","tc_open_subject","meta","requiresAuth","tc_adddata_bot","tc_standard_plan","tc_editStandard_plan","tc_student_list","tc_editStudent_plan","tc_submitplan_list","tc_inspect_plan","std_plan_page","std_changePlan_page","tc_adjust_list","tc_inspect_adjust","tc_summery_tranfer","tc_summery_plan","tc_summery_std","router","createRouter","history","createWebHistory","process","beforeEach","next","library","add","fas","app","createApp","App","config","globalProperties","$axios","use","FontAwesomeIcon","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}